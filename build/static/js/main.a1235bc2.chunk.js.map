{"version":3,"sources":["components/Completions/Completions.module.scss","components/Entities/Entities.module.scss","components/Relations/Relations.module.scss","components/Entity/Entity.module.scss","components/AnnotateApp/AnnotateApp.module.scss","components/Tools/Styles.module.scss","components/Dialog/Dialog.module.scss","components/Controls/Controls.module.scss","styles/global.module.scss","components/Panel/Panel.module.scss","regions/TextAreaRegion/TextAreaRegion.module.scss","components/ImageView/ImageView.module.scss","tools/Tools.module.scss","components/Hint/Hint.module.scss","components/Node/Node.module.scss","components/Segment/Segment.module.scss","components/SimpleBadge/SimpleBadge.module.scss","components/Waveform/Waveform.module.scss","tags/object/Text/Text.module.scss","tags/object/AudioPlus/AudioPlus.module.scss","axios.js","context/UserContext.js","context/AppContext.js","hoc/Wrapper.js","components/UI/Input/ValidatorInput/ValidatorInput.js","hoc/RTL/RTL.js","components/From/SigninForm/SigninForm.js","assets/images/logo.png","components/CircleImage/CircleImage.js","assets/images/illustration_login.png","pages/LoginPage/LoginPage.js","components/UI/Dialog/DialogTransition.js","components/UI/Dialog/MessageDialog/MessageDialog.js","components/UI/Snackbar/SnackbarTransition.js","components/UI/Snackbar/MessageSnackbar/MessageSnackbar.js","components/UI/Loader/Loader.js","components/AppBar/AccountInfo/AccountInfo.js","components/AppBar/AppBar.js","context/HomeContext.js","components/Drawer/Drawer.js","components/Table/Progress/Progress.js","components/Table/Table.js","pages/HomePage/HomePage.js","components/Modal/DialogTransition.js","components/Modal/MessageDialog/MessageDialog.js","core/Registry.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/floodfill.js","utils/image.js","utils/rle.js","utils/date.js","utils/canvas.js","utils/html.js","utils/index.js","utils/debounce.js","utils/styles.js","components/Wrapper/Wrapper.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Debug.js","components/Panel/Panel.js","components/Predictions/Predictions.js","components/Segment/Segment.js","core/Hotkey.js","components/Settings/Settings.js","components/Node/Node.js","components/SimpleBadge/SimpleBadge.js","components/Entities/Entities.js","components/Entity/Entity.js","components/Relations/Relations.js","components/SideColumn/SideColumn.js","tags/object/Audio/Controls.js","components/Infomodal/Infomodal.js","tags/object/Base.js","components/Tags/Object.js","components/Waveform/Waveform.js","core/Template.js","mixins/ProcessAttrs.js","tags/object/AudioHOC.js","tags/object/Audio.js","mixins/WithStates.js","core/Constants.js","mixins/Normalization.js","mixins/Regions.js","mixins/Required.js","mixins/PerRegion.js","core/Types.js","regions/TextAreaRegion.js","tags/control/Base.js","tags/control/TextArea.js","mixins/SelectedModel.js","mixins/Visibility.js","tags/control/Choice.js","tags/control/Choices.js","mixins/LabelMixin.js","tags/control/Label.js","tags/control/Labels.js","tags/control/Rating.js","regions/AudioRegion.js","tags/object/AudioPlus.js","mixins/SpanText.js","tags/control/HyperTextLabels.js","regions/HyperTextRegion.js","tags/object/HyperText.js","tools/Base.js","components/Tools/Slider.js","mixins/Tool.js","tags/control/Brush.js","tags/control/BrushLabels.js","components/ImageView/LabelOnRegion.js","regions/BrushRegion.js","tools/Brush.js","components/Tools/Basic.js","tools/Erase.js","tags/control/KeyPoint.js","tags/control/KeyPointLabels.js","regions/KeyPointRegion.js","tools/KeyPoint.js","tags/control/Polygon.js","tags/control/PolygonLabels.js","regions/PolygonPoint.js","regions/PolygonRegion.js","tools/Polygon.js","tags/control/Rectangle.js","tags/control/RectangleLabels.js","regions/RectRegion.js","mixins/DrawingTool.js","tools/Rect.js","tags/control/Ellipse.js","tags/control/EllipseLabels.js","regions/EllipseRegion.js","tools/Ellipse.js","tools/Zoom.js","tools/Rotate.js","components/Tools/SliderDropDown.js","tools/Brightness.js","tools/Contrast.js","tools/FloodFill.js","components/ImageGrid/ImageGrid.js","components/ImageTransformer/ImageTransformer.js","components/ImageView/ImageView.js","tools/Manager.js","tags/object/Image.js","regions/TextRegion.js","tags/object/Text.js","tags/control/List.js","tags/control/Pairwise.js","tags/control/Ranker.js","tags/control/Shortcut.js","tags/control/Relations.js","tags/control/Relation.js","components/Dialog/Dialog.js","tags/visual/Dialog.js","tags/visual/Header.js","tags/visual/Table.js","tags/visual/View.js","tags/visual/Style.js","tags/visual/Filter.js","components/AnnotateApp/AnnotateApp.js","regions/index.js","stores/NormalizationStore.js","stores/RegionStore.js","stores/RelationStore.js","core/TimeTraveller.js","stores/CompletionStore.js","stores/ProjectStore.js","stores/SettingsStore.js","stores/TaskStore.js","stores/UserStore.js","stores/AppStore.js","core/External.js","utils/messages.js","env/production.js","pages/AnnotatePage/AnnotatePage.js","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","UserContext","React","createContext","isAuth","token","pk","firstName","lastName","username","email","password","setUserInformation","UserContextProvider","Provider","Consumer","AppContext","isLoading","openLoadingHandler","closeLoadingHandler","messageDialogIsOpen","messageDialogType","messageDialogText","openMessageDialogHandler","closeMessageDialogHandler","messageSnackbarIsOpen","messageSnackbarType","messageSnackbarText","openMessageSnackbarHandler","closeMessageSnackbarHandler","AppContextProvider","Wrapper","props","children","ValidatorInput","cacheRtl","createCache","key","stylisPlugins","rtlPlugin","RTL","value","SigninForm","emailUsernameHandler","event","setState","state","email_username","target","passwordHandler","showPasswordHandler","showPassword","rememberMeHandler","rememberMe","lastRememberMe","localStorage","getItem","console","log","this","className","Grid","container","rowSpacing","justifyContent","item","xs","variant","margin","required","fullWidth","id","label","name","dir","autoComplete","onChange","InputLabelProps","style","fontFamily","validators","errorMessages","InputProps","endAdornment","InputAdornment","position","AccountCircle","type","errorStyle","color","errorText","IconButton","padding","onClick","onMouseDown","handleMouseDownPassword","Visibility","VisibilityOff","Button","href","FormControlLabel","checked","control","Checkbox","defaultChecked","labelPlacement","sx","marginLeft","marginTop","fontWeight","backgroundColor","signinHandler","endIcon","fontSize","border","borderColor","changeSideBarHandler","Divider","width","size","Component","CircleImage","Card","maxWidth","CardMedia","component","image","logo","alt","LoginPage","history","useHistory","useState","login","setLogin","app","useContext","user","form_variables","payload","post","then","response","data","first_name","last_name","setItem","removeItem","Cookies","set","push","catch","error","messageType","messageText","non_field_errors","finally","marginBottom","src","loginWallPaper","DialogTransition","forwardRef","ref","Slide","direction","MessageDialog","Backdrop","zIndex","open","isOpen","closeDialog","Dialog","TransitionComponent","keepMounted","onClose","scroll","severity","DialogContent","DialogContentText","Typography","textAlign","SlideTransition","Alert","elevation","MessageSnackbar","Snackbar","anchorOrigin","vertical","horizontal","spacing","autoHideDuration","closeHnadler","height","display","alignItems","Loader","AccountInfo","anchorEl","handleClose","PaperProps","borderRadius","overflow","filter","paddingX","mt","ml","mr","content","top","right","bgcolor","transform","transformOrigin","MenuItem","Avatar","accountUsername","ListItemIcon","styles","makeStyles","theme","appBar","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginRight","enteringScreen","AppBar","classes","accountInfoAnchorEl","setAccountInfoAnchorEl","accountInfoIsOpen","setAccountInfoIsOpen","Box","flexGrow","drawerIsOpen","Toolbar","edge","openDrawerHandler","md","Badge","badgeContent","HomeContext","drawerIsopen","closeDrawerInfoHandler","openedMixin","overflowX","closedMixin","breakpoints","up","DrawerHeader","styled","mixins","toolbar","Drawer","MuiDrawer","shouldForwardProp","prop","flexShrink","whiteSpace","boxSizing","SabadDrawer","drawerButtons","title","link","icon","window","location","pathname","anchor","closeDrawerHandler","List","map","button","index","to","textDecoration","ListItem","ListItemText","primary","contextType","progressRootSuccess","palette","success","main","progressRootWarning","warning","progressRootError","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","grey","mode","bar","LinearProgressWithLabel","ProgressBars","visibilityIconSuccess","visibilityIconWarning","visibilityIconError","StyledTableCell","MuiTableCell","tableCellClasses","head","common","black","white","body","Row","row","setOpen","Fragment","borderBottom","cssClass","scope","align","productOwner","projectName","startDate","numberOfData","Tooltip","completePercent","placement","projectSlug","taskSlug","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","historyRow","date","customerId","amount","Math","round","price","action","hover","Table","getTableData","setGetTableData","packsData","setPacksData","useEffect","defaults","headers","Cookie","get","packs","results","pack","task","owner","project","subject","join_date","replace","split","join","number_of_data","progress","detail","status","Paper","maxHeight","overflowY","scrollbarColor","scrollbarWidth","stickyHeader","url","at","appBarSpacer","HomePage","Container","Registry","tags","models","views","views_models","tools","tag","model","view","Object","values","modelName","Error","keys","getTool","bind","getModelByTag","guidGenerator","lgth","uniqueID","nanoid","cloneNode","node","snapshot","getSnapshot","getType","restoreNewsnapshot","fromModel","TRAVERSE_SKIP","TRAVERSE_STOP","renderItem","el","View","getViewByModel","includes","traverseTree","root","cb","visitNode","res","chld","cloneReactTree","items","attrs","clone","Children","forEach","child","moreProps","cloneElement","renderChildren","length","treeToModel","html","htseen","hypertexts","m","re","exec","buildData","toLowerCase","JSON","parse","attrsToProps","$","document","htmlSelfClosingTags","newData","i","edsplit","editSelfClosingTags","xml2js","parseString","explicitChildren","preserveChildrenOrder","charsAsChildren","err","result","addNode","$$","text","_","findInterface","tree","fn","findParentOfType","obj","c","p","getParentOfType","filterChildrenOfType","Array","isArray","cssConverter","firstIndexOfColon","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","e","getUrl","stringToTest","slice","match","toTimeString","ms","Date","toUTCString","flatten","arr","reduce","flat","toFlatten","concat","hashCode","str","hash","charCodeAt","atobUnicode","decodeURIComponent","atob","toString","gradients","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","a","parseInt","colorToRGBA","alpha","undefined","convertToRGBA","charAt","stringToColor","substr","rgbaChangeAlpha","rgba","getScaleGradient","number","ceil","MagicWand","lib","floodFill","px","py","colorThreshold","mask","newY","xr","xl","dy","dyl","dyr","checkY","w","h","bytes","maxX","minX","maxY","minY","Uint8Array","visited","sampleColor","stack","y","left","shift","bounds","gaussBlur","radius","k","k1","val","end","n","s2","wg","Float32Array","total","dsq","ww","exp","PI","endX","endY","gaussBlurOnlyBorder","j","k2","visitedData","len","temp","x0","max","x1","min","y0","y1","createBorderForBlur","createBorderMask","rw","rh","offset","getBorderIndices","traceContours","inner","first","second","current","previous","next","d","prepareMask","contours","w2","dx","dest","directions","points","simplifyContours","simplifyTolerant","simplifyCount","resPoints","lst","ids","maxd","maxi","dist","r1","r2","r12","pi","pf","pl","lenContours","initialCount","last","sqrt","abs","sort","getImageData","img","canvas","createElement","ctx","getContext","drawImage","calcBorder","imageData","threshold","simple","parentPoints","cs","icsl","reverseCoordinates","r1X","r1Y","r2X","r2Y","x2","y2","canvasToBinaryMatrix","shape","canv","stageRef","getLayers","layer","context","initialArray","binaryMatrix","bufferCanvas","RLEencode","prev","count","encoding","RLEdecode","encoded","uncompressed","Uint8ClampedArray","test","ind","from","msToHMS","seconds","hours","floor","prettyDate","time","diff","getTime","day_diff","isNaN","currentISODate","tzOffest","getTimezoneOffset","now","toISOString","imageData2Image","imagedata","putImageData","Image","toDataURL","Region2RLE","region","lineOpts","nw","naturalWidth","nh","naturalHeight","cnt","appendChild","stage","Konva","Stage","Layer","_img","touches","rescale","stageWidth","stageHeight","compOp","l","strokeWidth","scaledStrokeWidth","globalCompositeOperation","lineJoin","lineCap","Line","line","add","encode","RLE2Region","rle","newdata","createImageData","decode","new_image","brushSizeCircle","beginPath","arc","lineWidth","strokeStyle","stroke","labelToSVG","SVG_CACHE","score","cacheKey","fillColor","Colors","toFixed","svg","svgText","innerHTML","textLen","getBoundingClientRect","remove","calculateTextWidth","enc","quotes","level1","level2","escaped","addNameSpace","encodeURIComponent","encodeSVG","toggleLabelsAndScores","show","els","getElementsByClassName","foundCls","classList","cls","labelWithCSS","cache","labels","labelsStr","clsName","Checkers","cssCls","setAttribute","resSVG","Canvas","svgURL","createClass","rules","getElementsByTagName","sheet","insertRule","styleSheet","addRule","isTextNode","nodeType","firstLeaf","hasChildNodes","firstChild","lastLeaf","lastChild","getNextNode","nextSibling","parentNode","splitText","tail","deleteData","insertAfter","normalizeBoundaries","range","start","startContainer","startOffset","endContainer","endOffset","isTextNodeInRange","childNodes","documentForward","previousSibling","documentReverse","setStart","setEnd","highlightRange","normedRange","cssStyle","allNodes","commonAncestor","commonAncestorContainer","nodes","reverse","getNodesInRange","_range","nlen","nodeValue","hl","replaceChild","splitBoundaries","toGlobalOffset","element","pos","nodeName","mainOffsets","getSelection","getRangeAt","cloneRange","passedStart","passedEnd","traverse","findIdxContainer","globidx","removeSpans","spans","norm","span","insertBefore","removeChild","normalize","HTML","UDate","debounce","func","wait","immediate","args","arguments","later","apply","callNow","clearTimeout","setTimeout","styleToProp","trim","styleObj","RLe","Floodfill","BootstrapTooltip","arrow","popper","tooltipClasses","tooltip","Completion","observer","store","disablePadding","onConfirm","list","deleteCompletion","okText","okType","cancelText","disabled","selected","faTrashAlt","ListItemButton","completionStore","selectCompletion","primaryTypographyProps","secondary","createdBy","ev","faLightbulb","Completions","handleClick","completions","preventDefault","addCompletion","userGenerate","faPlusSquare","minWidth","faBook","Hint","localClass","copy","inject","updateButton","submitButton","back","buttons","skip","update","submit","sentUserGenerate","settings","enableHotkeys","enableTooltips","startIcon","faChevronLeft","skipTask","predictSelect","explore","hasInterface","faCheck","submitCompletion","faPencilAlt","updateCompletion","block","wrapper","DebugComponent","self","completion","basic","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","resetState","addTask","addGeneratedCompletion","markLoading","updateValue","TextArea","block__controls","UndoOutlined","canUndo","undo","RedoOutlined","canRedo","redo","RollbackOutlined","reset","setPrelabeling","resetPrelabeling","toggleFullscreen","fullscreen","faExpandArrowsAlt","faCompressArrowsAlt","description","showingDescription","toggleDescription","faQuestion","toggleSettings","faCog","Prediction","Item","completion_selected","selectPrediction","itembtns","createdAgo","Utils","createdDate","addCompletionFromPrediction","CopyOutlined","Predictions","predictions","titlespace","viewingAllPredictions","toggleViewingAllPredictions","WindowsOutlined","bodyStyle","Segment","cn","_hotkeys_map","_hotkeys_desc","keymaster","getScope","srcElement","tagName","setScope","removeKey","unbind","addKey","desc","unbindAll","makeComb","combs","comb","hasOwnProperty","getKeys","keysDescipritions","HotkeysDescription","descr","Hotkey","columns","dataIndex","dataSource","visible","showingSettings","footer","onCancel","defaultActiveKey","TabPane","tab","toggleHotkeys","toggleTooltips","enableLabelTooltips","toggleLabelTooltips","showLabels","toggleShowLabels","continuousLabeling","toggleContinuousLabeling","bottomSidePanel","toggleBottomSP","NodeViews","TextRegionModel","FontColorsOutlined","HyperTextRegionModel","AudioRegionModel","AudioOutlined","TextAreaRegionModel","MessageOutlined","_value","RectRegionModel","BlockOutlined","scaleX","scaleY","PolygonRegionModel","GatewayOutlined","EllipseRegionModel","Loading3QuartersOutlined","radiusX","radiusY","rotation","KeyPointRegionModel","EyeOutlined","BrushRegionModel","HighlightOutlined","ChoicesModel","ApartmentOutlined","TextAreaModel","Node","Icon","getContent","getRoot","regionStore","unselectAll","selectRegion","Boolean","NodeMinimal","sortedRegions","oneColor","getOneColor","badgeStyle","boxShadow","minimal","SimpleBadge","badge","RegionItem","idx","classnames","lstitem","hidden","onMouseOver","unhighlightAll","setHighlight","onMouseOut","editable","confbadge","LabelItem","labelStyle","background","selectedcolor","cursor","GroupMenu","selectedKeys","setView","LabelsList","setSort","CalendarOutlined","ThunderboltOutlined","treeData","asLabelsTree","isLabel","treelabels","paddingRight","showIcon","blockNode","defaultExpandAll","autoExpandParent","switcherIcon","DownOutlined","RegionsTree","isFlat","some","parentID","asTree","draggable","onDrop","dragNode","dropPosition","dropToGap","dropKey","eventKey","dragKey","dropPos","treeDepth","dropReg","findRegionID","dragReg","setParentID","pid","regions","CardHeader","borderTop","faCalendarAlt","overlay","globalStyles","CardContent","Paragraph","Text","RenderStates","_render","s","selectedValues","bgColor","findLabel","getSelectedString","mark","long","states","holdsState","highlightedNode","statesblk","underline","normalization","code","DeleteOutlined","deleteNormalization","startRelationMode","faLink","unselectRegion","faCircle","deleteRegion","Option","Select","RelationMeta","rl","relations","getSelected","v","header","choice","placeholder","defaultValue","option","findRelation","setSelected","Relation","isValidReference","node1","node2","iconMap","ArrowLeftOutlined","ArrowRightOutlined","bi","SwapOutlined","section__blocks","rotateDirection","relationbtn","isSelected","actions","toggleHighlight","hasRelations","toggleMeta","MoreOutlined","parent","deleteRelation","danger","showMeta","relationStore","bordered","itemLayout","SideColumn","buttonRemove","deleteAllRegions","toggleListItem","openListItem","faPoll","Relations","AudioControls","_ws","playPause","playing","PauseCircleOutlined","hotkey","PlayCircleOutlined","_type","custom","Modal","info","ObjectBase","types","_needsUpdate","optional","findRegion","params","_regionsCache","find","isMatch","toStateJSON","addProp","getProps","getAvailableStates","exceeded","checkMaxUsages","activeStates","InfoModal","maxUsages","ObjectTagView","dataneedsupdate","formatTimeCallback","pxPerSec","Number","minutes","secondsStr","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","onChangeZoom","zoom","wavesurfer","onChangeVolume","volume","setVolume","onChangeSpeed","speed","setPlaybackRate","onZoomPlus","step","onZoomMinus","onWheel","shiftKey","deltaY","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","wavesurferConfigure","backend","splitChannels","plugins","RegionsPlugin","dragSelection","slop","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","showTime","WaveSurfer","load","on","reg","_region","onMouseLeave","addRegion","selectedregionbg","onUpdateEnd","play","slider","oninput","onCreate","onwheel","throttle","handlePlay","onLoad","wave","gutter","ZoomOutOutlined","ZoomInOutlined","SoundOutlined","faPauseCircle","faPlayCircle","_index","is","variableNotation","variable","runTemplate","options","reExp","js","Function","message","ProcessAttrsMixin","updateLocalValue","dataObj","TagAttrs","maybeNull","string","boolean","Model","identifier","wsCreated","ws","AudioHOCModel","compose","named","fromStateJSON","choices","names","from_name","onHotKey","AudioModel","HtxAudioView","HtxAudio","addTag","pick","getSelectedColor","getClonedStates","NormalizationMixin","normInput","setNormalization","setNormInput","RegionsMixin","readonly","highlighted","perRegionStates","perregion","getParent","labelsState","hasLabelState","labelValue","moveTop","moveBottom","moveLeft","moveRight","sizeRight","sizeLeft","sizeTop","sizeBottom","rotatePoint","point","degree","swapSizes","rotateDimensions","updateAppearenceFromState","serialize","buildTree","to_name","source","parent_id","ser","toNames","updateOrAddState","foundIndex","findIndex","updateSingleState","whenlabelvalue","setHighlightedNode","loadRegionState","tryToKeepStates","keepStates","relationMode","stopRelationMode","afterUnselectRegion","unloadRegionState","onClickRegion","addRelation","deleteNodeRelation","destroyRegion","toggleHidden","RequiredMixin","requiredmessage","validate","objectTag","toname","requiredModal","PerRegionMixin","perRegionVisible","_mixedArray","array","_oneOf","lookup","union","dispatcher","sn","oneOfTags","unionArray","allModelsTypes","modelsArr","isType","nt","getParentOfTypeString","tagsArray","toolsArray","setValue","WithStatesMixin","HtxTextAreaRegion","editTag","relation","textOverflow","ellipsis","ControlBase","serializableValue","Input","allowsubmit","rows","showsubmitbutton","maxsubmissions","Types","submissionsNum","showSubmit","num","getSerializableValue","texts","copyState","perRegionCleanup","createRegion","addText","beforeSend","deleteText","destroy","onShortcut","t","H","isEdit","visibleStyle","showAddButton","showSubmitButton","itemStyle","Tree","onFinish","faPlus","HtxTextArea","SelectedModelMixin","tiedChildren","_child","selectedLabels","sel","alias","joinstr","canBeUsed","selectFirstVisible","f","toggleSelected","VisibilityMixin","visiblewhen","whentagname","whenchoicevalue","isVisible","fns","choiceValue","isCheckbox","isSelect","layout","shouldBeUnselected","setVisible","ChoiceModel","HtxChoiceView","cStyle","assign","nativeEvent","blur","HtxChoice","showinline","enumeration","afterCreate","HtxChoices","opt","LabelMixin","objectType","findedObj","maxusages","showalias","aliasstyle","Constants","usedAlready","endsWith","tool","manager","findSelectedTool","_updateBackgroundColor","ColorScheme","make_color","seed","LabelModel","HtxLabelView","bg","faTag","ModelAttrs","LabelsModel","HtxLabels","flexFlow","maxrating","defaultvalue","rating","setRating","increaseValue","RatingModel","HtxRating","iconSize","character","StarOutlined","AudioPlusModel","wsRegionElement","wsRegion","elID","querySelectorAll","object","original_length","getDuration","_ws_region","applyCSSClass","showlabels","scrollingElement","scrollTop","scrollLeft","scrollIntoViewIfNeeded","scrollIntoView","scrollTo","beforeDestroy","regs","showscores","hasStates","fm","setRangeValue","rangeValue","playBackRate","st","regionbg","ws_region","find_r","allStates","opts","drag","resize","HtxAudioPlus","updateSpansColor","_spans","labelColor","getLabelColor","_lastSpan","createSpans","lastSpan","highlightcolor","ls","addEventsToSpans","onmouseover","stopPropagation","onmouseout","onmousedown","_currentSpan","onclick","addEvent","behavior","fspan","lspan","mspans","bottom","borderRight","borderLeft","zpx","Composition","HyperTextLabelsModel","HtxHyperTextLabels","integer","HyperTextModel","SpanTextMixin","_update","needsUpdate","clonedStates","HtxHyperTextView","HtxHyperTextPieceView","HyperTextPieceView","myRef","createRef","ranges","rangesToIgnore","selection","isCollapsed","rangeCount","xpath","removeAllRanges","selectedRanges","captureDocumentSelection","htxRange","addEventListener","_handleUpdate","onMouseUp","dangerouslySetInnerHTML","__html","HtxHyperText","BaseTool","MIN_SIZE","default","tipFormatter","ToolMixin","_manager","_control","viewClass","moreRegionParams","paramsFromStates","fillcolor","strokecolor","stateProvidesColor","strokeColor","statesAndParams","getActiveShape","getSelectedShape","call","createFromJSON","tagTypes","stateTypes","controlTagTypes","moreParams","coordstype","strokewidth","brush","Tools","erase","BrushModel","BrushLabelsModel","HtxBrushLabels","polytobbox","lats","lngs","LabelOnBbox","ss","showScore","scale","zoomScale","strokeScaleEnabled","fill","cornerRadius","LabelOnEllipse","LabelOnRect","LabelOnPolygon","bbox","fillEnabled","shadowBlur","LabelOnMask","LabelOnKP","Points","setType","addPoints","origW","origH","destW","destH","tension","currentTouch","reference","ImageModel","addTouch","afterAttach","convertPointsToMask","setScale","updateImageSize","wp","hp","sw","sh","initialWidth","initialHeight","ratioX","ratioY","addState","original_width","original_height","format","prototype","HtxBrushLayer","currentPoints","HtxBrushAddLine","highlight","shadowColor","shadowOffsetY","shadowOffsetX","shadowOpacity","cancelBubble","HtxBrushEraserLine","HtxBrush","attrMy","getToolsManager","sceneFunc","_loadedOnce","fillStrokeShape","_rle","onload","ToolView","Slider","updateCursor","setStroke","_Tool","json","controlTag","addShape","mouseupEv","mousemoveEv","mousedownEv","sap","Brush","Basic","ScissorOutlined","Erase","kp","keypoint","KeyPointModel","KeyPointLabelsModel","HtxKeyPointLabels","relativeX","relativeY","rotate","setPosition","setFill","natural","image_rotation","HtxKeyPoint","onDragEnd","getAttr","dragBoundFunc","fixForZoom","parseFloat","clickEv","checkLabels","KeyPoint","pointsize","pointstyle","poly","PolygonModel","HtxView","PolygonLabelsModel","HtxPolygonLabels","PolygonPoint","initX","initY","movePoint","offsetX","offsetY","_movePoint","closeStartPoint","mouseOverStartPoint","closePoly","handleMouseOverStartPoint","closed","startPoint","setX","setY","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","startPointAttr","hitStrokeWidth","dragOpts","onDragMove","dragOnTop","setSelectedPoint","pointSize","pointStyle","selectedPoint","safeReference","fromName","handleMouseMove","flattenedPoints","evt","fixZoomedCoords","getAnchorPoint","cursorX","cursorY","group","getHoverAnchor","hoverAnchor","Circle","draw","createHoverAnchor","moveHoverAnchor","currentTarget","getLayer","handleMouseLeave","removeHoverAnchor","handleLineClick","insertIdx","insertPoint","addPoint","_addPoint","splice","canClose","p1","p2","detach","updateOffset","computeOffset","normalized","point1X","point1Y","point2X","point2Y","getFlattenedPoints","findOne","HtxPolygon","minMax","acc","onDragStart","setDragMode","arrX","arrY","setAttr","renderPoly","idx1","idx2","onMouseMove","renderLine","renderLines","renderCircle","renderCircles","getActivePolygon","newPolygon","fillOpacity","fillopacity","Polygon","canrotate","rect","activeShape","RectangleModel","RectangleLabelsModel","HtxRectangleLabels","relativeWidth","relativeHeight","startX","startY","supportsTransform","coordsInside","rx","ry","DisabledMixin","HtxRectangle","onTransformEnd","DrawingTool","updateDraw","Rect","ellipse","EllipseModel","EllipseLabelsModel","HtxEllipseLabels","relativeRadiusX","relativeRadiusY","rel_x","rel_y","theta","cos","unit","sin","pow","HtxEllipse","Ellipse","DragOutlined","handleZoom","handleDrag","posx","movementX","posy","movementY","setZoom","batchDraw","ctrlKey","freezeHistory","mousePointTo","newScale","newPos","scaleBy","zoomby","oldScale","getPointerPosition","negativezoom","Zoom","RotateLeftOutlined","RotateRightOutlined","Rotate","menu","onResetClick","ReloadOutlined","SliderDropDown","brightness","ControlOutlined","tooltitle","setBrightnessGrade","Brightness","contrast","setContrastGrade","Contrast","cur","setThreshold","createPolygonRegion","imageRef","FloodFill","nodeSize","grid","gridSize","col","gridColor","TransformerComponent","checkNode","transformer","getStage","selectedShape","selectedNode","attachTo","resizeEnabled","ignoreStroke","keepRatio","rotateEnabled","borderDash","boundBoxFunc","oldBox","newBox","anchorSize","handleOnClick","handleMouseDown","handleGlobalMouseMove","handleGlobalMouseUp","canvasX","canvasY","removeEventListener","clientX","clientY","handleMouseUp","updateGridSize","setGridSize","onResize","offsetWidth","offsetHeight","cursorPositionY","dash","cursorPositionX","viewingAllCompletions","allTools","controlButton","filler","containerClassName","containerStyle","imgStyle","brightnessGrade","contrastGrade","imgTransform","imageFullSize","maxwidth","zoomingPositionX","zoomingPositionY","ratio","rotated","setImageRef","setStageRef","sizeUpdated","renderTools","ToolsManager","_default_tool","addTool","selectedTool","zoomcontrol","brightnesscontrol","contrastcontrol","rotatecontrol","IMAGE_CONSTANTS","brushControl","brushStrokeWidth","returnedControl","controlButtonType","toolsManager","updateBrushControl","arg","updateBrushStrokeWidth","setPointerPosition","setZoomPosition","setMode","_updateImageSize","userResize","labelStates","zoomOriginalCoords","asArray","modified","zoomed","coords","HtxImage","ImageView","TextModel","setText","savetextresult","valuetype","selectionenabled","granularity","loaded","setRef","_ref","loadedValue","fetch","ok","statusText","HtxTextView","HtxTextPieceView","TextPieceView","getValue","strleft","idxSpace","lastIndexOf","idxNewline","strright","alignWord","alignRange","collapsed","cloneContents","textContent","ee","findNode","createRange","HtxText","ListItemModel","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","orientation","navigator","userAgent","SortableText","SortableElement","classNames","audio","userSelect","SortableList","SortableContainer","celled","HtxListView","onSortEnd","HtxList","selectionstyle","leftclass","rightclass","selectLeft","selectRight","_selection","getLeftRight","completionAttached","PairwiseModel","RankerItemModel","sortable","_addRegion","RankerModel","HtxRankerView","HtxRanker","hotkeyScope","ShortcutModel","HtxShortcutView","RelationsModel","RelationModel","DialogView","hint","selectedStyle","block_selected","Replica","DialogActions","DialogModel","HtxDialogView","dashed","HeaderModel","HtxHeader","Title","level","TableModel","HtxTable","pagination","hideOnSinglePage","classname","ViewModel","StyleModel","HtxStyle","casesensetive","cleanup","minlength","toTag","applyFilter","tch","ch","chval","applyFilterEv","focus","setInputRef","selectFirstElement","FilterModel","HtxFilter","onPressEnter","AnnotateApp","createSuitableRoot","textOnImageModels","every","setTree","getEnv","messages","DONE","NO_COMP_LEFT","NO_NEXT_TASK","NO_ACCESS","_renderAll","rectangleLabelsModel","getElementById","viewModel","sideModel","choicesView","textAreaModel","elements","renderLoader","noTask","renderNothingToLabel","noAccess","renderNoAccess","labeledSuccess","renderSuccess","renderNoCompletion","stEditor","editorfs","editor","stCommon","commonbsp","stMenu","menubsp","segment","Controls","renderAllCompletions","renderAllPredictions","Debug","AllRegionsType","Normalization","normalizations","findNormalization","addNormalization","unshift","deleteNodeNormalization","sortOrder","enrich","lname","onEntityCreate","toggleSortOrder","initHotkeys","setGroup","filterByParentID","onEntityDelete","onPatch","patch","op","path","PREFIX","selectNext","RelationStore","findRelations","nodesRelated","from_id","to_id","deserializeRelation","TimeTraveller","frozen","undoIdx","targetPath","skipNextUndoState","createdIdx","isFrozen","frozenIdx","targetStore","snapshotDisposer","freeze","addUndoState","recorder","resolvePath","onSnapshot","newIdx","applySnapshot","loadedDate","leadTime","localUpdate","honeypot","skipped","dragMode","normalizationMode","normalizationStore","NormalizationStore","RegionStore","reinitHistory","setEdit","setGroundTruth","onGroundTruth","sendUserGenerate","setLocalUpdate","updatePersonalKey","setNormalizationMode","_relationObj","deleteReadOnly","mainViewTag","addToolsFromControl","setupHotKeys","audiosNum","audioNode","mod","objCompletion","_initialCompletionObj","toModel","toggleViewingAll","selectItem","onSelectCompletion","addItem","config","completionModel","displayName","toggleViewingAllCompletions","addPrediction","prediction","onDeleteCompletion","ProjectStore","identifierNumber","SettingsModel","enablePanelHotkeys","enableAutoSave","lsKey","lss","lsp","toggleAutoSave","togglePanelHotkeys","toggleImageFS","AuthStore","enable","TaskStore","auth","Utilities","UserStore","Task","Project","interfaces","CompletionStore","User","debug","Settings","alert","setFlags","flags","addInterface","onLabelStudioLoad","assignTask","taskObject","initializeStore","_init","addFun","selectFun","addPred","addComp","onSkipTask","onSubmitCompletion","onUpdateCompletion","onTaskLoad","previousCompletion","environment","getData","getState","rootElement","configureApplication","osCB","ouCB","odCB","Messages","External","_prepData","lead_time","AnnotatePage","closeSnackbarHandler","snackbarIsOpen","getAnnotateData","baseUrl","templateUrl","dataUrl","templateResponse","dataRespose","replaceAll","interface","AppStore","main_dataset_id","App","exact","reactDom","render"],"mappings":"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","file":"static/js/main.a1235bc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__278SL\",\"skipped\":\"Completions_skipped__1PMvh\",\"completioncard\":\"Completions_completioncard__1t9j4\",\"completion\":\"Completions_completion__o7RMd\",\"completion_selected\":\"Completions_completion_selected__3qnRj\",\"title\":\"Completions_title__1sVK7\",\"titlespace\":\"Completions_titlespace__2vePz\",\"itembtns\":\"Completions_itembtns__1iGrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treelabels\":\"Entities_treelabels__1eXl8\",\"item\":\"Entities_item__3UOdP\",\"lstitem\":\"Entities_lstitem__2fIoQ\",\"node\":\"Entities_node__3lZB0\",\"flat\":\"Entities_flat__1BGpb\",\"hidden\":\"Entities_hidden__2BWhO\",\"selected\":\"Entities_selected__2iSLh\",\"list\":\"Entities_list__1PQ5b\",\"ant-tree-switcher\":\"Entities_ant-tree-switcher__37tkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Relations_list__1qJFP\",\"item\":\"Relations_item__2qMzb\",\"selected\":\"Relations_selected__352to\",\"block\":\"Relations_block__1iBxL\",\"relationbtn\":\"Relations_relationbtn__1DE91\",\"header\":\"Relations_header__2735N\",\"section\":\"Relations_section__LTPqm\",\"section__blocks\":\"Relations_section__blocks__3TOMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__3XG93\",\"button\":\"Entity_button__3c64R\",\"labels\":\"Entity_labels__1voVE\",\"tag\":\"Entity_tag__1B3eN\",\"statesblk\":\"Entity_statesblk__2jpJN\",\"row\":\"Entity_row__3Ii1C\",\"long\":\"Entity_long__1o1P3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"AnnotateApp_ant-divider-horizontal__2eNC-\",\"ant-divider-with-text-center\":\"AnnotateApp_ant-divider-with-text-center__3a0du\",\"ant-divider-with-text-left\":\"AnnotateApp_ant-divider-with-text-left__1SPWn\",\"ant-divider-with-text-right\":\"AnnotateApp_ant-divider-with-text-right__1C-t_\",\"ls-renderall\":\"AnnotateApp_ls-renderall__vDDxd\",\"ls-fade\":\"AnnotateApp_ls-fade__2IuDq\",\"fadeInOpacity\":\"AnnotateApp_fadeInOpacity__UMNCk\",\"htx-highlight\":\"AnnotateApp_htx-highlight__10FIV\",\"htx-no-label\":\"AnnotateApp_htx-no-label__3xSy2\",\"htx-highlight-last\":\"AnnotateApp_htx-highlight-last__3u7TA\",\"htx-yoyo\":\"AnnotateApp_htx-yoyo__38xJa\",\"ant-list-item-action\":\"AnnotateApp_ant-list-item-action__1mWoY\",\"segment\":\"AnnotateApp_segment__3IL5K\",\"editor\":\"AnnotateApp_editor__AXaZS\",\"editorfs\":\"AnnotateApp_editorfs__3yzLI\",\"menu\":\"AnnotateApp_menu__3aPOn\",\"menubsp\":\"AnnotateApp_menubsp__1FXSv\",\"content\":\"AnnotateApp_content__3Ruvv\",\"common\":\"AnnotateApp_common__3Pby4\",\"commonbsp\":\"AnnotateApp_commonbsp__yKPU_\",\"pins\":\"AnnotateApp_pins__31eiV\",\"pinsright\":\"AnnotateApp_pinsright__3Aiyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Styles_block__1NSsm\",\"divider\":\"Styles_divider__2clc_\",\"button\":\"Styles_button__1aTsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__2f1HI\",\"block_selected\":\"Dialog_block_selected__cGeTu\",\"name\":\"Dialog_name__27hAU\",\"tag\":\"Dialog_tag__1o6ny\",\"date\":\"Dialog_date__33g0a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Controls_ant-divider-horizontal__3POBd\",\"ant-divider-with-text-center\":\"Controls_ant-divider-with-text-center__1hYa2\",\"ant-divider-with-text-left\":\"Controls_ant-divider-with-text-left__1r-Lg\",\"ant-divider-with-text-right\":\"Controls_ant-divider-with-text-right__3RoCh\",\"ls-renderall\":\"Controls_ls-renderall__2Kj-I\",\"ls-fade\":\"Controls_ls-fade__3obEE\",\"fadeInOpacity\":\"Controls_fadeInOpacity__KWKby\",\"htx-highlight\":\"Controls_htx-highlight__FSi_2\",\"htx-no-label\":\"Controls_htx-no-label__257YF\",\"htx-highlight-last\":\"Controls_htx-highlight-last__3aDLg\",\"htx-yoyo\":\"Controls_htx-yoyo__1YbO2\",\"skip\":\"Controls_skip__3p9E9\",\"task\":\"Controls_task__2FuYQ\",\"container\":\"Controls_container__LTeAA\",\"block\":\"Controls_block__21XER\",\"wrapper\":\"Controls_wrapper__1Zdbo\",\"rewrite\":\"Controls_rewrite__bRxtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"global_link__Ob-I9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Panel_ant-divider-horizontal__15Mt3\",\"ant-divider-with-text-center\":\"Panel_ant-divider-with-text-center__2U1CW\",\"ant-divider-with-text-left\":\"Panel_ant-divider-with-text-left__1GH5P\",\"ant-divider-with-text-right\":\"Panel_ant-divider-with-text-right__2Lpc0\",\"ls-renderall\":\"Panel_ls-renderall__3CWt5\",\"ls-fade\":\"Panel_ls-fade__3W0tw\",\"fadeInOpacity\":\"Panel_fadeInOpacity__z086F\",\"htx-highlight\":\"Panel_htx-highlight__1tuyA\",\"htx-no-label\":\"Panel_htx-no-label__2SJ2M\",\"htx-highlight-last\":\"Panel_htx-highlight-last__2Cuel\",\"htx-yoyo\":\"Panel_htx-yoyo__2osrK\",\"container\":\"Panel_container__3AO29\",\"block__controls\":\"Panel_block__controls__psq4W\",\"block\":\"Panel_block__2d3Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mark\":\"TextAreaRegion_mark__3ph3F\",\"selected\":\"TextAreaRegion_selected__3Q440\",\"highlighted\":\"TextAreaRegion_highlighted__3xJod\",\"relation\":\"TextAreaRegion_relation__30wW3\",\"delete\":\"TextAreaRegion_delete__2mF_2\",\"row\":\"TextAreaRegion_row__2xFM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ImageView_block__3BAO-\",\"divider\":\"ImageView_divider__1Hcuk\",\"button\":\"ImageView_button__3H1Aa\",\"container\":\"ImageView_container__AOBmH\",\"rotated\":\"ImageView_rotated__2CLwY\",\"filler\":\"ImageView_filler__c-NII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltitle\":\"Tools_tooltitle__2lRz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__1Svrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"minimal\":\"Node_minimal__3sbyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Segment_ant-divider-horizontal__fFYLB\",\"ant-divider-with-text-center\":\"Segment_ant-divider-with-text-center__mspm2\",\"ant-divider-with-text-left\":\"Segment_ant-divider-with-text-left__Q56jn\",\"ant-divider-with-text-right\":\"Segment_ant-divider-with-text-right__2WzMV\",\"ls-renderall\":\"Segment_ls-renderall__1yjaW\",\"ls-fade\":\"Segment_ls-fade__112CU\",\"fadeInOpacity\":\"Segment_fadeInOpacity__2TAdJ\",\"htx-highlight\":\"Segment_htx-highlight__sgrxU\",\"htx-no-label\":\"Segment_htx-no-label__33-yV\",\"htx-highlight-last\":\"Segment_htx-highlight-last__2T5Nz\",\"htx-yoyo\":\"Segment_htx-yoyo__F5J3m\",\"block\":\"Segment_block__1fyeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"SimpleBadge_badge__QESA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__32S1p\",\"wave\":\"Waveform_wave__1AcCy\",\"menu\":\"Waveform_menu__2ssfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Text_block__1VM-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play\":\"AudioPlus_play__FZgJl\"};","import axios from \"axios\"\n\nconst instance = axios.create({\n    baseURL: \"http://185.208.77.203:8000\",\n    \n})\n\n\nexport default instance","import React from \"react\"\n\nconst UserContext = React.createContext({\n    isAuth: false,\n    token: '',\n    pk: 0,\n    firstName: '',\n    lastName: '',\n    username: '',\n    email: '',\n    password: '',\n    setUserInformation: () => {}\n})\n\n\nexport const UserContextProvider = UserContext.Provider\nexport const UserContextConsumer = UserContext.Consumer\nexport default UserContext","import React from \"react\"\n\nconst AppContext = React.createContext({\n    isLoading: false,\n    openLoadingHandler: () => {},\n    closeLoadingHandler: () => {},\n    messageDialogIsOpen: false,\n    messageDialogType: '',\n    messageDialogText: '',\n    openMessageDialogHandler: () => {},\n    closeMessageDialogHandler: () => {},\n    messageSnackbarIsOpen: false,\n    messageSnackbarType: '',\n    messageSnackbarText: '',\n    openMessageSnackbarHandler: () => {},\n    closeMessageSnackbarHandler: () => {},\n})\n\n\nexport const AppContextProvider = AppContext.Provider\nexport const AppContextConsumer = AppContext.Consumer\nexport default AppContext","const Wrapper = (props) => props.children\n\nexport default Wrapper","import React from \"react\"\nimport { TextValidator } from \"react-material-ui-form-validator\"\n\nimport './ValidatorInput.css'\n\nconst ValidatorInput = (props) => {\n    return (\n        <TextValidator {...props}></TextValidator>\n    )\n}\n\nexport default ValidatorInput","import rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [rtlPlugin],\n});\n\nfunction RTL(props) {\n  return <CacheProvider value={cacheRtl}>{props.children}</CacheProvider>;\n}\nexport default RTL","import React from \"react\"\nimport Wrapper from \"../../../hoc/Wrapper\"\nimport { ValidatorForm } from \"react-material-ui-form-validator\"\nimport { IconButton, Grid, Button, Checkbox, FormControlLabel } from \"@mui/material\"\nimport { InputAdornment } from \"@mui/material\"\nimport { AccountCircle, Visibility, VisibilityOff, } from \"@mui/icons-material\"\nimport Divider from '@mui/material/Divider';\nimport LoginIcon from '@mui/icons-material/Login'\nimport PersonAddIcon from '@mui/icons-material/PersonAdd'\nimport GoogleIcon from '@mui/icons-material/Google';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport ValidatorInput from '../../UI/Input/ValidatorInput/ValidatorInput'\nimport './SigninForm.css'\nimport RTL from '../../../hoc/RTL/RTL'\n\nclass SigninForm extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email_username: '',\n            password: '',\n            showPassword: false,\n            rememberMe: false,\n        }\n    }\n\n    componentDidMount(){\n        const lastRememberMe = localStorage.getItem(\"sabadRemeberMe\")\n        console.log(lastRememberMe)\n        if(lastRememberMe){\n            console.log(\"In Comojefsadjflksjd\")\n            console.log(localStorage.getItem(\"sabadUsername\"))\n            this.setState({\n                ...this.state,\n                email_username: localStorage.getItem(\"sabadUsername\"),\n                password: localStorage.getItem(\"sabadPassword\"),\n                rememberMe: true,\n            })\n        }\n    }\n\n\n    emailUsernameHandler = (event) => {\n        this.setState({\n            ...this.state,\n            email_username: event.target.value\n        })\n    }\n\n    passwordHandler = (event) => {\n        this.setState({\n            ...this.state,\n            password: event.target.value\n        })\n    }\n\n    showPasswordHandler = () => {\n        this.setState({\n            ...this.state,\n            showPassword: !this.state.showPassword\n        })\n    }\n\n    rememberMeHandler = (event) => {\n        this.setState({\n            ...this.state,\n            rememberMe: !this.state.rememberMe\n        })\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <RTL>\n                    <ValidatorForm className=\"validate-form\">\n                        <Grid container rowSpacing={0} justifyContent=\"space-between\">\n                            <Grid item xs={12}>\n                                <ValidatorInput\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email_username\"\n                                    label=\"نام کاربری یا ایمیل\"\n                                    name=\"email_username\"\n                                    dir='rtl'\n                                    autoComplete=\"email_username\"\n                                    value={this.state.email_username}\n                                    onChange={this.emailUsernameHandler}\n                                    InputLabelProps={{ style: { fontFamily: 'IRANSansWeb' } }}\n                                    validators={['required']}\n                                    errorMessages={['لطفا نام کاربری یا ایمیل خود را وارد کنید']}\n                                    InputProps={{\n                                        style: { fontFamily: 'IRANSansWeb' },\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <AccountCircle />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ValidatorInput\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"رمز عبور\"\n                                    dir='rtl'\n                                    type={this.state.showPassword ? 'text' : 'password'}\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={this.state.password}\n                                    onChange={this.passwordHandler}\n                                    InputLabelProps={{ style: { fontFamily: 'IRANSansWeb' } }}\n                                    validators={['required', 'minStringLength:' + 6]}\n                                    errorMessages={['لطفا رمز عبور خود را وارد کنید', 'رمز عبور باید بیشتر از ۶ حرف باشد']}\n                                    errorStyle={{ style: { color: 'red', fontFamily: 'IRANSansWeb' } }}\n                                    errorText={{ style: { color: 'red', fontFamily: 'IRANSansWeb' } }}\n                                    InputProps={{\n                                        style: { fontFamily: 'IRANSansWeb' },\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    style={{ padding: \"1px\" }}\n                                                    onClick={this.showPasswordHandler}\n                                                    onMouseDown={this.handleMouseDownPassword}\n                                                >\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>)\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item container justifyContent=\"space-between\">\n                                <Button href=\"#text-buttons\" className={\"dark-blue\"}>فراموشی رمز عبور؟</Button>\n                                <FormControlLabel \n                                    onChange={this.rememberMeHandler}\n                                    checked={this.state.rememberMe} \n                                    control={<Checkbox defaultChecked className={\"dark-blue\"} />} \n                                    label=\"مرا به خاطر بسپار\" \n                                    labelPlacement=\"start\" \n                                    sx={{\n                                    marginLeft: \"-2%\"\n                                }} />\n                            </Grid>\n                            <Grid item container justifyContent=\"space-between\" marginTop=\"1vh\">\n                                <Grid item xs={5}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        className={\"login-button\"}\n                                        sx={{\n                                            fontWeight: \"bold\",\n                                            backgroundColor: \"#3f407d\"\n                                        }}\n                                        onClick={() => { this.props.signinHandler(this.state) }}\n                                        fullWidth\n                                        dir='rtl'\n                                        endIcon={<LoginIcon fontSize='large' />}\n                                    >\n                                        ورود\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={5}>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        className={\"signup-button\"}\n                                        sx={{\n                                            color: \"#3f407d\",\n                                            fontWeight: \"bold\",\n                                            border: \"2px solid\",\n                                            borderColor: \"#3f407d\",\n                                            '&:hover': {\n                                                border: '2px solid',\n                                                borderColor: \"#3f407d\"\n                                            },\n\n                                        }}\n                                        onClick={this.props.changeSideBarHandler}\n                                        fullWidth\n                                        dir='rtl'\n                                        endIcon={<PersonAddIcon fontSize='large' />}\n                                    >\n                                        ثبت نام\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item container justifyContent=\"center\" marginTop=\"5vh\">\n                                <Divider sx={{\n                                    width: \"100%\",\n\n                                }} />\n                                <Grid xs={6} item container justifyContent=\"space-evenly\">\n                                    <Grid item>\n                                        <IconButton aria-label=\"google-icon\" size=\"large\">\n                                            <GoogleIcon fontSize=\"inherit\" color=\"error\" />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton aria-label=\"linkedin-icon\" size=\"large\">\n                                            <LinkedInIcon fontSize=\"inherit\" color=\"warning\" />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton aria-label=\"facebook-icon\" size=\"large\">\n                                            <FacebookIcon fontSize=\"inherit\" color=\"info\" />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </ValidatorForm>\n\n                </RTL>\n            </Wrapper>\n        )\n    }\n}\n\nexport default SigninForm","export default __webpack_public_path__ + \"static/media/logo.1eec9938.png\";","import React from \"react\"\nimport { Card } from \"@mui/material\"\nimport { CardMedia } from \"@mui/material\"\nimport './CircleImage.css'\nimport logo from '../../assets/images/logo.png';\n\nconst CircleImage = (props) => {\n    return (\n        <Card sx={{ maxWidth: 200 }} className='circle-card'>\n            <CardMedia\n                className='circle-media'\n                component=\"img\"\n                image={logo}\n                alt=\"green iguana\"\n            />\n        </Card>\n    )\n}\n\nexport default CircleImage","export default __webpack_public_path__ + \"static/media/illustration_login.c0c19451.png\";","import React, { useState, useContext} from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"../../axios\"\nimport UserContext from \"../../context/UserContext\"\nimport AppContext from \"../../context/AppContext\"\nimport './LoginPage.css'\nimport SigninForm from \"../../components/From/SigninForm/SigninForm\"\nimport CircleImage from \"../../components/CircleImage/CircleImage\"\nimport Wrapper from \"../../hoc/Wrapper\";\nimport loginWallPaper from '../../assets/images/illustration_login.png';\nimport Cookies from \"js-cookie\";\n\n\nfunction LoginPage(props) {\n    const history = useHistory();\n    const [login, setLogin] = useState(false)\n    const app = useContext(AppContext)\n    const user = useContext(UserContext)\n\n    const changeSideBarHandler = () => {\n        setLogin(login)\n    }\n\n    const signinHandler = (form_variables) => {\n        app.openLoadingHandler()\n        const payload = {\n            \"username\": form_variables.email_username,\n            \"password\": form_variables.password\n        }\n        axios.post(\"/api/auth/login/\", payload).then((response) => {\n            user.setUserInformation({\n                isAuth: true,\n                token: response.data.token,\n                pk: response.data.user.pk,\n                firstName: response.data.user.first_name,\n                lastName: response.data.user.last_name,\n                username: response.data.user.username,\n                email: response.data.user.email,\n                password: response.data.user.password\n            })\n            localStorage.setItem(\"sabadRemeberMe\", form_variables.rememberMe)\n            if(form_variables.rememberMe){\n                localStorage.setItem(\"sabadUsername\", form_variables.email_username)\n                localStorage.setItem(\"sabadPassword\", form_variables.password)\n            }else{\n                localStorage.removeItem(\"sabadUsername\")\n                localStorage.removeItem(\"sabadPassword\")\n            }\n            Cookies.set(\"token\", \"JWT \" + response.data.token)\n            Cookies.set(\"pk\", response.data.user.pk)\n            Cookies.set(\"firstName\", response.data.user.first_name)\n            Cookies.set(\"lastName\", response.data.user.last_name)\n            Cookies.set(\"username\", response.data.user.username)\n            Cookies.set(\"email\", response.data.user.email)\n\n            history.push(\"/\")\n        }).catch((error) => {\n            app.openMessageDialogHandler({\n                messageType: \"error\",\n                messageText: error.response?.data.non_field_errors[0]\n            })\n        }).finally(() => {\n            app.closeLoadingHandler()\n        })\n    }\n\n    return (\n        <Wrapper>\n            <div className=\"login\">\n                <div className={`sidebar-container  ${login ? 'sidebar-container--left' : 'sidebar-container--right'}`}>\n                    <h1 style={{\n                        marginBottom: \"5vh\"\n                    }}>ورود به حساب کاربری</h1>\n                    <img src={loginWallPaper}></img>\n                </div>\n                <div className={`login__welcome-back ${login ? 'login__welcome-back--active' : 'login__welcome-back--inactive'}`}>\n                </div>\n                <div className={`login__hello-container ${!login ? 'login__hello-container--active' : 'login__hello-container--inactive'}`}>\n                </div>\n                <div className={`login__create-container ${login ? 'login__create-container--active' : 'login__create-container--inactive'}`}>\n                    <CircleImage></CircleImage>\n                    <SigninForm signinHandler={signinHandler} changeSideBarHandler={changeSideBarHandler}></SigninForm>\n                </div>\n                <div className={`login__login-container ${!login ? 'login__login-container--active' : 'login__login-container--inactive'}`}>\n                    <CircleImage></CircleImage>\n                    <SigninForm signinHandler={signinHandler} changeSideBarHandler={changeSideBarHandler}></SigninForm>\n                </div>\n            </div>\n        </Wrapper>\n    );\n}\n\nexport default LoginPage","import React from \"react\"\nimport { Slide } from \"@mui/material\"\n\nconst DialogTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default DialogTransition","import React from \"react\"\nimport { Backdrop } from '@mui/material'\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, AppBar, Alert } from \"@mui/material\"\nimport { IconButton } from \"@mui/material\"\nimport CloseIcon from '@mui/icons-material/Close'\nimport DialogTransition from \"../DialogTransition\"\nimport RTL from \"../../../../hoc/RTL/RTL\"\nimport \"./MessageDialog.css\"\n\nclass MessageDialog extends React.Component {\n\n    render() {\n        return (\n            <RTL>\n                <Backdrop\n                    sx={{ color: '#fff', zIndex: 100 }}\n                    open={this.props.isOpen}\n                    onClick={this.props.closeDialog}\n                >\n                    <Dialog\n                        open={this.props.isOpen}\n                        TransitionComponent={DialogTransition}\n                        keepMounted\n                        onClose={this.props.closeDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        scroll={\"body\"}\n                        maxWidth=\"xs\"\n                        fullWidth={true}\n                    >\n                        <Alert dir='rtl' variant=\"filled\" severity={this.props.messageType} onClose={() => {}}>\n                            خطا\n                        </Alert>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                <Typography variant=\"body1\" sx={{ textAlign: \"center\", fontWeight: \"bold\",}} >\n                                    {this.props.messageText}\n                                </Typography>\n                            </DialogContentText>\n                        </DialogContent>\n                    </Dialog>\n                </Backdrop>\n            </RTL>\n        )\n    }\n}\n\nexport default MessageDialog","import Slide from '@mui/material/Slide';\nimport Grow from '@mui/material/Grow';\n\nexport function SlideTransition(props) {\n    return <Slide {...props} direction=\"up\" />;\n}\n\nexport function GrowTransition(props) {\n    return <Grow {...props} />;\n}","import React from \"react\"\nimport Snackbar from '@mui/material/Snackbar'\nimport RTL from \"../../../../hoc/RTL/RTL\"\nimport { SlideTransition, GrowTransition } from \"../SnackbarTransition\"\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nclass MessageSnackbar extends React.Component {\n    render() {\n        return (\n            <RTL>\n                <Snackbar\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                    spacing={3}\n                    sx={{ width: \"17%\" }}\n                    open={this.props.isOpen}\n                    autoHideDuration={2000}\n                    onClose={this.props.closeHnadler}\n                    TransitionComponent={SlideTransition}\n                    key={SlideTransition.name}\n                >\n                    <Alert\n                        dir='rtl'\n                        onClose={this.props.closeHnadler}\n                        severity={this.props.messageType}\n                        sx={{ width: '100%', height: '5vh', display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>\n                        {this.props.messageText}\n                    </Alert>\n                </Snackbar>\n            </RTL>\n        )\n    }\n}\n\nexport default MessageSnackbar","import React from 'react';\nimport { CircleToBlockLoading } from 'react-loadingg';\nimport { Backdrop } from '@mui/material'\nimport './Loader.css'\n\nconst Loader = (props) => {\n    return (\n        <Backdrop\n            sx={{ color: '#fff', zIndex:100}}\n            open={props.isLoading}\n        >\n            <CircleToBlockLoading color='#1784d9' size='large' />\n        </Backdrop>\n    )\n}\nexport default Loader;\n\n","import React from \"react\"\nimport Wrapper from \"../../../hoc/Wrapper\"\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport './AccountInfo.css'\n\nclass AccountInfo extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <Menu\n                    anchorEl={this.props.anchorEl}\n                    open={this.props.open}\n                    onClose={this.props.handleClose}\n                    onClick={this.props.handleClose}\n                    dir='rtl'\n                    PaperProps={{\n                        elevation: 0,\n                        sx: {\n                            borderRadius: \"10%\",\n                            width: '20%',\n                            overflow: 'visible',\n                            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                            paddingX: '1%',\n                            mt: 1.5,\n                            '& .MuiAvatar-root': {\n                                width: 40,\n                                height: 40,\n                                ml: -0.5,\n                                mr: 2,\n                            },\n                            '&:before': {\n                                content: '\"\"',\n                                display: 'block',\n                                position: 'absolute',\n                                top: 0,\n                                right: 14,\n                                width: 10,\n                                height: 10,\n                                bgcolor: 'background.paper',\n                                transform: 'translateY(-50%) translateX(-2000%) rotate(45deg)',\n                                zIndex: 0,\n                            },\n                        },\n                    }}\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                >\n                    <MenuItem sx={{\n                        marginTop: \"2vh\"\n                    }}>\n                        <Avatar />  {this.props.accountUsername}\n                    </MenuItem>\n                    <Divider />\n                    <MenuItem sx={{\n                        marginTop: \"2vh\"\n                    }}>\n                        <ListItemIcon>\n                            <Settings fontSize=\"medium\" />\n                        </ListItemIcon>\n                        تنظیمات\n                    </MenuItem>\n                    <MenuItem sx={{\n                        marginTop: \"2vh\",                        \n                    }}>\n                        <ListItemIcon>\n                            <Logout fontSize=\"medium\" />\n                        </ListItemIcon>\n                        خروج\n                    </MenuItem>\n                </Menu>\n            </Wrapper>\n        )\n    }\n}\n\nexport default AccountInfo","import React, { useState } from 'react'\nimport Wrapper from '../../hoc/Wrapper'\nimport RTL from '../../hoc/RTL/RTL'\nimport MuiAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport AccountInfo from './AccountInfo/AccountInfo'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './AppBar.css'\n\nconst drawerWidth = 240\nconst styles = makeStyles((theme) => ({\n    appBar: {\n        zIndex: `${theme.zIndex.drawer + 1} !important`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginRight: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px) !important`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n}))\n\n\nexport default function AppBar(props) {\n\n    const classes = styles()\n    const [accountInfoAnchorEl, setAccountInfoAnchorEl] = useState(null)\n    const [accountInfoIsOpen, setAccountInfoIsOpen] = useState(false)\n\n    const openAccountInfoHandler = (event) => {\n        setAccountInfoAnchorEl(event.currentTarget)\n        setAccountInfoIsOpen(true)\n    };\n\n    const closeAccountInfoHandler = () => {\n        setAccountInfoAnchorEl(null)\n        setAccountInfoIsOpen(false)\n    };\n\n    return (\n        <Wrapper>\n            <RTL>\n                <Box sx={{ flexGrow: 1, }}>\n                    <MuiAppBar position=\"fixed\" dir='rtl' className={`app-bar ${props.drawerIsOpen ? 'appBarShift' : 'appBar'} ${props.drawerIsOpen ? classes.appBarShift : classes.appBar}`}>\n                        <Toolbar>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"start\"\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={props.openDrawerHandler}\n                                className={`${props.drawerIsOpen ? \"menuButtonShift\": \"\"}`}\n                                sx={{ mr: 2 }}\n                            >\n                                <MenuIcon className={\"app-bar-button\"} />\n                            </IconButton>\n                            <Box sx={{ flexGrow: 1 }} />\n                            <Box sx={{ display: { xs: 'none', md: 'flex', marginRight: '1%', justifyContent: 'space-evenly', width: '12%' } }}>\n                            <IconButton\n                                    size=\"large\"\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    // aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    color=\"inherit\"\n                                    // onClick = {openAccountInfoHandler}\n                                    \n                                >\n                                    <AccountCircleIcon className={\"app-bar-button\"}/>\n                                </IconButton>\n                                <IconButton\n                                    size=\"large\"\n                                    aria-label=\"show 17 new notifications\"\n                                    color=\"inherit\"\n                                >\n                                    <Badge badgeContent={0} color=\"error\">\n                                        <NotificationsIcon className={\"app-bar-button\"}/>\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    size=\"large\"\n                                    edge=\"end\"\n                                    aria-label=\"account of current user\"\n                                    // aria-controls={menuId}\n                                    aria-haspopup=\"true\"\n                                    color=\"inherit\"\n                                    className={\"rotate180\"}\n                                >\n                                    <ExitToAppIcon className={\"app-bar-button\"}/>\n                                </IconButton>\n                            </Box>\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    size=\"large\"\n                                    aria-label=\"show more\"\n                                    // aria-controls={mobileMenuId}\n                                    aria-haspopup=\"true\"\n                                    // onClick={handleMobileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <MoreIcon />\n                                </IconButton>\n                            </Box>\n                        </Toolbar>\n                    </MuiAppBar>\n                </Box>\n                <AccountInfo\n                    anchorEl={accountInfoAnchorEl}\n                    open={accountInfoIsOpen}\n                    handleClose={closeAccountInfoHandler}\n                    accountUsername={\"Hamidreza7799\"}\n                ></AccountInfo>\n            </RTL>\n        </Wrapper>\n    )\n}\n","import React from \"react\"\n\nconst HomeContext = React.createContext({\n    drawerIsopen: false,\n    openDrawerHandler: () => {},\n    closeDrawerInfoHandler: () => {},\n})\n\nexport default HomeContext","import * as React from 'react';\nimport { styled, } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport CloseIcon from '@mui/icons-material/Close';\nimport RTL from '../../hoc/RTL/RTL'\nimport HomeContext from '../../context/HomeContext';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport HomeIcon from '@mui/icons-material/Home';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { Link } from 'react-router-dom'\nimport './Drawer.css'\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(5)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(8)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nexport default class SabadDrawer extends React.Component {\n\n    static contextType = HomeContext\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            drawerButtons: [\n                {\n                    title: \"صفحه اصلی\",\n                    link: \"/home\",\n                    icon: <HomeIcon fontSize='large' />\n                },\n                {\n                    title: \"اطلاعات\",\n                    link: \"/info\",\n                    icon: <InfoIcon fontSize='large' />\n                },\n                {\n                    title: \"پروفایل\",\n                    link: \"/profile\",\n                    icon: <AccountCircleIcon fontSize='large' />\n                },\n\n            ]\n        }\n    }\n\n    render() {\n        console.log(window.location.pathname)\n        return (\n            <RTL>\n                <Box sx={{ display: 'flex' }}>\n                    <Drawer variant=\"permanent\" open={this.props.drawerIsOpen} anchor={'left'}>\n                        <DrawerHeader>\n                            <IconButton onClick={this.props.closeDrawerHandler} open={this.props.drawerIsOpen}>\n                                <CloseIcon sx={{\n                                    fontSize: \"1.85rem\"\n                                }}/>\n                            </IconButton>\n                        </DrawerHeader>\n                        <Divider />\n                        <List>\n                            {this.state.drawerButtons.map((button, index) => (\n                                <Link to={`${button.link}`} style={{textDecoration: 'none',}}>\n                                    <ListItem button key={button.title} dir='rtl' className={`${button.link === window.location.pathname? \"dark-blue select-item-border\": \"\"}`}>\n                                        <ListItemIcon className={`${button.link === window.location.pathname? \"dark-blue\": \"\"}`}>\n                                            {button.icon}\n                                        </ListItemIcon>\n                                        <ListItemText primary={button.title} className={`${button.link === window.location.pathname? \"select-item-text\": \"item-text\"}`}/>\n                                    </ListItem>\n                                </Link>\n                            ))}\n                        </List>\n                    </Drawer>\n                </Box>\n            </RTL>\n        );\n    }\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    progressRootSuccess: {\n        \"& span\": {\n            backgroundColor: theme.palette.success.main\n        }\n    },\n    progressRootWarning: {\n        \"& span\": {\n            backgroundColor: theme.palette.warning.main\n        }\n    },\n    progressRootError: {\n        \"& span\": {\n            backgroundColor: theme.palette.error.main\n        }\n    }\n}))\n\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n    height: 10,\n    borderRadius: 5,\n    [`&.${linearProgressClasses.colorPrimary}`]: {\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n    },\n    [`& .${linearProgressClasses.bar}`]: {\n        borderRadius: 5,\n    },\n}));\n\nfunction LinearProgressWithLabel(props) {\n    const classes = styles()\n    \n    return (\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            {/* <Box sx={{ minWidth: 35, marginRight: 1}}>\n                <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box> */}\n            <Box sx={{ width: '100%', mr: 1 }}>\n                <BorderLinearProgress variant=\"determinate\" value={props.value} className={props.value === 100 ? classes.progressRootSuccess : props.value < 50 ? classes.progressRootError: classes.progressRootWarning}/>\n            </Box>\n        </Box>\n    );\n}\n\n\nexport default function ProgressBars(props) {\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <LinearProgressWithLabel value={props.value} />\n        </Box>\n    );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Route, Link, Switch, useHistory} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport MuiTable from '@mui/material/Table';\nimport MuiTableBody from '@mui/material/TableBody';\nimport MuiTableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport MuiTableContainer from '@mui/material/TableContainer';\nimport MuiTableHead from '@mui/material/TableHead';\nimport MuiTableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { styled } from '@mui/material/styles';\nimport Slider from \"@mui/material/Slider\";\nimport UserContext, { UserContextConsumer } from '../../context/UserContext'\nimport AppContext from '../../context/AppContext'\nimport './Table.css'\nimport axios from '../../axios';\nimport ProgressBar from \"./Progress/Progress\"\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Tooltip from '@mui/material/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookie from 'js-cookie'\n\nconst styles = makeStyles((theme) => ({\n    visibilityIconSuccess: {\n\n        color: theme.palette.success.main\n\n    },\n    visibilityIconWarning: {\n\n        color: theme.palette.warning.main\n\n    },\n    visibilityIconError: {\n\n        color: theme.palette.error.main\n\n    }\n}))\n\nconst StyledTableCell = styled(MuiTableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14,\n    },\n}));\n\n\nfunction Row(props) {\n    const classes = styles()\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment >\n            <MuiTableRow key={row.productOwner} sx={{ '& > *': { borderBottom: 'unset' } }} className={props.cssClass}>\n                <MuiTableCell>\n                    <IconButton\n                        aria-label=\"expand row\"\n                        size=\"small\"\n                        onClick={() => setOpen(open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </MuiTableCell>\n                <MuiTableCell component=\"th\" scope=\"row\" align=\"center\">\n                    {row.productOwner}\n                </MuiTableCell>\n                <MuiTableCell align=\"center\">{row.projectName}</MuiTableCell>\n                <MuiTableCell align=\"center\">{row.startDate}</MuiTableCell>\n                <MuiTableCell align=\"center\">{row.numberOfData}</MuiTableCell>\n                <Tooltip title={`${row.completePercent}%`} placement={\"right\"}>\n                    <MuiTableCell align=\"center\">\n                        <ProgressBar value={row.completePercent} className={\"progress-bar\"} />\n                    </MuiTableCell>\n                </Tooltip>\n                <MuiTableCell align=\"center\">\n                    <Link to={`/project/${props.username}/${props.projectSlug}/task/${props.taskSlug}`}>\n                        <IconButton>\n                            <VisibilityIcon className={row.completePercent === 100 ? classes.visibilityIconSuccess : row.completePercent < 50 ? classes.visibilityIconError : classes.visibilityIconWarning} />\n                        </IconButton>\n                    </Link>\n                </MuiTableCell>\n            </MuiTableRow>\n            <MuiTableRow>\n                <MuiTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                History\n                            </Typography>\n                            <MuiTable size=\"small\" aria-label=\"purchases\">\n                                <MuiTableHead>\n                                    <MuiTableRow>\n                                        <MuiTableCell>Date</MuiTableCell>\n                                        <MuiTableCell>Customer</MuiTableCell>\n                                        <MuiTableCell align=\"right\">Amount</MuiTableCell>\n                                        <MuiTableCell align=\"right\">Total price ($)</MuiTableCell>\n                                    </MuiTableRow>\n                                </MuiTableHead>\n                                <MuiTableBody>\n                                    {row.history.map((historyRow) => (\n                                        <MuiTableRow key={historyRow.date}>\n                                            <MuiTableCell component=\"th\" scope=\"row\">\n                                                {historyRow.date}\n                                            </MuiTableCell>\n                                            <MuiTableCell>{historyRow.customerId}</MuiTableCell>\n                                            <MuiTableCell align=\"right\">{historyRow.amount}</MuiTableCell>\n                                            <MuiTableCell align=\"right\">\n                                                {Math.round(historyRow.amount * row.price * 100) / 100}\n                                            </MuiTableCell>\n                                        </MuiTableRow>\n                                    ))}\n                                </MuiTableBody>\n                            </MuiTable>\n                        </Box>\n                    </Collapse>\n                </MuiTableCell>\n            </MuiTableRow>\n        </React.Fragment>\n    );\n}\n\n\n\nconst StyledTableRow = styled(Row)(({ theme }) => ({\n    '&:nth-of-child(even)': {\n        backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0,\n    },\n}));\n\nexport default function Table(props) {\n    const history = useHistory();\n    const [getTableData, setGetTableData] = useState(false)\n    const [packsData, setPacksData] = useState([])\n    const user = useContext(UserContext)\n    const app = useContext(AppContext)\n\n    useEffect(() => {\n        if (!getTableData) {\n            setGetTableData(true)\n            app.openLoadingHandler()\n            axios.defaults.headers.common['Authorization'] = Cookie.get(\"token\")\n            axios.get(\"/api/annotator/tasks/\").then((response) => {\n                const packs = response.data.results.map((pack) => {\n                    return {\n                        id: pack.id,\n                        productOwner: pack.task.owner,\n                        projectSlug: pack.task.project,\n                        projectName: pack.task.subject,\n                        startDate: pack.join_date.replace(/T.*/, \"\").split(\"-\").join(\"/\"),\n                        numberOfData: pack.number_of_data,\n                        completePercent: pack.progress,\n                        task: pack.task,\n                        history: [\n                            {\n                                date: '2020-01-05',\n                                customerId: '11091700',\n                                amount: 3,\n                            },\n                            {\n                                date: '2020-01-02',\n                                customerId: 'Anonymous',\n                                amount: 1,\n                            },\n                        ],\n                    }\n                })\n                setPacksData(packs)\n            }).catch((error) => {\n                app.openMessageDialogHandler({\n                    messageType: \"error\",\n                    messageText: error.response?.data.detail\n                })\n                if(error.response.status != 500)\n                    history.push(\"/login\")\n            }).finally(() => {\n                app.closeLoadingHandler()\n            })\n        }\n    })\n\n    const show = () => {\n        console.log(packsData)\n    }\n\n    return (\n        <MuiTableContainer component={Paper} className={'table-container'} sx={{\n            maxHeight: \"80vh\",\n            overflowY: \"auto\",\n            scrollbarColor: \"#d4aa70 #e4e4e4\",\n            scrollbarWidth: \"thin\",\n        }}>\n            <MuiTable stickyHeader dir='rtl' aria-label=\"collapsible table\">\n                <MuiTableHead onClick={show}>\n                    <MuiTableRow>\n                        <StyledTableCell align=\"center\" />\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >نام کارفرما</StyledTableCell>\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >نام پروژه</StyledTableCell>\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >تاریخ شروع</StyledTableCell>\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >تعداد داده</StyledTableCell>\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >درصد پیشرفت</StyledTableCell>\n                        <StyledTableCell align=\"center\" className={\"table-header-cell\"} >مشاهده پروژه</StyledTableCell>\n                    </MuiTableRow>\n                </MuiTableHead>\n                <MuiTableBody>\n                    {packsData.map((pack, index) => {\n                        return (\n                            <Row\n                                key={pack.productOwner}\n                                username={pack.productOwner}\n                                projectSlug={pack.task.url.split('/').at(-4)}\n                                taskSlug={pack.task.url.split('/').at(-2)}\n                                row={pack}\n                                cssClass={index % 2 === 0 ? \"colorful-row\" : \"\"}\n                            />\n                        )\n                    }\n                    )}\n                </MuiTableBody>\n            </MuiTable>\n        </MuiTableContainer>\n    );\n}\n","import React from \"react\";\nimport Wrapper from \"../../hoc/Wrapper\";\nimport RTL from \"../../hoc/RTL/RTL\";\nimport AppBar from \"../../components/AppBar/AppBar\";\nimport SabadDrawer from \"../../components/Drawer/Drawer\";\nimport Table from \"../../components/Table/Table\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from \"@mui/material\"\n\nimport './HomePage.css'\n\nconst styles = makeStyles((theme) => ({\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: \"7vh\",\n        fontFamily: 'IRANSansWeb',\n        maxWidth: '100% !important',\n        display: 'flex !important',\n        justifyContent: \"center\"\n    },\n}))\n\nfunction HomePage(props) {\n    const classes = styles()\n\n    return (\n        <Wrapper>\n            <RTL>\n                <AppBar drawerIsOpen={props.drawerIsOpen} openDrawerHandler={props.openDrawerHandler} />\n                <SabadDrawer drawerIsOpen={props.drawerIsOpen} openDrawerHandler={props.openDrawerHandler} closeDrawerHandler={props.closeDrawerHandler} />\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Table title={'صفحه اصلی'} />\n                    </Container>\n                </main>\n            </RTL>\n        </Wrapper>\n    )\n\n}\n\nexport default HomePage","import React from \"react\";\nimport { Slide } from \"@mui/material\";\n\nconst DialogTransition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default DialogTransition;\n","import React from \"react\";\nimport { Backdrop } from \"@mui/material\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n  AppBar,\n  Alert,\n} from \"@mui/material\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DialogTransition from \"../DialogTransition\";\nimport RTL from \"../../../hoc/RTL/RTL\";\nimport \"./MessageDialog.css\";\n\nclass MessageDialog extends React.Component {\n  render() {\n    return (\n      <RTL>\n        <Backdrop sx={{ color: \"#fff\", zIndex: 100 }} open={this.props.isOpen} onClick={this.props.closeDialog}>\n          <Dialog\n            open={this.props.isOpen}\n            TransitionComponent={DialogTransition}\n            keepMounted\n            onClose={this.props.closeDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            scroll={\"body\"}\n            maxWidth=\"xs\"\n            fullWidth={true}\n          >\n            <Alert dir=\"rtl\" variant=\"filled\" severity={\"warning\"} onClose={() => {}}>\n              توضیحات\n            </Alert>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Typography variant=\"body1\" sx={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n                  {this.props.messageText}\n                </Typography>\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n        </Backdrop>\n      </RTL>\n    );\n  }\n}\n\nexport default MessageDialog;\n","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n\n    this.views_models = {};\n\n    this.tools = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getTool(name) {\n    const model = this.tools[name];\n    if (!model) {\n      const models = Object.keys(this.tools);\n      throw new Error(\"No model registered for tool: \" + name + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n\n  addTool(name, model) {\n    this.tools[name] = model;\n  }\n\n  /**\n   * Get model\n   * @param {*} tag\n   */\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nRegistry.getTool = Registry.getTool.bind(Registry);\nRegistry.getModelByTag = Registry.getModelByTag.bind(Registry);\n\nexport default Registry;\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n * @param {number} lgth\n */\nexport function guidGenerator(lgth) {\n  let uniqueID = nanoid(10);\n\n  if (lgth) {\n    uniqueID = nanoid(lgth);\n  }\n\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport xml2js from \"xml2js\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\nexport const TRAVERSE_SKIP = \"skip\";\nexport const TRAVERSE_STOP = \"stop\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  if (!style) return null;\n\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let item of Object.keys(attrs)) {\n    /**\n     * Convert node of Tree to boolean value\n     */\n    if (item !== \"value\" && (attrs[item] === \"true\" || attrs[item] === \"false\")) {\n      props[item.toLowerCase()] = JSON.parse(attrs[item]);\n    } else {\n      props[item.toLowerCase()] = attrs[item];\n    }\n  }\n\n  return props;\n}\n\n/**\n *\n * @param {*} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  // TODO: this code shall be replaced with a proper XML tree\n  // rendering, as of right now, problem is that xml2js doesn't\n  // support that with the additional attributes used to parse the\n  // tree.\n  let htseen = -1;\n  const hypertexts = (function() {\n    let m;\n    const res = [];\n    const re = /<HyperText.*?>(.*?)<\\/HyperText>/gi;\n    do {\n      m = re.exec(html);\n      if (m) {\n        res.push(m[1]);\n      }\n    } while (m);\n\n    return res;\n  })();\n\n  function findHT(node) {\n    htseen = htseen + 1;\n    return hypertexts[htseen];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node.$$) return null;\n\n    // if it's a hypertext process the children differently, that's\n    // done for convenience. value attribute takes precedence if present\n    if (node[\"#name\"].toLowerCase() === \"hypertext\") {\n      return node.$ && \"value\" in node.$ ? node.$[\"value\"] : findHT(node);\n    }\n\n    let text = null;\n    const res = [];\n\n    for (let chld of node.$$) {\n      if (chld[\"#name\"] !== \"__text__\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      } else {\n        text = chld._;\n      }\n    }\n\n    return res.length === 0 ? text : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.$);\n\n    /**\n     * Generation id of node\n     */\n    data[\"id\"] = guidGenerator();\n\n    /**\n     * Build type name\n     */\n    data[\"type\"] = node[\"#name\"].toLowerCase();\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  let document;\n\n  // it's actually a sync function, but there is no sync interface\n  // because of some backwards compat\n  xml2js.parseString(\n    htmlSelfClosingTags,\n    {\n      explicitChildren: true,\n      preserveChildrenOrder: true,\n      charsAsChildren: true,\n    },\n    function(err, result) {\n      document = result;\n    },\n  );\n\n  const root = buildData(Object.values(document)[0]);\n  root.children = addNode(Object.values(document)[0]);\n\n  return root;\n}\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const View = Registry.getViewByModel(getType(el).name);\n  console.log(getType(el).name);\n\n  if (!View) {\n    throw new Error(\"No view for model:\" + getType(el).name);\n  }\n\n  if (\n    [\"ViewModel\", \"ChoicesModel\", \"RectangleLabelsModel\", \"TextAreaModel\", \"AudioPlusModel\"].includes(getType(el).name)\n  ) {\n    return (\n      <div id={getType(el).name} className=\"Hamid\">\n        <View key={guidGenerator()} item={el} id={getType(el).name} />\n      </div>\n    );\n  } else {\n    return <View key={guidGenerator()} item={el} />;\n  }\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n  if (!Array.isArray(classes)) classes = [classes];\n\n  traverseTree(obj, function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n  });\n\n  return res;\n}\n\nfunction traverseTree(root, cb) {\n  let visitNode;\n\n  visitNode = function(node) {\n    const res = cb(node);\n    if (res === TRAVERSE_SKIP) return;\n    if (res === TRAVERSE_STOP) return TRAVERSE_STOP;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const visit = visitNode(chld);\n        if (visit === TRAVERSE_STOP) return TRAVERSE_STOP;\n      }\n    }\n  };\n\n  visitNode(root);\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n  traverseTree,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g; // eslint-disable-line no-useless-escape\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n\nexport function flatten(arr) {\n  return arr.reduce(function(flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n  }, []);\n}\n\nexport function hashCode(str) {\n  var hash = 0;\n  if (str.length === 0) {\n    return hash + \"\";\n  }\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash + \"\";\n}\n\nexport function atobUnicode(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return decodeURIComponent(\n    atob(str)\n      .split(\"\")\n      .map(function(c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\"),\n  );\n}\n","let gradients = [\n  \"#c22525\",\n  \"#c13025\",\n  \"#bf3b24\",\n  \"#be4624\",\n  \"#bc5124\",\n  \"#bb5b23\",\n  \"#ba6623\",\n  \"#b87023\",\n  \"#b77a22\",\n  \"#b58422\",\n  \"#b48d22\",\n  \"#b39722\",\n  \"#b1a021\",\n  \"#b0aa21\",\n  \"#aaae21\",\n  \"#9ead20\",\n  \"#93ab20\",\n  \"#87aa20\",\n  \"#7ca91f\",\n  \"#71a71f\",\n  \"#66a61f\",\n  \"#5ba41e\",\n  \"#51a31e\",\n  \"#46a21e\",\n  \"#3ca01e\",\n  \"#329f1d\",\n  \"#289d1d\",\n  \"#1e9c1d\",\n  \"#1c9a24\",\n  \"#1c992d\",\n  \"#1c992d\",\n];\n\nlet colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof value === \"string\" && typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\n/**\n * Convert color to RGB(A)\n * @param {*} value\n * @param {number} alpha\n */\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n\n/**\n * Convert string to HEX color\n * @param {string} str\n */\nexport function stringToColor(str) {\n  let hash = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n/**\n * Change alpha channel of RGBA\n * @param {string} rgba\n * @param {number} alpha from 0 to 1\n */\nexport function rgbaChangeAlpha(rgba, alpha) {\n  return rgba.replace(/[\\d\\.]+\\)$/g, `${alpha})`); // eslint-disable-line no-useless-escape\n}\n\n// given number from 0.00 to 1.00 return a color from red to green\nexport function getScaleGradient(number) {\n  return gradients[Math.ceil(number * 30)];\n}\n","// import { MagicWand } from \"magic-wand-js\";\n// Magic Wand (Fuzzy Selection Tool) for Javascript\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice avnd this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst MagicWand = (function() {\n  var lib = {};\n\n  /** Create a binary mask on the image by color threshold\n   * Algorithm: Scanline flood fill (http://en.wikipedia.org/wiki/Flood_fill)\n   * @param {Object} image: {Uint8Array} data, {int} width, {int} height, {int} bytes\n   * @param {int} x of start pixel\n   * @param {int} y of start pixel\n   * @param {int} color threshold\n   * @param {Uint8Array} mask of visited points (optional)\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.floodFill = function(image, px, py, colorThreshold, mask) {\n    var c,\n      x,\n      newY,\n      el,\n      xr,\n      xl,\n      dy,\n      dyl,\n      dyr,\n      checkY,\n      data = image.data,\n      w = image.width,\n      h = image.height,\n      bytes = image.bytes, // number of bytes in the color\n      maxX = -1,\n      minX = w + 1,\n      maxY = -1,\n      minY = h + 1,\n      i = py * w + px, // start point index in the mask data\n      result = new Uint8Array(w * h), // result mask\n      visited = new Uint8Array(mask ? mask : w * h); // mask of visited points\n\n    if (visited[i] === 1) return null;\n\n    i = i * bytes; // start point index in the image data\n    var sampleColor = [data[i], data[i + 1], data[i + 2], data[i + 3]]; // start point color (sample)\n\n    var stack = [{ y: py, left: px - 1, right: px + 1, dir: 1 }]; // first scanning line\n    do {\n      el = stack.shift(); // get line for scanning\n\n      checkY = false;\n      for (x = el.left + 1; x < el.right; x++) {\n        dy = el.y * w;\n        i = (dy + x) * bytes; // point index in the image data\n\n        if (visited[dy + x] === 1) continue; // check whether the point has been visited\n        // compare the color of the sample\n        c = data[i] - sampleColor[0]; // check by red\n        if (c > colorThreshold || c < -colorThreshold) continue;\n        c = data[i + 1] - sampleColor[1]; // check by green\n        if (c > colorThreshold || c < -colorThreshold) continue;\n        c = data[i + 2] - sampleColor[2]; // check by blue\n        if (c > colorThreshold || c < -colorThreshold) continue;\n\n        checkY = true; // if the color of the new point(x,y) is similar to the sample color need to check minmax for Y\n\n        result[dy + x] = 1; // mark a new point in mask\n        visited[dy + x] = 1; // mark a new point as visited\n\n        xl = x - 1;\n        // walk to left side starting with the left neighbor\n        while (xl > -1) {\n          dyl = dy + xl;\n          i = dyl * bytes; // point index in the image data\n          if (visited[dyl] === 1) break; // check whether the point has been visited\n          // compare the color of the sample\n          c = data[i] - sampleColor[0]; // check by red\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 1] - sampleColor[1]; // check by green\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 2] - sampleColor[2]; // check by blue\n          if (c > colorThreshold || c < -colorThreshold) break;\n\n          result[dyl] = 1;\n          visited[dyl] = 1;\n\n          xl--;\n        }\n        xr = x + 1;\n        // walk to right side starting with the right neighbor\n        while (xr < w) {\n          dyr = dy + xr;\n          i = dyr * bytes; // index point in the image data\n          if (visited[dyr] === 1) break; // check whether the point has been visited\n          // compare the color of the sample\n          c = data[i] - sampleColor[0]; // check by red\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 1] - sampleColor[1]; // check by green\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 2] - sampleColor[2]; // check by blue\n          if (c > colorThreshold || c < -colorThreshold) break;\n\n          result[dyr] = 1;\n          visited[dyr] = 1;\n\n          xr++;\n        }\n\n        // check minmax for X\n        if (xl < minX) minX = xl + 1;\n        if (xr > maxX) maxX = xr - 1;\n\n        newY = el.y - el.dir;\n        if (newY >= 0 && newY < h) {\n          // add two scanning lines in the opposite direction (y - dir) if necessary\n          if (xl < el.left) stack.push({ y: newY, left: xl, right: el.left, dir: -el.dir }); // from \"new left\" to \"current left\"\n          if (el.right < xr) stack.push({ y: newY, left: el.right, right: xr, dir: -el.dir }); // from \"current right\" to \"new right\"\n        }\n        newY = el.y + el.dir;\n        if (newY >= 0 && newY < h) {\n          // add the scanning line in the direction (y + dir) if necessary\n          if (xl < xr) stack.push({ y: newY, left: xl, right: xr, dir: el.dir }); // from \"new left\" to \"new right\"\n        }\n      }\n      // check minmax for Y if necessary\n      if (checkY) {\n        if (el.y < minY) minY = el.y;\n        if (el.y > maxY) maxY = el.y;\n      }\n    } while (stack.length > 0);\n\n    return {\n      data: result,\n      width: image.width,\n      height: image.height,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Apply the gauss-blur filter to binary mask\n   * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\n   * http://www.librow.com/articles/article-9\n   * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.gaussBlur = function(mask, radius) {\n    var i,\n      k,\n      k1,\n      x,\n      y,\n      val,\n      start,\n      end,\n      n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with the center point)\n      s2 = radius * radius,\n      wg = new Float32Array(n), // weights\n      total = 0, // sum of weights(used for normalization)\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY;\n\n    // calc gauss weights\n    for (i = 0; i < radius; i++) {\n      var dsq = (radius - i) * (radius - i);\n      var ww = Math.exp(-dsq / (2.0 * s2)) / (2 * Math.PI * s2);\n      wg[radius + i] = wg[radius - i] = ww;\n      total += 2 * ww;\n    }\n    // normalization weights\n    for (i = 0; i < n; i++) {\n      wg[i] /= total;\n    }\n\n    var result = new Uint8Array(w * h), // result mask\n      endX = radius + w,\n      endY = radius + h;\n\n    //walk through all source points for blur\n    for (y = minY; y < maxY + 1; y++)\n      for (x = minX; x < maxX + 1; x++) {\n        val = 0;\n        k = y * w + x; // index of the point\n        start = radius - x > 0 ? radius - x : 0;\n        end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n        k1 = k - radius;\n        // walk through x-neighbors\n        for (i = start; i < end; i++) {\n          val += data[k1 + i] * wg[i];\n        }\n        start = radius - y > 0 ? radius - y : 0;\n        end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n        k1 = k - radius * w;\n        // walk through y-neighbors\n        for (i = start; i < end; i++) {\n          val += data[k1 + i * w] * wg[i];\n        }\n        result[k] = val > 0.5 ? 1 : 0;\n      }\n\n    return {\n      data: result,\n      width: w,\n      height: h,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Create a border index array of boundary points of the mask with radius-neighbors\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @param {Uint8Array} visited: mask of visited points (optional)\n   * @return {Array} border index array of boundary points with radius-neighbors (only points need for blur)\n   */\n  function createBorderForBlur(mask, radius, visited) {\n    var x,\n      i,\n      j,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      visitedData = new Uint8Array(data),\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      len = w * h,\n      temp = new Uint8Array(len), // auxiliary array to check uniqueness\n      border = [], // only border points\n      x0 = Math.max(minX, 1),\n      x1 = Math.min(maxX, w - 2),\n      y0 = Math.max(minY, 1),\n      y1 = Math.min(maxY, h - 2);\n\n    if (visited && visited.length > 0) {\n      // copy visited points (only \"black\")\n      for (k = 0; k < len; k++) {\n        if (visited[k] === 1) visitedData[k] = 1;\n      }\n    }\n\n    // walk through inner values except points on the boundary of the image\n    for (y = y0; y < y1 + 1; y++)\n      for (x = x0; x < x1 + 1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          visitedData[k + 1] === 0 ||\n          visitedData[k - 1] === 0 ||\n          visitedData[k1] === 0 ||\n          visitedData[k1 + 1] === 0 ||\n          visitedData[k1 - 1] === 0 ||\n          visitedData[k2] === 0 ||\n          visitedData[k2 + 1] === 0 ||\n          visitedData[k2 - 1] === 0\n        ) {\n          //if (visitedData[k + 1] + visitedData[k - 1] +\n          //    visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +\n          //    visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] === 8) continue;\n          border.push(k);\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    if (minX === 0) for (y = minY; y < maxY + 1; y++) if (data[y * w] === 1) border.push(y * w);\n\n    if (maxX === w - 1) for (y = minY; y < maxY + 1; y++) if (data[y * w + maxX] === 1) border.push(y * w + maxX);\n\n    if (minY === 0) for (x = minX; x < maxX + 1; x++) if (data[x] === 1) border.push(x);\n\n    if (maxY === h - 1) for (x = minX; x < maxX + 1; x++) if (data[maxY * w + x] === 1) border.push(maxY * w + x);\n\n    var result = [], // border points with radius-neighbors\n      start,\n      end,\n      endX = radius + w,\n      endY = radius + h,\n      n = radius * 2 + 1; // size of the pattern for radius-neighbors (from -r to +r with the center point)\n\n    len = border.length;\n    // walk through radius-neighbors of border points and add them to the result array\n    for (j = 0; j < len; j++) {\n      k = border[j]; // index of the border point\n      temp[k] = 1; // mark border point\n      result.push(k); // save the border point\n      x = k % w; // calc x by index\n      y = (k - x) / w; // calc y by index\n      start = radius - x > 0 ? radius - x : 0;\n      end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n      k1 = k - radius;\n      // walk through x-neighbors\n      for (i = start; i < end; i++) {\n        k2 = k1 + i;\n        if (temp[k2] === 0) {\n          // check the uniqueness\n          temp[k2] = 1;\n          result.push(k2);\n        }\n      }\n      start = radius - y > 0 ? radius - y : 0;\n      end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n      k1 = k - radius * w;\n      // walk through y-neighbors\n      for (i = start; i < end; i++) {\n        k2 = k1 + i * w;\n        if (temp[k2] === 0) {\n          // check the uniqueness\n          temp[k2] = 1;\n          result.push(k2);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /** Apply the gauss-blur filter ONLY to border points with radius-neighbors\n   * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\n   * http://www.librow.com/articles/article-9\n   * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @param {Uint8Array} visited: mask of visited points (optional)\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.gaussBlurOnlyBorder = function(mask, radius, visited) {\n    var border = createBorderForBlur(mask, radius, visited), // get border points with radius-neighbors\n      ww,\n      dsq,\n      i,\n      j,\n      k,\n      k1,\n      x,\n      y,\n      val,\n      start,\n      end,\n      n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with center point)\n      s2 = 2 * radius * radius,\n      wg = new Float32Array(n), // weights\n      total = 0, // sum of weights(used for normalization)\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      len = border.length;\n\n    // calc gauss weights\n    for (i = 0; i < radius; i++) {\n      dsq = (radius - i) * (radius - i);\n      ww = Math.exp(-dsq / s2) / Math.PI;\n      wg[radius + i] = wg[radius - i] = ww;\n      total += 2 * ww;\n    }\n    // normalization weights\n    for (i = 0; i < n; i++) {\n      wg[i] /= total;\n    }\n\n    var result = new Uint8Array(data), // copy the source mask\n      endX = radius + w,\n      endY = radius + h;\n\n    //walk through all border points for blur\n    for (i = 0; i < len; i++) {\n      k = border[i]; // index of the border point\n      val = 0;\n      x = k % w; // calc x by index\n      y = (k - x) / w; // calc y by index\n      start = radius - x > 0 ? radius - x : 0;\n      end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n      k1 = k - radius;\n      // walk through x-neighbors\n      for (j = start; j < end; j++) {\n        val += data[k1 + j] * wg[j];\n      }\n      if (val > 0.5) {\n        result[k] = 1;\n        // check minmax\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n        continue;\n      }\n      start = radius - y > 0 ? radius - y : 0;\n      end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n      k1 = k - radius * w;\n      // walk through y-neighbors\n      for (j = start; j < end; j++) {\n        val += data[k1 + j * w] * wg[j];\n      }\n      if (val > 0.5) {\n        result[k] = 1;\n        // check minmax\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n      } else {\n        result[k] = 0;\n      }\n    }\n\n    return {\n      data: result,\n      width: w,\n      height: h,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Create a border mask (only boundary points)\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\n   */\n  lib.createBorderMask = function(mask) {\n    var x,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      rw = maxX - minX + 1, // bounds size\n      rh = maxY - minY + 1,\n      result = new Uint8Array(rw * rh), // reduced mask (bounds size)\n      x0 = Math.max(minX, 1),\n      x1 = Math.min(maxX, w - 2),\n      y0 = Math.max(minY, 1),\n      y1 = Math.min(maxY, h - 2);\n\n    // walk through inner values except points on the boundary of the image\n    for (y = y0; y < y1 + 1; y++)\n      for (x = x0; x < x1 + 1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          data[k + 1] === 0 ||\n          data[k - 1] === 0 ||\n          data[k1] === 0 ||\n          data[k1 + 1] === 0 ||\n          data[k1 - 1] === 0 ||\n          data[k2] === 0 ||\n          data[k2 + 1] === 0 ||\n          data[k2 - 1] === 0\n        ) {\n          //if (data[k + 1] + data[k - 1] +\n          //    data[k1] + data[k1 + 1] + data[k1 - 1] +\n          //    data[k2] + data[k2 + 1] + data[k2 - 1] === 8) continue;\n          result[(y - minY) * rw + (x - minX)] = 1;\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    if (minX === 0) for (y = minY; y < maxY + 1; y++) if (data[y * w] === 1) result[(y - minY) * rw] = 1;\n\n    if (maxX === w - 1)\n      for (y = minY; y < maxY + 1; y++) if (data[y * w + maxX] === 1) result[(y - minY) * rw + (maxX - minX)] = 1;\n\n    if (minY === 0) for (x = minX; x < maxX + 1; x++) if (data[x] === 1) result[x - minX] = 1;\n\n    if (maxY === h - 1)\n      for (x = minX; x < maxX + 1; x++) if (data[maxY * w + x] === 1) result[(maxY - minY) * rw + (x - minX)] = 1;\n\n    return {\n      data: result,\n      width: rw,\n      height: rh,\n      offset: { x: minX, y: minY },\n    };\n  };\n\n  /** Create a border index array of boundary points of the mask\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height\n   * @return {Array} border index array boundary points of the mask\n   */\n  lib.getBorderIndices = function(mask) {\n    var x,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      border = [], // only border points\n      x1 = w - 1,\n      y1 = h - 1;\n\n    // walk through inner values except points on the boundary of the image\n    for (y = 1; y < y1; y++)\n      for (x = 1; x < x1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          data[k + 1] === 0 ||\n          data[k - 1] === 0 ||\n          data[k1] === 0 ||\n          data[k1 + 1] === 0 ||\n          data[k1 - 1] === 0 ||\n          data[k2] === 0 ||\n          data[k2 + 1] === 0 ||\n          data[k2 - 1] === 0\n        ) {\n          //if (data[k + 1] + data[k - 1] +\n          //    data[k1] + data[k1 + 1] + data[k1 - 1] +\n          //    data[k2] + data[k2 + 1] + data[k2 - 1] === 8) continue;\n          border.push(k);\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    for (y = 0; y < h; y++) if (data[y * w] === 1) border.push(y * w);\n\n    for (x = 0; x < w; x++) if (data[x] === 1) border.push(x);\n\n    k = w - 1;\n    for (y = 0; y < h; y++) if (data[y * w + k] === 1) border.push(y * w + k);\n\n    k = (h - 1) * w;\n    for (x = 0; x < w; x++) if (data[k + x] === 1) border.push(k + x);\n\n    return border;\n  };\n\n  /** Create a compressed mask with a \"white\" border (1px border with zero values) for the contour tracing\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\n   */\n  function prepareMask(mask) {\n    var x,\n      y,\n      w = mask.width,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      rw = maxX - minX + 3, // bounds size +1 px on each side (a \"white\" border)\n      rh = maxY - minY + 3,\n      result = new Uint8Array(rw * rh); // reduced mask (bounds size)\n\n    // walk through inner values and copy only \"black\" points to the result mask\n    for (y = minY; y < maxY + 1; y++)\n      for (x = minX; x < maxX + 1; x++) {\n        if (data[y * w + x] === 1) result[(y - minY + 1) * rw + (x - minX + 1)] = 1;\n      }\n\n    return {\n      data: result,\n      width: rw,\n      height: rh,\n      offset: { x: minX - 1, y: minY - 1 },\n    };\n  }\n\n  /** Create a contour array for the binary mask\n   * Algorithm: http://www.sciencedirect.com/science/article/pii/S1077314203001401\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Array} contours: {Array} points, {bool} inner, {int} label\n   */\n  lib.traceContours = function(mask) {\n    var m = prepareMask(mask),\n      contours = [],\n      label = 0,\n      w = m.width,\n      w2 = w * 2,\n      h = m.height,\n      src = m.data,\n      dx = m.offset.x,\n      dy = m.offset.y,\n      dest = new Uint8Array(src), // label matrix\n      i,\n      j,\n      x,\n      y,\n      k,\n      k1,\n      c,\n      inner,\n      dir,\n      first,\n      second,\n      current,\n      previous,\n      next,\n      d;\n\n    // all [dx,dy] pairs (array index is the direction)\n    // 5 6 7\n    // 4 X 0\n    // 3 2 1\n    var directions = [\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n    ];\n\n    for (y = 1; y < h - 1; y++)\n      for (x = 1; x < w - 1; x++) {\n        k = y * w + x;\n        if (src[k] === 1) {\n          for (i = -w; i < w2; i += w2) {\n            // k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)\n            if (src[k + i] === 0 && dest[k + i] === 0) {\n              // need contour tracing\n              inner = i === w; // is inner contour tracing ?\n              label++; // label for the next contour\n\n              c = [];\n              dir = inner ? 2 : 6; // start direction\n              current = previous = first = { x: x, y: y };\n              second = null;\n              while (true) {\n                dest[current.y * w + current.x] = label; // mark label for the current point\n                // bypass all the neighbors around the current point in a clockwise\n                for (j = 0; j < 8; j++) {\n                  dir = (dir + 1) % 8;\n\n                  // get the next point by new direction\n                  d = directions[dir]; // index as direction\n                  next = { x: current.x + d[0], y: current.y + d[1] };\n\n                  k1 = next.y * w + next.x;\n                  if (src[k1] === 1) {\n                    // black boundary pixel\n                    dest[k1] = label; // mark a label\n                    break;\n                  }\n                  dest[k1] = -1; // mark a white boundary pixel\n                  next = null;\n                }\n                if (next === null) break; // no neighbours (one-point contour)\n                current = next;\n                if (second) {\n                  if (\n                    previous.x === first.x &&\n                    previous.y === first.y &&\n                    current.x === second.x &&\n                    current.y === second.y\n                  ) {\n                    break; // creating the contour completed when returned to original position\n                  }\n                } else {\n                  second = next;\n                }\n                c.push({ x: previous.x + dx, y: previous.y + dy });\n                previous = current;\n                dir = (dir + 4) % 8; // next dir (symmetrically to the current direction)\n              }\n\n              if (next != null) {\n                c.push({ x: first.x + dx, y: first.y + dy }); // close the contour\n                contours.push({ inner: inner, label: label, points: c }); // add contour to the list\n              }\n            }\n          }\n        }\n      }\n\n    return contours;\n  };\n\n  /** Simplify contours\n   * Algorithms: http://psimpl.sourceforge.net/douglas-peucker.html\n   * http://neerc.ifmo.ru/wiki/index.php?title=%D0%A3%D0%BF%D1%80%D0%BE%D1%89%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D0%BE%D0%BB%D0%B8%D0%B3%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%86%D0%B5%D0%BF%D0%B8\n   * @param {Array} contours: {Array} points, {bool} inner, {int} label\n   * @param {float} simplify tolerant\n   * @param {int} simplify count: min number of points when the contour is simplified\n   * @return {Array} contours: {Array} points, {bool} inner, {int} label, {int} initialCount\n   */\n  lib.simplifyContours = function(contours, simplifyTolerant, simplifyCount) {\n    var lenContours = contours.length,\n      result = [],\n      i,\n      j,\n      k,\n      c,\n      points,\n      len,\n      resPoints,\n      lst,\n      stack,\n      ids,\n      maxd,\n      maxi,\n      dist,\n      r1,\n      r2,\n      r12,\n      dx,\n      dy,\n      pi,\n      pf,\n      pl;\n\n    // walk through all contours\n    for (j = 0; j < lenContours; j++) {\n      c = contours[j];\n      points = c.points;\n      len = c.points.length;\n\n      if (len < simplifyCount) {\n        // contour isn't simplified\n        resPoints = [];\n        for (k = 0; k < len; k++) {\n          resPoints.push({ x: points[k].x, y: points[k].y });\n        }\n        result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: len });\n        continue;\n      }\n\n      lst = [0, len - 1]; // always add first and last points\n      stack = [{ first: 0, last: len - 1 }]; // first processed edge\n\n      do {\n        ids = stack.shift();\n        if (ids.last <= ids.first + 1) {\n          // no intermediate points\n          continue;\n        }\n\n        maxd = -1.0; // max distance from point to current edge\n        maxi = ids.first; // index of maximally distant point\n\n        for (\n          i = ids.first + 1;\n          i < ids.last;\n          i++ // bypass intermediate points in edge\n        ) {\n          // calc the distance from current point to edge\n          pi = points[i];\n          pf = points[ids.first];\n          pl = points[ids.last];\n          dx = pi.x - pf.x;\n          dy = pi.y - pf.y;\n          r1 = Math.sqrt(dx * dx + dy * dy);\n          dx = pi.x - pl.x;\n          dy = pi.y - pl.y;\n          r2 = Math.sqrt(dx * dx + dy * dy);\n          dx = pf.x - pl.x;\n          dy = pf.y - pl.y;\n          r12 = Math.sqrt(dx * dx + dy * dy);\n          if (r1 >= Math.sqrt(r2 * r2 + r12 * r12)) dist = r2;\n          else if (r2 >= Math.sqrt(r1 * r1 + r12 * r12)) dist = r1;\n          else dist = Math.abs((dy * pi.x - dx * pi.y + pf.x * pl.y - pl.x * pf.y) / r12);\n\n          if (dist > maxd) {\n            maxi = i; // save the index of maximally distant point\n            maxd = dist;\n          }\n        }\n\n        if (maxd > simplifyTolerant) {\n          // if the max \"deviation\" is larger than allowed then...\n          lst.push(maxi); // add index to the simplified list\n          stack.push({ first: ids.first, last: maxi }); // add the left part for processing\n          stack.push({ first: maxi, last: ids.last }); // add the right part for processing\n        }\n      } while (stack.length > 0);\n\n      resPoints = [];\n      len = lst.length;\n      lst.sort(function(a, b) {\n        return a - b;\n      }); // restore index order\n      for (k = 0; k < len; k++) {\n        resPoints.push({ x: points[lst[k]].x, y: points[lst[k]].y }); // add result points to the correct order\n      }\n      result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: c.points.length });\n    }\n\n    return result;\n  };\n\n  return lib;\n})();\n\nexport function getImageData(img) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = img.width;\n  canvas.height = img.height;\n  var ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0);\n  return ctx.getImageData(0, 0, img.width, img.height);\n}\n\nexport function calcBorder(imageData, width, height, x, y, threshold, simple) {\n  const blurRadius = 5;\n  const simplifyTolerant = 5;\n  const simplifyCount = 50;\n\n  let parentPoints = [];\n  let image = {\n    data: imageData,\n    width: width,\n    height: height,\n    bytes: 4,\n  };\n\n  let mask = MagicWand.floodFill(image, x, y, threshold, null, true);\n  mask = MagicWand.gaussBlurOnlyBorder(mask, blurRadius);\n\n  var cs = MagicWand.traceContours(mask);\n\n  cs = MagicWand.simplifyContours(cs, simplifyTolerant, simplifyCount);\n\n  if (cs.length > 0) {\n    if (simple) {\n      return cs[0].points;\n    }\n    for (var j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n      parentPoints.push([cs[0].points[j].x, cs[0].points[j].y]);\n    }\n    return parentPoints;\n  } else {\n    return false;\n  }\n}\n","export function reverseCoordinates(r1, r2) {\n  let r1X = r1.x,\n    r1Y = r1.y,\n    r2X = r2.x,\n    r2Y = r2.y,\n    d;\n\n  if (r1X > r2X) {\n    d = Math.abs(r1X - r2X);\n    r1X = r2X;\n    r2X = r1X + d;\n  }\n\n  if (r1Y > r2Y) {\n    d = Math.abs(r1Y - r2Y);\n    r1Y = r2Y;\n    r2Y = r1Y + d;\n  }\n  /**\n   * Return the corrected rect\n   */\n  return { x1: r1X, y1: r1Y, x2: r2X, y2: r2Y };\n}\n\n/**\n * Transform RGBA Canvas to Binary Matrix\n * @param {object} canvas\n * @param {object} shape\n */\nexport function canvasToBinaryMatrix(canvas, shape) {\n  let currentLayer = canvas.stageRef.getLayers().filter(layer => layer.attrs.id === shape.id);\n\n  let canv = currentLayer[0].canvas.context;\n\n  let initialArray = canv.getImageData(0, 0, canv.canvas.width, canv.canvas.height);\n\n  let binaryMatrix = [];\n\n  for (\n    let i = 0;\n    i < canvas.stageRef.bufferCanvas.context.canvas.width * canvas.stageRef.bufferCanvas.context.canvas.height * 4;\n    i += 4\n  ) {\n    let alpha = initialArray.data[i + 0];\n    let r = initialArray.data[i + 1];\n    let g = initialArray.data[i + 2];\n    let b = initialArray.data[i + 3];\n\n    if (alpha > 0 || r > 0 || g > 0 || b > 0) {\n      binaryMatrix.push(1);\n    } else {\n      binaryMatrix.push(0);\n    }\n  }\n\n  return binaryMatrix;\n}\n","/**\n * Run Length Encode\n * @param {array} arr\n */\nfunction RLEencode(arr) {\n  var encoding = [];\n  var prev, count, i;\n\n  for (count = 1, prev = arr[0], i = 1; i < arr.length; i++) {\n    if (arr[i] !== prev) {\n      encoding.push(count, prev);\n      count = 1;\n      prev = arr[i];\n    } else count++;\n  }\n\n  encoding.push(count, prev);\n\n  return encoding;\n}\n\n/**\n * Run Length Decode\n * @param {array} arr\n */\nfunction RLEdecode(encoded) {\n  let uncompressed = new Uint8ClampedArray();\n  let test = [];\n\n  encoded.forEach((el, ind) => {\n    if (ind % 2 === 0) {\n      uncompressed.push(Array.from(new Array(1 + el).join(encoded[ind + 1])));\n    }\n  });\n\n  uncompressed.flat(2).forEach(el => test.push(parseInt(el)));\n  return test;\n}\n\nexport { RLEencode, RLEdecode };\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !checkISO(time)) return;\n\n  let date = new Date((time || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \")),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n\n/**\n * Helper function to get current timezone\n */\nexport function currentISODate() {\n  let tzOffest = new Date().getTimezoneOffset() * 60000;\n  let localISOTime = new Date(Date.now() - tzOffest).toISOString().slice(0, -1);\n\n  return localISOTime;\n}\n","import Konva from \"konva\";\nimport { encode, decode } from \"@thi.ng/rle-pack\";\n\nimport * as Colors from \"./colors\";\n\n// given the imageData object returns the DOM Image with loaded data\nfunction imageData2Image(imagedata) {\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = imagedata.width;\n  canvas.height = imagedata.height;\n  ctx.putImageData(imagedata, 0, 0);\n\n  var image = new Image();\n  image.src = canvas.toDataURL();\n  return image;\n}\n\n// given the RLE array returns the DOM Image element with loaded image\nfunction RLE2Region(rle, image) {\n  const nw = image.naturalWidth,\n    nh = image.naturalHeight;\n\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = nw;\n  canvas.height = nh;\n\n  const newdata = ctx.createImageData(nw, nh);\n  newdata.data.set(decode(rle));\n\n  ctx.putImageData(newdata, 0, 0);\n\n  var new_image = new Image();\n  new_image.src = canvas.toDataURL();\n  return new_image;\n}\n\n// given the brush region return the RLE encoded array\nfunction Region2RLE(region, image, lineOpts) {\n  const nw = image.naturalWidth,\n    nh = image.naturalHeight;\n\n  var cnt = document.createElement(\"div\");\n  cnt.style.display = \"none\";\n\n  document.body.appendChild(cnt);\n\n  cnt.id = \"container-2\";\n\n  const stage = new Konva.Stage({\n    container: \"container-2\",\n    width: nw,\n    height: nh,\n  });\n\n  const layer = new Konva.Layer();\n  const ctx = layer.getContext(\"2d\");\n\n  // draw the original RLE first\n  if (region._img) ctx.drawImage(region._img, 0, 0);\n\n  // draw all the modifications\n  const lines = region.touches.map(p => {\n    const points = p.rescale(image.stageWidth, image.stageHeight, image.naturalWidth, image.naturalHeight);\n\n    const compOp = p.type === \"add\" ? \"source-over\" : \"destination-out\";\n\n    const l = {\n      points: points,\n      strokeWidth: p.scaledStrokeWidth(image.stageWidth, image.stageHeight, image.naturalWidth, image.naturalHeight),\n      globalCompositeOperation: compOp,\n      lineJoin: \"round\",\n      lineCap: \"round\",\n      opacity: 1,\n      ...lineOpts,\n\n      // stroke: 'red',\n      // strokeWidth: 15,\n      // lineCap: 'round',\n      // lineJoin: 'round'\n    };\n\n    // console.log(l);\n\n    return new Konva.Line(l);\n  });\n\n  lines.forEach(line => layer.add(line));\n\n  // add the layer to the stage\n  stage.add(layer);\n\n  // get the resulting raw data and encode into RLE format\n  const data = ctx.getImageData(0, 0, nw, nh);\n  const rle = encode(data.data, data.data.length);\n\n  return rle;\n}\n\nfunction brushSizeCircle(size) {\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = size * 4 + 8;\n  canvas.height = size * 4 + 8;\n\n  ctx.beginPath();\n  ctx.arc(size / 2 + 4, size / 2 + 4, size / 2, 0, 2 * Math.PI, false);\n\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = \"white\";\n  ctx.stroke();\n\n  return canvas.toDataURL();\n}\n\nfunction encodeSVG(data) {\n  var externalQuotesValue = \"single\";\n\n  function getQuotes() {\n    const double = `\"`;\n    const single = `'`;\n\n    return {\n      level1: externalQuotesValue === \"double\" ? double : single,\n      level2: externalQuotesValue === \"double\" ? single : double,\n    };\n  }\n\n  var quotes = getQuotes();\n\n  function addNameSpace(data) {\n    if (data.indexOf(\"http://www.w3.org/2000/svg\") < 0) {\n      data = data.replace(/<svg/g, `<svg xmlns=${quotes.level2}http://www.w3.org/2000/svg${quotes.level2}`);\n    }\n\n    return data;\n  }\n\n  data = addNameSpace(data);\n  var symbols = /[\\r\\n%#()<>?[\\\\\\]^`{|}]/g;\n\n  // Use single quotes instead of double to avoid encoding.\n  if (externalQuotesValue === \"double\") {\n    data = data.replace(/\"/g, \"'\");\n  } else {\n    data = data.replace(/'/g, '\"');\n  }\n\n  data = data.replace(/>\\s{1,}</g, \"><\");\n  data = data.replace(/\\s{2,}/g, \" \");\n\n  // var resultCss = `background-image: url();`;\n\n  var escaped = data.replace(symbols, encodeURIComponent);\n  return `${quotes.level1}data:image/svg+xml,${escaped}${quotes.level1}`;\n}\n\nconst labelToSVG = (function() {\n  const SVG_CACHE = {};\n\n  function calculateTextWidth(text) {\n    const svg = document.createElement(\"svg\");\n    const svgText = document.createElement(\"text\");\n    svgText.style = \"font-size: 9.5px; font-weight: bold; color: red; fill: red; font-family: Monaco\";\n    svgText.innerHTML = text;\n\n    svg.appendChild(svgText);\n    document.body.appendChild(svg);\n\n    const textLen = svg.getBoundingClientRect().width;\n    svg.remove();\n\n    return textLen;\n  }\n\n  return function({ label, score }) {\n    let cacheKey = label;\n    if (score !== null) cacheKey = cacheKey + score;\n\n    if (cacheKey in SVG_CACHE) return SVG_CACHE[cacheKey];\n\n    let width = 0;\n    const items = [];\n\n    if (score !== null && score !== undefined) {\n      const fillColor = Colors.getScaleGradient(score);\n      items.push(`<rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"24\" height=\"14\" style=\"fill:${fillColor};opacity:0.5\" />`);\n      items.push(`<text x=\"3\" y=\"10\" style=\"font-size: 8px; font-family: Monaco\">${score.toFixed(2)}</text>`);\n      width = width + 26;\n    }\n\n    if (label) {\n      items.push(\n        `<text x=\"${width}\" y=\"11\" style=\"font-size: 9.5px; font-weight: bold; font-family: Monaco\">${label}</text>`,\n      );\n      width = width + calculateTextWidth(label) + 2;\n    }\n\n    const res = `<svg height=\"16\" width=\"${width}\">${items.join(\"\")}</svg>`;\n    const enc = encodeSVG(res);\n\n    SVG_CACHE[cacheKey] = enc;\n    return enc;\n  };\n})();\n\nexport default {\n  imageData2Image,\n  Region2RLE,\n  RLE2Region,\n  brushSizeCircle,\n  labelToSVG,\n};\n","import insertAfter from \"insert-after\";\nimport * as Checkers from \"./utilities\";\nimport Canvas from \"./canvas\";\n\nfunction toggleLabelsAndScores(show) {\n  const els = document.getElementsByClassName(\"htx-highlight\");\n  Array.from(els).forEach(el => {\n    let foundCls = null;\n    Array.from(el.classList).forEach(cls => {\n      if (cls.indexOf(\"htx-label-\") !== -1) foundCls = cls;\n    });\n\n    if (foundCls !== null) {\n      if (show) el.classList.remove(\"htx-no-label\");\n      else el.classList.add(\"htx-no-label\");\n    }\n  });\n}\n\nconst labelWithCSS = (function() {\n  const cache = {};\n\n  return function(node, { labels, score }) {\n    const labelsStr = labels ? labels.join(\",\") : \"\";\n    const clsName = Checkers.hashCode(labelsStr + score);\n\n    let cssCls = \"htx-label-\" + clsName;\n    cssCls = cssCls.toLowerCase();\n\n    if (cssCls in cache) return cache[cssCls];\n\n    node.setAttribute(\"data-labels\", labelsStr);\n\n    const resSVG = Canvas.labelToSVG({ label: labelsStr, score: score });\n    const svgURL = `url(${resSVG})`;\n\n    createClass(`.${cssCls}:after`, `content:${svgURL}`);\n\n    cache[clsName] = true;\n\n    return cssCls;\n  };\n})();\n\n// work directly with the html tree\nfunction createClass(name, rules) {\n  var style = document.createElement(\"style\");\n  style.type = \"text/css\";\n  document.getElementsByTagName(\"head\")[0].appendChild(style);\n  if (!(style.sheet || {}).insertRule) (style.styleSheet || style.sheet).addRule(name, rules);\n  else style.sheet.insertRule(name + \"{\" + rules + \"}\", 0);\n}\n\nfunction documentForward(node) {\n  if (node.firstChild) return node.firstChild;\n\n  while (!node.nextSibling) {\n    node = node.parentNode;\n    if (!node) return null;\n  }\n\n  return node.nextSibling;\n}\n\nfunction isTextNode(node) {\n  const TEXT_NODE = 3;\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction firstLeaf(node) {\n  while (node.hasChildNodes()) node = node.firstChild;\n  return node;\n}\n\n/* Find the last leaf node. */\nfunction lastLeaf(node) {\n  while (node.hasChildNodes()) node = node.lastChild;\n\n  return node;\n}\n\nfunction getNextNode(node) {\n  if (node.firstChild) return node.firstChild;\n  while (node) {\n    if (node.nextSibling) return node.nextSibling;\n    node = node.parentNode;\n  }\n}\n\nfunction getNodesInRange(range) {\n  var start = range.startContainer;\n  var end = range.endContainer;\n  var commonAncestor = range.commonAncestorContainer;\n  var nodes = [];\n  var node;\n\n  // walk parent nodes from start to common ancestor\n  for (node = start.parentNode; node; node = node.parentNode) {\n    nodes.push(node);\n    if (node === commonAncestor) break;\n  }\n  nodes.reverse();\n\n  // walk children and siblings from start until end is found\n  for (node = start; node; node = getNextNode(node)) {\n    nodes.push(node);\n    if (node === end) break;\n  }\n\n  return nodes;\n}\n\nfunction documentReverse(node) {\n  if (node.lastChild) return node.lastChild;\n\n  while (!node.previousSibling) {\n    node = node.parentNode;\n    if (!node) return null;\n  }\n\n  return node.previousSibling;\n}\n\nfunction splitText(node, offset) {\n  let tail = node.cloneNode(false);\n  tail.deleteData(0, offset);\n  node.deleteData(offset, node.length - offset);\n  return insertAfter(tail, node);\n}\n\nfunction normalizeBoundaries(range) {\n  let { startContainer, startOffset, endContainer, endOffset } = range;\n  let node, next, last, start, end;\n\n  // Move the start container to the last leaf before any sibling boundary,\n  // guaranteeing that any children of the container are within the range.\n  if (startContainer.childNodes.length && startOffset > 0) {\n    startContainer = lastLeaf(startContainer.childNodes[startOffset - 1]);\n    startOffset = startContainer.length || startContainer.childNodes.length;\n  }\n\n  // Move the end container to the first leaf after any sibling boundary,\n  // guaranteeing that any children of the container are within the range.\n  if (endOffset < endContainer.childNodes.length) {\n    endContainer = firstLeaf(endContainer.childNodes[endOffset]);\n    endOffset = 0;\n  }\n\n  // Any TextNode in the traversal is valid unless excluded by the offset.\n  function isTextNodeInRange(node) {\n    if (!isTextNode(node)) return false;\n    if (node === startContainer && startOffset > 0) return false;\n    if (node === endContainer && endOffset === 0) return false;\n    return true;\n  }\n\n  // Find the start TextNode.\n  // The guarantees above provide that a document order traversal visits every\n  // Node in the Range before visiting the last leaf of the end container.\n  node = startContainer;\n  next = node => (node === last ? null : documentForward(node));\n  last = lastLeaf(endContainer);\n  while (node && !isTextNodeInRange(node)) node = next(node);\n  start = node;\n\n  // Find the end TextNode.\n  // Similarly, a reverse document order traversal visits every Node in the\n  // Range before visiting the first leaf of the start container.\n  node = endContainer;\n  next = node => (node === last ? null : documentReverse(node));\n  last = firstLeaf(startContainer);\n  while (node && !isTextNodeInRange(node)) node = next(node);\n  end = node;\n\n  range.setStart(start, 0);\n  range.setEnd(end, end.length);\n}\n\nfunction highlightRange(normedRange, cssClass, cssStyle) {\n  if (typeof cssClass === \"undefined\" || cssClass === null) {\n    cssClass = \"htx-annotation\";\n  }\n\n  const allNodes = getNodesInRange(normedRange._range);\n  const textNodes = allNodes.filter(n => isTextNode(n));\n\n  var white = /^\\s*$/;\n\n  var nodes = textNodes; // normedRange.textNodes(),\n\n  let start = 0;\n  if (normedRange._range.startOffset === nodes[start].length) start++;\n\n  let nlen = nodes.length;\n  if (nlen > 1 && nodes[nodes.length - 1].length !== normedRange._range.endOffset) nlen = nlen - 1;\n\n  const results = [];\n  for (var i = start, len = nlen; i < len; i++) {\n    var node = nodes[i];\n    if (!white.test(node.nodeValue)) {\n      var hl = window.document.createElement(\"span\");\n      hl.style.backgroundColor = cssStyle.backgroundColor;\n\n      hl.className = cssClass;\n      node.parentNode.replaceChild(hl, node);\n      hl.appendChild(node);\n\n      results.push(hl);\n    }\n  }\n\n  return results;\n}\n\nfunction splitBoundaries(range) {\n  let { startContainer, startOffset, endContainer, endOffset } = range;\n\n  if (isTextNode(endContainer)) {\n    if (endOffset > 0 && endOffset < endContainer.length) {\n      endContainer = splitText(endContainer, endOffset);\n      range.setEnd(endContainer, 0);\n    }\n  }\n\n  if (isTextNode(startContainer)) {\n    if (startOffset > 0 && startOffset < startContainer.length) {\n      if (startContainer === endContainer) {\n        startContainer = splitText(startContainer, startOffset);\n        range.setEnd(startContainer, endOffset - startOffset);\n      } else {\n        startContainer = splitText(startContainer, startOffset);\n      }\n      range.setStart(startContainer, 0);\n    }\n  }\n}\n\nconst toGlobalOffset = (container, element, len) => {\n  let pos = 0;\n  const count = node => {\n    if (node === element) {\n      return pos;\n    }\n    if (node.nodeName === \"#text\") pos = pos + node.length;\n    if (node.nodeName === \"BR\") pos = pos + 1;\n\n    for (var i = 0; i <= node.childNodes.length; i++) {\n      const n = node.childNodes[i];\n      if (n) {\n        const res = count(n);\n        if (res !== undefined) return res;\n      }\n    }\n  };\n\n  return len + count(container);\n};\n\nconst mainOffsets = element => {\n  var range = window\n    .getSelection()\n    .getRangeAt(0)\n    .cloneRange();\n  let start = range.startOffset;\n  let end = range.endOffset;\n\n  let passedStart = false;\n  let passedEnd = false;\n\n  const traverse = node => {\n    if (node.nodeName === \"#text\") {\n      if (node !== range.startContainer && !passedStart) start = start + node.length;\n      if (node === range.startContainer) passedStart = true;\n\n      if (node !== range.endContainer && !passedEnd) end = end + node.length;\n      if (node === range.endContainer) passedEnd = true;\n    }\n\n    if (node.nodeName === \"BR\") {\n      if (!passedStart) start = start + 1;\n\n      if (!passedEnd) end = end + 1;\n    }\n\n    if (node.childNodes.length > 0) {\n      for (var i = 0; i <= node.childNodes.length; i++) {\n        const n = node.childNodes[i];\n\n        if (n) {\n          const res = traverse(n);\n          if (res) return res;\n        }\n      }\n    }\n  };\n\n  traverse(element);\n\n  return { start: start, end: end };\n};\n\nconst findIdxContainer = (el, globidx) => {\n  let len = globidx;\n\n  const traverse = node => {\n    if (!node) return;\n\n    if (node.nodeName === \"#text\") {\n      if (len - node.length <= 0) return node;\n      else len = len - node.length;\n    } else if (node.nodeName === \"BR\") {\n      len = len - 1;\n    } else if (node.childNodes.length > 0) {\n      for (var i = 0; i <= node.childNodes.length; i++) {\n        const n = node.childNodes[i];\n\n        if (n) {\n          const res = traverse(n);\n          if (res) return res;\n        }\n      }\n    }\n  };\n\n  const node = traverse(el);\n\n  return { node, len };\n};\n\nfunction removeSpans(spans) {\n  var norm = [];\n\n  if (spans) {\n    spans.forEach(span => {\n      while (span.firstChild) span.parentNode.insertBefore(span.firstChild, span);\n\n      norm.push(span.parentNode);\n      span.parentNode.removeChild(span);\n    });\n  }\n\n  norm.forEach(n => n.normalize());\n}\n\nexport {\n  toggleLabelsAndScores,\n  labelWithCSS,\n  removeSpans,\n  mainOffsets,\n  findIdxContainer,\n  toGlobalOffset,\n  highlightRange,\n  splitBoundaries,\n  normalizeBoundaries,\n  createClass,\n};\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as Floodfill from \"./floodfill\";\nimport * as Image from \"./image\";\nimport * as RLe from \"./rle\";\nimport * as UDate from \"./date\";\nimport * as HTML from \"./html\";\nimport { debounce } from \"./debounce\";\nimport { guidGenerator } from \"./unique\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Image, HTML, Checkers, Colors, UDate, guidGenerator, debounce, styleToProp, RLe, Floodfill };\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style\n        .split(\":\")\n        .slice(1)\n        .join(\":\")\n        .trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","const Wrapper = props => props.children;\n\nexport default Wrapper;\n","import React, { Component, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { StarOutlined, DeleteOutlined, ForwardOutlined, WindowsOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\nimport \"./Completions.css\";\n\nimport { styled } from \"@mui/material/styles\";\nimport List from \"@mui/material/List\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faPlusSquare,\n  faCaretDown,\n  faCaretUp,\n  faLightbulb,\n  faMarker,\n  faBook,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Typography from \"@mui/material/Typography\";\nimport { Popconfirm } from \"antd\";\nimport RTL from \"../../hoc/RTL/RTL\";\nimport Wrapper from \"../../components/Wrapper/Wrapper\";\nimport { Divider } from \"antd\";\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst Completion = observer(({ item, store }) => {\n  const buttonRemove = () => {\n    const confirm = () => {\n      item.list.deleteCompletion(item);\n    };\n\n    return (\n      <Popconfirm\n        placement=\"bottomLeft\"\n        title={\"Please confirm you want to delete this completion\"}\n        onConfirm={confirm}\n        okText=\"Delete\"\n        okType=\"danger\"\n        cancelText=\"Cancel\"\n      >\n        <BootstrapTooltip title=\"حذف\">\n          <IconButton\n            disabled={!item.selected}\n            size=\"large\"\n            className={`${item.selected ? \"color-error \" : \"\"} `}\n            sx={{\n              \"& svg\": {\n                fontSize: \"1rem\",\n                transition: \"0.2s\",\n                transform: \"translateX(0) rotate(0)\",\n              },\n              \"&:hover, &:focus\": {\n                bgcolor: \"unset\",\n              },\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </IconButton>\n        </BootstrapTooltip>\n      </Popconfirm>\n    );\n  };\n\n  return (\n    <ListItem component=\"div\" disablePadding>\n      {buttonRemove()}\n      <ListItemButton\n        sx={{\n          height: 56,\n          \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            height: \"50%\",\n            display: \"block\",\n            left: 0,\n            width: \"1px\",\n            bgcolor: \"black\",\n          },\n        }}\n        onClick={() => {\n          !item.selected && store.completionStore.selectCompletion(item.id);\n        }}\n      >\n        <ListItemText\n          primary={item.pk}\n          primaryTypographyProps={{\n            fontWeight: \"medium\",\n            variant: \"body2\",\n          }}\n          secondary={item.createdBy}\n        />\n      </ListItemButton>\n      <IconButton\n        size=\"large\"\n        sx={{\n          \"& svg\": {\n            fontSize: \"0.875rem\",\n            transition: \"0.2s\",\n            transform: \"translateX(0) rotate(0)\",\n          },\n          \"&:hover, &:focus\": {\n            bgcolor: \"unset\",\n          },\n        }}\n        onClick={ev => {\n          !item.selected && store.completionStore.selectCompletion(item.id);\n        }}\n      >\n        <FontAwesomeIcon icon={faLightbulb} className={`${item.selected ? \"on-lightbulb\" : \"\"} `} />\n      </IconButton>\n    </ListItem>\n  );\n});\n\nclass Completions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    };\n  }\n\n  handleClick = () => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  render() {\n    const { store } = this.props;\n\n    const content = store.completionStore.completions.map(c => {\n      return (\n        <Wrapper>\n          <Completion key={c.id} item={c} store={store} />\n        </Wrapper>\n      );\n    });\n\n    return (\n      <RTL>\n        <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\", borderRadius: \"20px\" }} component=\"div\">\n          <ListItem\n            component=\"div\"\n            disablePadding\n            sx={{\n              backgroundColor: \"#3f407d\",\n            }}\n          >\n            <BootstrapTooltip title=\"تکمیل جدید\">\n              <IconButton\n                size=\"large\"\n                sx={{\n                  \"& svg\": {\n                    color: \"white\",\n                    fontSize: \"1.25rem\",\n                    transition: \"0.2s\",\n                    transform: \"translateX(0) rotate(0)\",\n                  },\n                  \"&:hover, &:focus\": {\n                    bgcolor: \"unset\",\n                  },\n                  \"&:after\": {\n                    content: '\"\"',\n                    position: \"absolute\",\n                    height: \"80%\",\n                    display: \"block\",\n                    left: 0,\n                    width: \"1px\",\n                    bgcolor: \"white\",\n                  },\n                }}\n                onClick={ev => {\n                  ev.preventDefault();\n                  const c = store.completionStore.addCompletion({ userGenerate: true });\n                  store.completionStore.selectCompletion(c.id);\n                  // c.list.selectCompletion(c);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </IconButton>\n            </BootstrapTooltip>\n            <ListItemButton sx={{ height: 56 }} onClick={this.handleClick}>\n              <ListItemText\n                primary=\"تکمیل‌ها\"\n                primaryTypographyProps={{\n                  color: \"white\",\n                  fontWeight: \"medium\",\n                  variant: \"body2\",\n                }}\n              />\n              <ListItemIcon\n                sx={{\n                  minWidth: \"0px\",\n                  marginRight: \"10px\",\n                  color: \"white\",\n                }}\n              >\n                <FontAwesomeIcon icon={faBook} color=\"primary\" />\n              </ListItemIcon>\n            </ListItemButton>\n          </ListItem>\n          <Collapse\n            in={this.state.open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={{\n              border: \"solid 1px rgba(34, 36, 38, 0.15)\",\n            }}\n          >\n            <List component=\"div\" disablePadding className=\"completion-list\">\n              {store.completionStore.completions ? content : <p>چیزی موجود نیست</p>}\n            </List>\n          </Collapse>\n        </List>\n      </RTL>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n\nHint.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  copy: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { CheckOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Controls.module.scss\";\nimport Button from \"@mui/material/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faChevronLeft, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\n\nconst TOOLTIP_DELAY = 0.8;\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport default inject(\"store\")(\n  observer(({ item, store }) => {\n    /**\n     * Buttons of Controls\n     */\n    let buttons = {\n      skip: \"\",\n      update: \"\",\n      submit: \"\",\n    };\n\n    const { userGenerate, sentUserGenerate } = item;\n    const { enableHotkeys, enableTooltips } = store.settings;\n\n    /**\n     * Task information\n     */\n    let taskInformation;\n    if (store.task) {\n      taskInformation = <h4 className={styles.task + \" ls-task-info\"}>Task ID: {store.task.id}</h4>;\n    }\n\n    /**\n     * Hotkeys\n     */\n    if (enableHotkeys && enableTooltips) {\n      buttons.submit = <Hint> [ Ctrl+Enter ]</Hint>;\n      buttons.skip = <Hint> [ Ctrl+Space ]</Hint>;\n      buttons.update = <Hint> [ Alt+Enter] </Hint>;\n    }\n\n    let skipButton;\n    let updateButton;\n    let submitButton;\n    let back;\n\n    /**\n     * Check for Predict Menu\n     */\n    back = (\n      <BootstrapTooltip title=\"تسک قبلی\">\n        <Button\n          variant=\"outlined\"\n          startIcon={<FontAwesomeIcon icon={faChevronLeft} />}\n          sx={{ direction: \"ltr\", fontSize: \"1rem\", minWidth: \"110px\", color: \"black\", border: \"solid 1px\" }}\n          onClick={store.skipTask}\n        >\n          بازگشت\n        </Button>\n        {/* <Button\n        type=\"primary\"\n        icon={<CheckCircleOutlined />}\n        onClick={store.updateCompletion}\n        className=\"ls-update-btn\"\n      >\n        Update {buttons.update}\n      </Button> */}\n      </BootstrapTooltip>\n    );\n    if (!store.completionStore.predictSelect || store.explore) {\n      // if (store.hasInterface(\"skip\")) {\n      //   skipButton = (\n      //     <Tooltip title=\"Skip task: [ Ctrl+Space ]\" mouseEnterDelay={TOOLTIP_DELAY}>\n      //       <Button type=\"ghost\" onClick={store.skipTask} className={styles.skip + \" ls-skip-btn\"}>\n      //         Skip {buttons.skip}\n      //       </Button>\n      //     </Tooltip>\n      //   );\n      // }\n\n      if ((userGenerate && !sentUserGenerate) || (store.explore && !userGenerate && store.hasInterface(\"submit\"))) {\n        submitButton = (\n          <BootstrapTooltip title=\"Save results: [ Ctrl+Enter ]\">\n            <Button\n              variant=\"contained\"\n              startIcon={<FontAwesomeIcon icon={faCheck} />}\n              sx={{ direction: \"ltr\", fontSize: \"1rem\", minWidth: \"110px\" }}\n              onClick={store.submitCompletion}\n              color=\"success\"\n            >\n              تایید\n            </Button>\n          </BootstrapTooltip>\n        );\n      }\n\n      if ((userGenerate && sentUserGenerate) || (!userGenerate && store.hasInterface(\"update\"))) {\n        updateButton = (\n          <BootstrapTooltip title=\"Update this task: [ Alt+Enter ]\">\n            <Button\n              variant=\"contained\"\n              startIcon={<FontAwesomeIcon icon={faPencilAlt} />}\n              sx={{ direction: \"ltr\", fontSize: \"1rem\", minWidth: \"110px\" }}\n              onClick={store.updateCompletion}\n              color=\"success\"\n            >\n              آپدیت\n            </Button>\n          </BootstrapTooltip>\n        );\n      }\n    }\n\n    let content = (\n      <div\n        className={styles.block}\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <div\n          className={styles.wrapper}\n          style={{\n            direction: \"ltr\",\n            justifyContent: \"start\",\n          }}\n        >\n          <div className={styles.container}>{back}</div>\n          <div className={styles.container}>\n            {/* {skipButton} */}\n            {updateButton}\n            {submitButton}\n          </div>\n        </div>\n      </div>\n    );\n\n    return (item.type === \"completion\" || store.explore) && content;\n  }),\n);\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"antd\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = { res: null };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <h2>Debug</h2>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n          }}\n        >\n          Serialize whole tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n          }}\n        >\n          Seriealize results tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n          }}\n        >\n          Load Serialized Results\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            const c = store.completionStore.addInitialCompletion();\n            store.completionStore.selectCompletion(c.id);\n\n            if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n            // this.setState.res;\n          }}\n        >\n          Load As New Completion\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: store.task.data });\n          }}\n        >\n          Task data\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            // this.setState.res;\n            const data = JSON.parse(self.state.res);\n            const task = {\n              id: data[\"id\"],\n              project: 2,\n              data: JSON.stringify(data),\n            };\n\n            store.resetState();\n            store.addTask(task);\n            store.addGeneratedCompletion(task);\n            store.markLoading(false);\n\n            if (store.completionStore.selected)\n              store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n          }}\n        >\n          Simulate Loading Task\n        </Button>\n\n        <br />\n        <br />\n        <Form>\n          <Form.TextArea\n            value={this.state.res}\n            className=\"is-search\"\n            // label={item.label}\n            onChange={ev => {\n              this.setState({ res: ev.target.value });\n            }}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button } from \"antd\";\nimport { IconButton } from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { faCompressArrowsAlt, faExpandArrowsAlt, faCog, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  UndoOutlined,\n  RedoOutlined,\n  SettingOutlined,\n  RollbackOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\nimport \"./Panel.css\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container + \" ls-panel panel-container\"}>\n      <div className={`${styles.block} ${styles.block__controls}`}>\n        <Button\n          type=\"ghost\"\n          icon={<UndoOutlined />}\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon={<RedoOutlined />}\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon={<RollbackOutlined />}\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        <IconButton\n          className={\"tool-button\"}\n          sx={{\n            color: \"#3f407d\",\n          }}\n          onClick={ev => {\n            store.settings.toggleFullscreen();\n            ev.preventDefault();\n            return false;\n          }}\n        >\n          <FontAwesomeIcon icon={store.settings.fullscreen ? faExpandArrowsAlt : faCompressArrowsAlt} />\n        </IconButton>\n        {store.description && store.showingDescription && (\n          <BootstrapTooltip title={\"توضیحات برنامک\"}>\n            <IconButton\n              className={\"tool-button\"}\n              sx={{\n                color: \"#3f407d\",\n              }}\n              onClick={ev => {\n                store.toggleDescription();\n              }}\n            >\n              <FontAwesomeIcon icon={faQuestion} />\n            </IconButton>\n          </BootstrapTooltip>\n        )}\n        {store.description && !store.showingDescription && (\n          <BootstrapTooltip title={\"توضیحات برنامک\"}>\n            <IconButton\n              className={\"tool-button\"}\n              sx={{\n                color: \"#3f407d\",\n              }}\n              onClick={ev => {\n                store.toggleDescription();\n              }}\n            >\n              <FontAwesomeIcon icon={faQuestion} />\n            </IconButton>\n          </BootstrapTooltip>\n        )}\n\n        <BootstrapTooltip title={\"تنظیمات\"}>\n          <IconButton\n            className={\"tool-button\"}\n            sx={{\n              color: \"#3f407d\",\n            }}\n            onClick={ev => {\n              store.toggleSettings();\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            <FontAwesomeIcon icon={faCog} />\n          </IconButton>\n        </BootstrapTooltip>\n      </div>\n    </div>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Button, Card, List, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { CopyOutlined, WindowsOutlined } from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport styles from \"../Completions/Completions.module.scss\";\n\nconst Prediction = observer(({ item, store }) => {\n  return (\n    <List.Item\n      key={item.id}\n      className={item.selected ? `${styles.completion} ${styles.completion_selected}` : styles.completion}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectPrediction(item.id);\n      }}\n    >\n      <div className={styles.itembtns}>\n        <div>\n          <div className={styles.title}>{item.createdBy ? `Model (${item.createdBy})` : null}</div>\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n        </div>\n        <div className={styles.buttons}>\n          {item.selected && (\n            <Tooltip placement=\"topLeft\" title=\"Add a new completion based on this prediction\">\n              <Button\n                size=\"small\"\n                onClick={ev => {\n                  ev.preventDefault();\n\n                  const cs = store.completionStore;\n                  const p = cs.selected;\n                  const c = cs.addCompletionFromPrediction(p);\n\n                  // this is here because otherwise React doesn't re-render the change in the tree\n                  window.setTimeout(function() {\n                    store.completionStore.selectCompletion(c.id);\n                  }, 50);\n                }}\n              >\n                <CopyOutlined />\n              </Button>\n            </Tooltip>\n          )}\n        </div>\n      </div>\n    </List.Item>\n  );\n});\n\nclass Predictions extends Component {\n  render() {\n    const { store } = this.props;\n    const { predictions } = store.completionStore;\n\n    let title = (\n      <div className={styles.title + \" \" + styles.titlespace}>\n        <h3>Predictions</h3>\n        {store.completionStore.predictions.length > 0 && (\n          <Tooltip placement=\"topLeft\" title=\"View all predictions\">\n            <Button\n              size=\"small\"\n              type={store.completionStore.viewingAllPredictions ? \"primary\" : \"\"}\n              onClick={ev => {\n                ev.preventDefault();\n                store.completionStore.toggleViewingAllPredictions();\n              }}\n            >\n              <WindowsOutlined />\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n    );\n\n    return (\n      <Card title={title} size=\"small\" bodyStyle={{ padding: \"0\" }}>\n        <List>\n          {predictions && predictions.length ? (\n            predictions.map(p => <Prediction key={p.id} item={p} store={store} />)\n          ) : (\n            <List.Item>\n              <div style={{ padding: \"0 12px\" }}>No predictions</div>\n            </List.Item>\n          )}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Predictions);\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Segment.module.scss\";\n\n/**\n * Segment Component\n */\nexport default class Segment extends React.Component {\n  render() {\n    let cn = styles.block;\n    if (this.props.className) cn = cn + \" \" + this.props.className;\n\n    return <div className={cn}>{this.props.children}</div>;\n  }\n}\n\nSegment.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\nlet _hotkeys_desc = {};\n\nkeymaster.filter = function(event) {\n  if (keymaster.getScope() === \"__none__\") return;\n\n  const tag = (event.target || event.srcElement).tagName;\n  const name = (event.target || event.srcElement).name;\n\n  keymaster.setScope(/^(INPUT|TEXTAREA|SELECT)$/.test(tag) ? name : \"__main__\");\n\n  return true;\n};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func, desc, scope = \"__main__\") {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = func;\n  _hotkeys_desc[key] = desc;\n\n  keymaster(key, scope, func);\n}\n\n/**\n * Given a key temp overwrites the function, the overwrite is removed\n * after the returning function is called\n */\nfunction overwriteKey(key, func) {} // eslint-disable-line no-unused-vars\n\nfunction keysDescipritions() {\n  return _hotkeys_desc;\n}\n\nfunction removeKey(key, scope = \"__main__\") {\n  keymaster.unbind(key, scope);\n\n  delete _hotkeys_map[key];\n  delete _hotkeys_desc[key];\n}\n\nfunction getKeys() {\n  return Object.keys(_hotkeys_map);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwertasdfgzxcvbyuiophjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { removeKey, addKey, unbindAll, makeComb, setScope, getKeys, keysDescipritions };\n","import React from \"react\";\nimport { Modal, Checkbox, Tabs, Table } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Hotkey from \"../../core/Hotkey\";\n\nconst HotkeysDescription = () => {\n  const descr = Hotkey.keysDescipritions();\n  const columns = [\n    { title: \"Key\", dataIndex: \"key\", key: \"key\" },\n    { title: \"Description\", dataIndex: \"descr\", key: \"descr\" },\n  ];\n\n  const data = Object.keys(descr)\n    .filter(k => descr[k])\n    .map(k => new Object({ key: k, descr: descr[k] })); // eslint-disable-line no-new-object\n\n  return <Table columns={columns} dataSource={data} size=\"small\" />;\n};\n\nexport default observer(({ store }) => {\n  return (\n    <Modal\n      visible={store.showingSettings}\n      title=\"Settings\"\n      bodyStyle={{ paddingTop: \"0\" }}\n      footer=\"\"\n      onCancel={store.toggleSettings}\n    >\n      <Tabs defaultActiveKey=\"1\">\n        <Tabs.TabPane tab=\"General\" key=\"1\">\n          <Checkbox\n            value=\"Enable labeling hotkeys\"\n            defaultChecked={store.settings.enableHotkeys}\n            onChange={() => {\n              store.settings.toggleHotkeys();\n            }}\n          >\n            Enable labeling hotkeys\n          </Checkbox>\n          <br />\n          <Checkbox\n            value=\"Show tooltips\"\n            defaultChecked={store.settings.enableTooltips}\n            onChange={() => {\n              store.settings.toggleTooltips();\n            }}\n          >\n            Show hotkey tooltips\n          </Checkbox>\n          <br />\n          <Checkbox\n            value=\"Show labels tooltips\"\n            defaultChecked={store.settings.enableLabelTooltips}\n            onChange={() => {\n              store.settings.toggleLabelTooltips();\n            }}\n          >\n            Show labels hotkey tooltips\n          </Checkbox>\n          <br />\n          <Checkbox\n            value=\"Show labels inside the regions\"\n            defaultChecked={store.settings.showLabels}\n            onChange={() => {\n              store.settings.toggleShowLabels();\n            }}\n          >\n            Show labels inside the regions\n          </Checkbox>\n          {/* <br/> */}\n          {/* <Checkbox */}\n          {/*   value=\"Show scores inside the regions\" */}\n          {/*   defaultChecked={store.settings.showScore} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleShowScore(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Show scores inside the regions */}\n          {/* </Checkbox> */}\n\n          <br />\n          <Checkbox\n            value=\"Keep label selected after creating a region\"\n            defaultChecked={store.settings.continuousLabeling}\n            onChange={() => {\n              store.settings.toggleContinuousLabeling();\n            }}\n          >\n            Keep label selected after creating a region\n          </Checkbox>\n\n          {/* <br /> */}\n          {/* <Checkbox */}\n          {/*   value=\"Enable auto-save\" */}\n          {/*   defaultChecked={store.settings.enableAutoSave} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleAutoSave(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Enable auto-save */}\n\n          {/* </Checkbox> */}\n          {/* { store.settings.enableAutoSave && */}\n          {/*   <div style={{ marginLeft: \"1.7em\" }}> */}\n          {/*     Save every <InputNumber size=\"small\" min={5} max={120} /> seconds */}\n          {/*   </div> } */}\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Hotkeys\" key=\"2\">\n          <HotkeysDescription />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Layout\" key=\"3\">\n          <Checkbox\n            value=\"Move sidepanel to the bottom\"\n            defaultChecked={store.settings.bottomSidePanel}\n            onChange={() => {\n              store.settings.toggleBottomSP();\n            }}\n          >\n            Move sidepanel to the bottom\n          </Checkbox>\n          {/* <br/> */}\n          {/* <Checkbox */}\n          {/*   value=\"Show image in fullsize\" */}\n          {/*   defaultChecked={store.settings.imageFullSize} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleImageFS(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Show image in fullsize */}\n          {/* </Checkbox> */}\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Badge } from \"antd\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport {\n  FontColorsOutlined,\n  AudioOutlined,\n  MessageOutlined,\n  BlockOutlined,\n  GatewayOutlined,\n  Loading3QuartersOutlined,\n  EyeOutlined,\n  HighlightOutlined,\n  ApartmentOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./Node.module.scss\";\n\nconst NodeViews = {\n  TextRegionModel: [\"Text\", FontColorsOutlined, node => <span className={null}>{node.text.substring(0, 100)}</span>],\n\n  HyperTextRegionModel: [\"HTML\", FontColorsOutlined, node => <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>],\n\n  AudioRegionModel: [\"Audio\", AudioOutlined, node => `Audio ${node.start.toFixed(2)} - ${node.end.toFixed(2)}`],\n\n  TextAreaRegionModel: [\n    \"Input\",\n    MessageOutlined,\n    node => (\n      <Fragment>\n        Input <span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n      </Fragment>\n    ),\n  ],\n\n  RectRegionModel: [\n    \"Rect\",\n    BlockOutlined,\n    node => {\n      const w = node.width * node.scaleX;\n      const y = node.height * node.scaleY;\n      return `Rectangle ${w.toFixed(2)} x ${y.toFixed(2)}`;\n    },\n  ],\n\n  PolygonRegionModel: [\"Polygon\", GatewayOutlined, () => `Polygon`],\n\n  EllipseRegionModel: [\n    \"Ellipse\",\n    Loading3QuartersOutlined,\n    node => {\n      const radiusX = node.radiusX * node.scaleX;\n      const radiusY = node.radiusY * node.scaleY;\n      const rotation = node.rotation;\n      return `Ellipse ${radiusX.toFixed(2)} x ${radiusY.toFixed(2)}, θ = ${rotation.toFixed(2)}°,\n        center = (${node.x.toFixed(2)}, ${node.y.toFixed(2)})`;\n    },\n  ],\n\n  // @todo add coords\n  KeyPointRegionModel: [\"KeyPoint\", EyeOutlined, () => `KeyPoint`],\n\n  BrushRegionModel: [\"Brush\", HighlightOutlined, () => `Brush`],\n\n  ChoicesModel: [\"Classification\", ApartmentOutlined, () => `Classification`],\n\n  TextAreaModel: [\"Input\", MessageOutlined, () => `Input`],\n};\n\nconst Node = observer(({ className, node, onClick }) => {\n  const click = ev => {\n    ev.preventDefault();\n    getRoot(node).completionStore.selected.regionStore.unselectAll();\n\n    node.selectRegion();\n\n    return false;\n  };\n\n  const name = getType(node).name;\n  if (!(name in NodeViews)) console.error(`No ${name} in NodeView`);\n\n  const [, Icon, getContent] = NodeViews[name];\n\n  return (\n    <span onClick={onClick || click} className={[styles.node, className].filter(Boolean).join(\" \")}>\n      <Icon />\n      {getContent(node)}\n    </span>\n  );\n});\n\nconst NodeMinimal = observer(({ node }) => {\n  const { sortedRegions: regions } = getRoot(node).completionStore.selected.regionStore;\n  const index = regions.indexOf(node);\n  const name = getType(node).name;\n  if (!(name in NodeViews)) return null;\n\n  const oneColor = node.getOneColor();\n  let badgeStyle = {};\n\n  if (oneColor) {\n    badgeStyle = {\n      backgroundColor: oneColor,\n    };\n  } else {\n    badgeStyle = {\n      backgroundColor: \"#fff\",\n      color: \"#999\",\n      boxShadow: \"0 0 0 1px #d9d9d9 inset\",\n    };\n  }\n\n  const [text, Icon] = NodeViews[name];\n  return (\n    <span className={styles.minimal} dir=\"rtl\">\n      {index >= 0 && <Badge count={index + 1} style={badgeStyle} />}\n      <Icon />\n      {text}\n    </span>\n  );\n});\n\nexport { Node, NodeMinimal };\n","import React from \"react\";\nimport styles from \"./SimpleBadge.module.scss\";\n\nexport const SimpleBadge = ({ number, className, ...props }) => (\n  <div className={[styles.badge, className].filter(Boolean).join(\" \")} {...props}>\n    {number}\n  </div>\n);\n","import React from \"react\";\nimport { List, Divider, Badge, Menu, Dropdown, Tree, Tag } from \"antd\";\nimport { getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\n\nimport { DownOutlined, SortAscendingOutlined, CalendarOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport \"./Entities.scss\";\nimport styles from \"./Entities.module.scss\";\nimport globalStyles from \"../../styles/global.module.scss\";\nimport { Node } from \"../Node/Node\";\nimport { SimpleBadge } from \"../SimpleBadge/SimpleBadge\";\n\nimport { CardHeader, Card, CardContent } from \"@mui/material\";\nimport { IconButton } from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { styled } from \"@mui/material/styles\";\n// import List from \"@mui/material/List\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport \"./Entities.css\";\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst RegionItem = observer(({ item, idx, flat }) => {\n  const cs = getRoot(item).completionStore;\n  const classnames = [\n    styles.lstitem,\n    flat && styles.flat,\n    item.hidden === true && styles.hidden,\n    item.selected && styles.selected,\n  ].filter(Boolean);\n\n  const oneColor = item.getOneColor();\n  let badgeStyle = {};\n\n  if (oneColor) {\n    badgeStyle = {\n      backgroundColor: oneColor,\n    };\n  } else {\n    badgeStyle = {\n      backgroundColor: \"#fff\",\n      color: \"#999\",\n      boxShadow: \"0 0 0 1px #d9d9d9 inset\",\n    };\n  }\n\n  return (\n    <List.Item\n      dir=\"rtl\"\n      key={item.id}\n      className={classnames.join(\" \")}\n      onClick={() => {\n        cs && cs.selected.regionStore.unselectAll();\n        item.selectRegion();\n      }}\n      onMouseOver={() => {\n        cs && cs.selected.regionStore.unhighlightAll();\n        item.setHighlight(true);\n      }}\n      onMouseOut={() => {\n        cs && cs.selected.regionStore.unhighlightAll();\n        item.setHighlight(false);\n      }}\n    >\n      <SimpleBadge number={idx + 1} style={badgeStyle} />\n      <Node node={item} onClick={() => {}} className={`${styles.node} region-item`} />\n\n      {!item.editable && <Badge count={\"ro\"} style={{ backgroundColor: \"#ccc\" }} />}\n\n      {item.score && (\n        <span\n          className={styles.confbadge}\n          style={{\n            color: Utils.Colors.getScaleGradient(item.score),\n          }}\n        >\n          {item.score.toFixed(2)}\n        </span>\n      )}\n    </List.Item>\n  );\n});\n\nconst LabelItem = observer(({ item, idx }) => {\n  const bg = item.background;\n  const labelStyle = {\n    backgroundColor: bg,\n    color: item.selectedcolor,\n    cursor: \"pointer\",\n    margin: \"5px\",\n  };\n\n  return (\n    <Tag style={labelStyle} size={item.size}>\n      {item._value}\n    </Tag>\n  );\n});\n\nconst GroupMenu = ({ store, regionStore }) => {\n  return (\n    <Menu selectedKeys={[regionStore.view]}>\n      <Menu.Item key=\"regions\" dir=\"rtl\">\n        <div\n          onClick={ev => {\n            regionStore.setView(\"regions\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>منطقه‌ها</div>\n        </div>\n      </Menu.Item>\n      <Menu.Item key=\"labels\" dir=\"rtl\">\n        <div\n          onClick={ev => {\n            regionStore.setView(\"labels\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>برچسب‌ها</div>\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst SortMenu = observer(({ regionStore }) => {\n  return (\n    <Menu selectedKeys={[regionStore.sort]}>\n      <Menu.Item key=\"date\">\n        <div\n          onClick={ev => {\n            regionStore.setSort(\"date\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>\n            <CalendarOutlined /> Date\n          </div>\n          <div>\n            {/* regionStore.sort === \"date\" && <Switch onChange={changeSortOrder} size=\"small\" checkedChildren=\"Asc\" unCheckedChildren=\"Desc\" /> */}\n          </div>\n        </div>\n      </Menu.Item>\n      <Menu.Item key=\"score\">\n        <div\n          onClick={ev => {\n            regionStore.setSort(\"score\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>\n            <ThunderboltOutlined /> Score\n          </div>\n          <div>\n            {/* regionStore.sort === \"score\" &&  */\n            /* <Switch onChange={changeSortOrder} size=\"small\" checkedChildren=\"Asc\" unCheckedChildren=\"Desc\" /> */}\n          </div>\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n});\n\nconst LabelsList = observer(({ regionStore }) => {\n  const treeData = regionStore.asLabelsTree((item, idx, isLabel) => {\n    return {\n      key: item.id,\n      title: isLabel ? <LabelItem item={item} idx={idx} /> : <RegionItem item={item} idx={idx} />,\n    };\n  });\n\n  return (\n    <Tree\n      className={styles.treelabels}\n      style={{ direction: \"rtl\", paddingRight: \"7px\" }}\n      treeData={treeData}\n      showIcon={false}\n      blockNode={true}\n      defaultExpandAll={true}\n      autoExpandParent={true}\n      switcherIcon={<DownOutlined />}\n    />\n  );\n});\n\nconst RegionsTree = observer(({ regionStore }) => {\n  const isFlat = !regionStore.sortedRegions.some(r => r.parentID !== \"\");\n  const treeData = regionStore.asTree((item, idx) => {\n    return {\n      key: item.id,\n      title: <RegionItem item={item} idx={idx} flat={isFlat} />,\n    };\n  });\n\n  return (\n    <Tree\n      className={styles.treelabels}\n      treeData={treeData}\n      draggable={true}\n      showIcon={false}\n      blockNode={true}\n      defaultExpandAll={true}\n      autoExpandParent={true}\n      switcherIcon={<DownOutlined />}\n      onDrop={({ node, dragNode, dropPosition, dropToGap }) => {\n        const dropKey = node.props.eventKey;\n        const dragKey = dragNode.props.eventKey;\n        const dropPos = node.props.pos.split(\"-\");\n        dropPosition = dropPosition - parseInt(dropPos[dropPos.length - 1]);\n        const treeDepth = dropPos.length;\n\n        const dropReg = regionStore.findRegionID(dropKey);\n        const dragReg = regionStore.findRegionID(dragKey);\n\n        regionStore.unhighlightAll();\n\n        if (treeDepth === 2 && dropToGap && dropPosition === -1) {\n          dragReg.setParentID(\"\");\n        } else if (dropPosition !== -1) {\n          dragReg.setParentID(dropReg.pid);\n        }\n      }}\n    >\n      {/* <TreeNode title=\"hello\" key=\"0-0\" style={{ width: '100%' }} /> */}\n    </Tree>\n  );\n});\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          sx={{\n            direction: \"ltr !important\",\n            borderTop: \"solid 1px\",\n            \"& div span\": {\n              fontSize: \"1rem\",\n              color: \"rgba(0, 0, 0, 1)\",\n            },\n          }}\n          action={\n            <BootstrapTooltip title={\"مرتب شده بر اساس تاریخ\"}>\n              <IconButton\n                sx={{\n                  fontSize: \"1rem\",\n                }}\n              >\n                <FontAwesomeIcon icon={faCalendarAlt} />\n              </IconButton>\n            </BootstrapTooltip>\n          }\n          title={\n            <Dropdown overlay={<GroupMenu regionStore={regionStore} />} placement=\"bottomRight\">\n              <span className={globalStyles.link} onClick={e => e.preventDefault()}>\n                {regionStore.view === \"regions\" ? <span>منطقه‌ها ({regions.length})</span> : null}\n                {regionStore.view === \"labels\" ? \"برچسب‌ها\" : null}\n              </span>\n            </Dropdown>\n          }\n        />\n        <CardContent>\n          {!regions.length && (\n            <p\n              style={{\n                display: \"flex\",\n                direction: \"rtl\",\n                justifyContent: \"center\",\n              }}\n            >\n              ناحیه‌ای وجود ندارد!!!\n            </p>\n          )}\n          {regions.length > 0 && regionStore.view === \"regions\" && <RegionsTree regionStore={regionStore} />}\n\n          {regions.length > 0 && regionStore.view === \"labels\" && <LabelsList regionStore={regionStore} />}\n        </CardContent>\n      </Card>\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { getType } from \"mobx-state-tree\";\nimport { Form, Input, Button, Tag, Badge } from \"antd\";\nimport { DeleteOutlined, LinkOutlined, PlusOutlined, CompressOutlined } from \"@ant-design/icons\";\nimport { Typography } from \"antd\";\n\nimport { NodeMinimal } from \"../Node/Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nimport { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { faTrashAlt, faCircle, faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { IconButton } from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport \"./Entity.css\";\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst { Paragraph, Text } = Typography;\n\nconst templateElement = element => {\n  return (\n    <Text key={element.pid} className={styles.labels}>\n      برچسب‌ها:&nbsp;\n      {element.selectedValues().map(title => {\n        let bgColor = element.findLabel(title).background ? element.findLabel(title).background : \"#000000\";\n\n        return (\n          <Tag key={element.findLabel(title).id} color={bgColor} className={styles.tag}>\n            {title}\n          </Tag>\n        );\n      })}\n    </Text>\n  );\n};\n\nconst RenderStates = observer(({ node }) => {\n  const _render = s => {\n    if (getType(s).name.indexOf(\"Labels\") !== -1) {\n      return templateElement(s);\n    } else if (getType(s).name === \"RatingModel\") {\n      return <Paragraph>Rating: {s.getSelectedString()}</Paragraph>;\n    } else if (getType(s).name === \"TextAreaModel\") {\n      const text = s.regions.map(r => r._value).join(\"\\n\");\n      return (\n        <Paragraph className={styles.row}>\n          <Text>Text: </Text>\n          <Text mark className={styles.long}>\n            {text}\n          </Text>\n        </Paragraph>\n      );\n    } else if (getType(s).name === \"ChoicesModel\") {\n      return <Paragraph>Choices: {s.getSelectedString(\", \")}</Paragraph>;\n    }\n\n    return null;\n  };\n\n  return <Fragment>{node.states.filter(s => s.holdsState).map(s => _render(s))}</Fragment>;\n});\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      {node && (\n        <Wrapper>\n          <p\n            className={styles.row}\n            style={{\n              marginTop: \"15px\",\n              direction: \"rtl\",\n            }}\n          >\n            <NodeMinimal node={node} /> (id: {node.id}){\" \"}\n            {!node.editable && <Badge count={\"readonly\"} style={{ backgroundColor: \"#ccc\" }} />}\n          </p>\n          <div\n            className={styles.statesblk + \" ls-entity-states\"}\n            style={{\n              direction: \"rtl\",\n              paddingRight: \"10px\",\n            }}\n          >\n            {node.score && (\n              <Fragment>\n                <Text>\n                  Score: <Text underline>{node.score}</Text>\n                </Text>\n              </Fragment>\n            )}\n\n            {node.normalization && (\n              <Text>\n                Normalization: <Text code>{node.normalization}</Text>\n                &nbsp;\n                <DeleteOutlined\n                  type=\"delete\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    node.deleteNormalization();\n                  }}\n                />\n              </Text>\n            )}\n\n            {node.states && <RenderStates node={node} />}\n          </div>\n        </Wrapper>\n      )}\n\n      {!node && (\n        <p\n          style={{\n            marginBottom: \"20px\",\n            direction: \"rtl\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"15px\",\n          }}\n        >\n          نتیجه‌ای انتخاب‌ نشده‌است!!!\n        </p>\n      )}\n\n      <div className={styles.block + \" ls-entity-buttons buttons-container\"}>\n        {/* <Tooltip placement=\"topLeft\" title=\"Hide: [h]\"> */}\n        {/*   <Button */}\n        {/*     className={styles.button} */}\n        {/*     onClick={() => { */}\n        {/*         node.toggleHidden(); */}\n        {/*         //node.unselectRegion(); */}\n        {/*         //node.selectRegion(); */}\n        {/*         // completion.startRelationMode(node); */}\n        {/*     }} */}\n        {/*   > */}\n        {/*     { node.hidden ? <EyeOutlined /> : <EyeInvisibleOutlined /> } */}\n        {/*     {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ h ]</Hint>} */}\n        {/*   </Button> */}\n        {/* </Tooltip> */}\n\n        <Fragment>\n          <BootstrapTooltip title=\"Create Relation: [r]\">\n            <IconButton\n              disabled={!(node && node.editable)}\n              className={\"tool-button\"}\n              sx={{\n                color: \"#3f407d\",\n              }}\n              onClick={ev => {\n                completion.startRelationMode(node);\n              }}\n            >\n              <FontAwesomeIcon icon={faLink} />\n              {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ r ]</Hint>}\n            </IconButton>\n          </BootstrapTooltip>\n        </Fragment>\n\n        <BootstrapTooltip title=\"Unselect: [u]\">\n          <IconButton\n            disabled={!(node && node.editable)}\n            className={\"tool-button\"}\n            sx={{\n              color: \"#3f407d\",\n            }}\n            onClick={ev => {\n              completion.highlightedNode.unselectRegion();\n            }}\n          >\n            <FontAwesomeIcon icon={faCircle} />\n            {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ u ]</Hint>}\n          </IconButton>\n        </BootstrapTooltip>\n\n        <BootstrapTooltip title=\"Delete Entity: [Backspace]\">\n          <IconButton\n            disabled={!(node && node.editable)}\n            className={\"tool-button\"}\n            sx={{\n              color: \"red\",\n            }}\n            onClick={ev => {\n              completion.highlightedNode.deleteRegion();\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n            {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n          </IconButton>\n        </BootstrapTooltip>\n      </div>\n    </Fragment>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Select, Divider, List, Button } from \"antd\";\nimport { isValidReference, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { ArrowLeftOutlined, ArrowRightOutlined, SwapOutlined, MoreOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./Relations.module.scss\";\nimport { NodeMinimal } from \"../Node/Node\";\n\nimport { CardHeader, Card, CardContent } from \"@mui/material\";\nimport { IconButton } from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { faTrashAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst { Option } = Select;\n\nconst RelationMeta = observer(({ store, rl }) => {\n  const r = rl.relations;\n  const selected = r.getSelected().map(v => v.value);\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      <h4 className={styles.header}>LABELS</h4>\n      <Select\n        mode={r.choice === \"multiple\" ? \"multiple\" : \"\"}\n        style={{ width: \"100%\" }}\n        placeholder=\"Please select\"\n        defaultValue={selected}\n        onChange={(val, option) => {\n          r.unselectAll();\n          val.forEach(v => r.findRelation(v).setSelected(true));\n        }}\n      >\n        {r.children.map(c => (\n          <Option key={c.value} style={{ background: c.background }}>\n            {c.value}\n          </Option>\n        ))}\n      </Select>\n    </div>\n  );\n});\n\n/**\n * Relation Component\n *\n * Shows the relationship between two selected items\n */\nconst Relation = observer(({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  const iconMap = {\n    left: <ArrowLeftOutlined />,\n    right: <ArrowRightOutlined />,\n    bi: <SwapOutlined />,\n  };\n\n  return (\n    <div>\n      <div className={styles.section__blocks}>\n        <div>\n          <NodeMinimal node={rl.node1} />\n        </div>\n        <Button onClick={() => rl.rotateDirection()} size=\"small\" className={styles.relationbtn}>\n          {iconMap[rl.direction]}\n        </Button>\n        <div>\n          <NodeMinimal node={rl.node2} />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst ListItem = observer(({ item }) => {\n  const node = getRoot(item).completionStore.selected.highlightedNode;\n  const isSelected = node === item.node1 || node === item.node2;\n\n  return (\n    <List.Item\n      className={isSelected && styles.selected}\n      key={item.id}\n      actions={[]}\n      onMouseOver={() => {\n        item.toggleHighlight();\n      }}\n      onMouseOut={() => {\n        item.toggleHighlight();\n      }}\n    >\n      <div className={styles.item}>\n        <div>\n          <Relation rl={item} />\n        </div>\n        <div>\n          {item.hasRelations && (\n            <Button\n              size=\"small\"\n              onClick={() => {\n                item.toggleMeta();\n              }}\n              className={styles.button}\n            >\n              <MoreOutlined />\n            </Button>\n          )}\n          &nbsp;\n          {/* <BootstrapTooltip title=\"Delete Entity\">\n            <IconButton\n              // disabled={!(node && node.editable)}\n              className={\"tool-button\"}\n              sx={{\n                color: \"red\",\n              }}\n              onClick={ev => {\n                // completion.highlightedNode.deleteRegion();\n              }}\n            >\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </IconButton>\n          </BootstrapTooltip> */}\n          <Button\n            size=\"small\"\n            className={styles.button}\n            onClick={() => {\n              item.node1.setHighlight(false);\n              item.node2.setHighlight(false);\n              item.parent.deleteRelation(item);\n              return false;\n            }}\n            danger\n          >\n            <DeleteOutlined />\n          </Button>\n        </div>\n      </div>\n      {item.showMeta && <RelationMeta rl={item} />}\n    </List.Item>\n  );\n});\n\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n\n  return (\n    <Fragment>\n      <Card\n        sx={{\n          marginTop: \"24px\",\n        }}\n      >\n        <CardHeader\n          sx={{\n            direction: \"ltr !important\",\n            borderTop: \"solid 1px\",\n            \"& div span\": {\n              fontSize: \"1rem\",\n              color: \"rgba(0, 0, 0, 1)\",\n            },\n          }}\n          action={\n            <IconButton\n              disabled={true}\n              sx={{\n                fontSize: \"1rem\",\n              }}\n            >\n              <FontAwesomeIcon icon={faLink} />\n            </IconButton>\n          }\n          title={<span>رابطه‌ها ({relations.length})</span>}\n        />\n        <CardContent>\n          {!relations.length && (\n            <p\n              style={{\n                display: \"flex\",\n                direction: \"rtl\",\n                justifyContent: \"center\",\n              }}\n            >\n              رابطه‌ای وجود ندارد!!!\n            </p>\n          )}\n\n          {relations.length > 0 && (\n            <List\n              size=\"small\"\n              bordered\n              itemLayout=\"vertical\"\n              className={styles.list}\n              dataSource={completion.relationStore.relations}\n              renderItem={item => <ListItem item={item} />}\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n});\n","import React, { Component, useState } from \"react\";\nimport { Button, Popconfirm, Card } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../Hint/Hint\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport Relations from \"../Relations/Relations\";\nimport styles from \"./SideColumn.module.scss\";\n\nimport RTL from \"../../hoc/RTL/RTL\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport Divider from \"@mui/material/Divider\";\nimport { styled } from \"@mui/material/styles\";\nimport List from \"@mui/material/List\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faPlusSquare,\n  faCaretDown,\n  faCaretUp,\n  faLightbulb,\n  faMarker,\n  faBook,\n  faPoll,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nclass SideColumn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openListItem: true,\n    };\n  }\n\n  buttonRemove = c => {\n    const confirm = () => {\n      c.deleteAllRegions();\n    };\n\n    return (\n      <Popconfirm\n        placement=\"bottomLeft\"\n        title={\"Please confirm you want to delete all labeled regions\"}\n        onConfirm={confirm}\n        okText=\"Delete\"\n        okType=\"danger\"\n        cancelText=\"Cancel\"\n      >\n        <BootstrapTooltip title=\"حذف همه‌ی نتایج\">\n          <IconButton\n            size=\"large\"\n            sx={{\n              \"& svg\": {\n                color: \"white\",\n                fontSize: \"1.15rem !important\",\n                transition: \"0.2s\",\n                transform: \"translateX(0) rotate(0)\",\n              },\n              \"&:hover, &:focus\": {\n                bgcolor: \"unset\",\n              },\n              \"&:after\": {\n                content: '\"\"',\n                position: \"absolute\",\n                height: \"80%\",\n                display: \"block\",\n                left: 0,\n                width: \"1px\",\n                bgcolor: \"white\",\n              },\n            }}\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </IconButton>\n        </BootstrapTooltip>\n      </Popconfirm>\n    );\n  };\n\n  toggleListItem = () => {\n    this.setState({\n      ...this.state,\n      openListItem: !this.state.openListItem,\n    });\n  };\n  render() {\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n    const c = store.completionStore.selected;\n    const node = completion.highlightedNode;\n    const { regions } = c.regionStore;\n\n    return (\n      <RTL>\n        <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\", borderRadius: \"20px\" }} component=\"div\">\n          <ListItem\n            component=\"div\"\n            disablePadding\n            sx={{\n              backgroundColor: \"#3f407d\",\n            }}\n          >\n            {this.buttonRemove(c)}\n            <ListItemButton sx={{ height: 56 }} onClick={this.toggleListItem}>\n              <ListItemText\n                primary=\"نتایج\"\n                primaryTypographyProps={{\n                  color: \"white\",\n                  fontWeight: \"medium\",\n                  variant: \"body2\",\n                }}\n              />\n              <ListItemIcon\n                sx={{\n                  minWidth: \"0px\",\n                  marginRight: \"10px\",\n                  color: \"white\",\n                }}\n              >\n                <FontAwesomeIcon icon={faPoll} color=\"primary\" />\n              </ListItemIcon>\n            </ListItemButton>\n          </ListItem>\n          <Divider />\n          <Collapse\n            in={this.state.openListItem}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={{\n              border: \"solid 1px rgba(34, 36, 38, 0.15)\",\n            }}\n          >\n            <List component=\"div\" disablePadding className=\"completion-list\">\n              <Entity store={store} completion={completion} />\n\n              <Entities store={store} regionStore={completion.regionStore} />\n\n              <Relations store={store} item={completion} />\n            </List>\n          </Collapse>\n        </List>\n      </RTL>\n    );\n  }\n}\n\nexport default observer(SideColumn);\n","import React, { Fragment } from \"react\";\nimport { Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { PauseCircleOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../../../components/Hint/Hint\";\n\nconst AudioControls = observer(({ item, store }) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n      <Button\n        type=\"primary\"\n        onClick={ev => {\n          item._ws.playPause();\n        }}\n      >\n        {item.playing && (\n          <Fragment>\n            <PauseCircleOutlined /> Pause\n            {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n              <Hint>[{item.hotkey}]</Hint>\n            )}\n          </Fragment>\n        )}\n        {!item.playing && (\n          <Fragment>\n            <PlayCircleOutlined /> Play\n            {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n              <Hint>[{item.hotkey}]</Hint>\n            )}\n          </Fragment>\n        )}\n      </Button>\n    </div>\n  );\n});\n\nexport default observer(AudioControls);\n","import { Modal } from \"antd\";\n\nconst wrapper = (_type, value, title) => {\n  let custom = {\n    type: \"\",\n    title: \"\",\n  };\n\n  switch (_type) {\n    case \"error\":\n      custom.type = Modal.error;\n      custom.title = \"Error\";\n      break;\n    case \"warning\":\n      custom.type = Modal.warning;\n      custom.title = \"Warning\";\n      break;\n    case \"success\":\n      custom.type = Modal.success;\n      custom.title = \"Success\";\n      break;\n    default:\n      custom.type = Modal.info;\n      custom.title = \"Info\";\n  }\n\n  custom.type({\n    title: title ? title : custom.title,\n    content: value,\n  });\n};\n\n/**\n * Success modal\n * @param {string} value\n * @param {string} title\n */\nconst error = (value, title) => {\n  wrapper(`error`, value, title);\n};\n\n/**\n * Warning modal\n * @param {string} value\n * @param {string} title\n */\nconst warning = (value, title) => {\n  wrapper(`warning`, value, title);\n};\n\n/**\n * Success modal\n * @param {string} value\n * @param {string} title\n */\nconst success = (value, title) => {\n  wrapper(`success`, value, title);\n};\n\n/**\n * Information modal\n * @param {string} value\n * @param {string} title\n */\nconst info = (value, title) => {\n  wrapper(`info`, value, title);\n};\n\nexport default { error, warning, success, info };\n","import { types } from \"mobx-state-tree\";\nimport isMatch from \"lodash.ismatch\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\n\nconst ObjectBase = types\n  .model({\n    // TODO there should be a better way to force an update\n    _needsUpdate: types.optional(types.number, 0),\n  })\n  .views(self => ({\n    findRegion(params) {\n      let obj = null;\n\n      if (self._regionsCache && self._regionsCache.length) {\n        obj = self._regionsCache.find(({ region }) => isMatch(region, params));\n      }\n\n      return obj || self.regions.find(r => isMatch(r, params));\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      if (!self.regions) return;\n\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n  }))\n  .actions(self => {\n    let props = {};\n\n    function addProp(name, value) {\n      props[name] = value;\n      self._needsUpdate = self._needsUpdate + 1;\n    }\n\n    function getProps() {\n      return props;\n    }\n\n    // @todo maybe not a best place for this method?\n    // check that maxUsages was not exceeded for labels\n    // and if it was - don't allow to create new region and unselect all regions\n    // unselect labels which was exceeded maxUsages\n    // return all states left untouched - available labels and others\n    function getAvailableStates() {\n      const checkAndCollect = (list, s) => (s.checkMaxUsages ? list.concat(s.checkMaxUsages()) : list);\n      const allStates = self.states() || [];\n      const exceeded = allStates.reduce(checkAndCollect, []);\n      const states = self.activeStates() || [];\n      if (states.length === 0) {\n        if (exceeded.length) {\n          const label = exceeded[0];\n          InfoModal.warning(`You can't use ${label.value} more than ${label.maxUsages} time(s)`);\n        }\n        self.completion.regionStore.unselectAll(true);\n      }\n      return states;\n    }\n\n    return {\n      addProp,\n      getProps,\n      getAvailableStates,\n    };\n  });\n\nexport default ObjectBase;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { observer } from \"mobx-react\";\n\n/**\n * Object Tag Component\n */\nclass ObjectTagView extends React.Component {\n  render() {\n    const { props } = this;\n    const { item } = props;\n\n    const moreProps = item.getProps && item.getProps();\n\n    return (\n      <div className={props.className} dataneedsupdate={item._needsUpdate} style={props.style} {...moreProps}>\n        {props.children}\n      </div>\n    );\n  }\n}\n\nObjectTagView.propTypes = {\n  children: PropTypes.node.isRequired,\n  item: PropTypes.object.isRequired,\n};\n\nexport default observer(ObjectTagView);\n","import CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport throttle from \"lodash.throttle\";\nimport { ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport styles from \"./Waveform.module.scss\";\nimport globalStyles from \"../../styles/global.module.scss\";\nimport { Slider, Row, Col, Select } from \"antd\";\nimport { SoundOutlined } from \"@ant-design/icons\";\n\nimport { observer } from \"mobx-react\";\nimport { PauseCircleOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport { Fragment } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faPauseCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: this.props.src,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#52c41a\",\n      },\n      zoom: 0,\n      speed: 1,\n      volume: 1,\n    };\n  }\n\n  /**\n   * Handle to change zoom of wave\n   */\n  onChangeZoom = value => {\n    this.setState({\n      ...this.state,\n      zoom: value,\n    });\n\n    this.wavesurfer.zoom(value);\n  };\n\n  onChangeVolume = value => {\n    this.setState({\n      ...this.state,\n      volume: value,\n    });\n\n    this.wavesurfer.setVolume(value);\n  };\n\n  /**\n   * Handle to change speed of wave\n   */\n  onChangeSpeed = value => {\n    this.setState({\n      ...this.state,\n      speed: value,\n    });\n\n    this.wavesurfer.setPlaybackRate(value);\n  };\n\n  onZoomPlus = (ev, step = 10) => {\n    let val = this.state.zoom;\n    val = val + step;\n    if (val > 700) val = 700;\n\n    this.onChangeZoom(val);\n    ev && ev.preventDefault();\n    return false;\n  };\n\n  onZoomMinus = (ev, step = 10) => {\n    let val = this.state.zoom;\n    val = val - step;\n    if (val < 0) val = 0;\n\n    this.onChangeZoom(val);\n    ev.preventDefault();\n    return false;\n  };\n\n  onWheel = e => {\n    if (e && !e.shiftKey) {\n      return;\n    } else if (e && e.shiftKey) {\n      /**\n       * Disable scrolling page\n       */\n      e.preventDefault();\n    }\n\n    const step = e.deltaY > 0 ? 5 : -5;\n    // console.log(e.evt.deltaY);\n    this.onZoomPlus(e, step);\n  };\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    let wavesurferConfigure = {\n      container: this.$waveform,\n      waveColor: this.state.colors.waveColor,\n      height: this.props.height,\n      backend: \"MediaElement\",\n      progressColor: this.state.colors.progressColor,\n\n      splitChannels: true,\n    };\n\n    if (this.props.regions) {\n      wavesurferConfigure = {\n        ...wavesurferConfigure,\n        plugins: [\n          RegionsPlugin.create({\n            dragSelection: {\n              slop: 5, // slop\n            },\n          }),\n          TimelinePlugin.create({\n            container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n            formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n            timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n            primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n            secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n            primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n            secondaryColor: \"blue\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n            primaryFontColor: \"#000\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n            secondaryFontColor: \"#000\",\n          }),\n          CursorPlugin.create({\n            wrapper: this.$waveform,\n            showTime: true,\n            opacity: 1,\n          }),\n        ],\n      };\n    }\n\n    this.wavesurfer = WaveSurfer.create(wavesurferConfigure);\n\n    /**\n     * Load data\n     */\n    this.wavesurfer.load(this.props.src);\n\n    /**\n     * Speed of waveform\n     */\n    this.wavesurfer.setPlaybackRate(this.state.speed);\n\n    const self = this;\n\n    if (this.props.regions) {\n      /**\n       * Mouse enter on region\n       */\n      this.wavesurfer.on(\"region-mouseenter\", reg => {\n        reg._region.onMouseOver();\n      });\n\n      /**\n       * Mouse leave on region\n       */\n      this.wavesurfer.on(\"region-mouseleave\", reg => {\n        reg._region.onMouseLeave();\n      });\n\n      /**\n       * Add region to wave\n       */\n      this.wavesurfer.on(\"region-created\", reg => {\n        const region = self.props.addRegion(reg);\n        if (!region) return;\n\n        reg._region = region;\n        reg.color = region.selectedregionbg;\n\n        reg.on(\"click\", () => region.onClick(self.wavesurfer));\n        reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n        reg.on(\"dblclick\", e => {\n          window.setTimeout(function() {\n            reg.play();\n          }, 0);\n        });\n\n        reg.on(\"out\", () => {});\n      });\n    }\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n\n      this.wavesurfer.container.onwheel = throttle(this.onWheel, 100);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    if (this.props.regions) {\n      this.props.onLoad(this.wavesurfer);\n    }\n  }\n\n  render() {\n    const { store } = this.props;\n    const { item } = this.props;\n    const self = this;\n\n    const speeds = [\"0.5\", \"1.0\", \"1.25\", \"1.5\", \"2.0\"];\n\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n\n        <div id=\"timeline\" />\n\n        {this.props.zoom && (\n          <Row\n            gutter={16}\n            style={{\n              paddingTop: \"3vh\",\n              justifyContent: \"space-evenly\",\n              paddingBottom: \"3vh\",\n              margin: 0,\n              borderBottom: \"solid 1px rgba(34, 36, 38, 0.15)\",\n            }}\n          >\n            <Col span={10} style={{ textAlign: \"right\", marginTop: \"6px\" }}>\n              <div style={{ display: \"flex\" }}>\n                <div style={{ marginTop: \"6px\", marginRight: \"5px\" }}>\n                  <ZoomOutOutlined onClick={this.onZoomMinus} className={globalStyles.link} />\n                </div>\n                <div style={{ width: \"100%\" }}>\n                  <Slider\n                    min={0}\n                    step={10}\n                    max={500}\n                    value={typeof this.state.zoom === \"number\" ? this.state.zoom : 0}\n                    onChange={value => {\n                      this.onChangeZoom(value);\n                    }}\n                  />\n                </div>\n                <div style={{ marginTop: \"6px\", marginLeft: \"5px\" }}>\n                  <ZoomInOutlined onClick={this.onZoomPlus} className={globalStyles.link} />\n                </div>\n              </div>\n            </Col>\n            <Col span={6}>\n              {this.props.volume && (\n                <div style={{ display: \"flex\", marginTop: \"6.5px\" }}>\n                  <div style={{ width: \"100%\" }}>\n                    <Slider\n                      min={0}\n                      max={1}\n                      step={0.1}\n                      value={typeof this.state.volume === \"number\" ? this.state.volume : 1}\n                      onChange={value => {\n                        this.onChangeVolume(value);\n                      }}\n                    />\n                  </div>\n                  <div style={{ marginLeft: \"10px\", marginTop: \"5px\" }}>\n                    <SoundOutlined />\n                  </div>\n                </div>\n              )}\n            </Col>\n            <Col span={4} style={{ marginTop: \"6px\" }}>\n              {this.props.speed && (\n                <Select\n                  placeholder=\"Speed\"\n                  style={{ width: \"100%\" }}\n                  defaultValue={this.state.speed}\n                  onChange={self.onChangeSpeed}\n                >\n                  {speeds.map(speed => (\n                    <Select.Option value={+speed} key={speed}>\n                      Speed {speed}\n                    </Select.Option>\n                  ))}\n                </Select>\n              )}\n            </Col>\n            <Col span={4} style={{ marginTop: \"6px\" }}>\n              <div style={{ display: \"flex\", justifyContent: \"end\", paddingRight: \"5%\" }}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<FontAwesomeIcon icon={item.playing ? faPauseCircle : faPlayCircle} />}\n                  sx={{ direction: \"ltr\", width: \"50%\" }}\n                  onClick={ev => {\n                    item._ws.playPause();\n                  }}\n                >\n                  {item.playing ? \"توقف\" : \"پخش\"}\n                </Button>\n                {/* <Button\n                  type=\"primary\"\n                  onClick={ev => {\n                    item._ws.playPause();\n                  }}\n                >\n                  {item.playing && (\n                    <Fragment>\n                      <PauseCircleOutlined /> Pause\n                      {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n                        <Hint>[{item.hotkey}]</Hint>\n                      )}\n                    </Fragment>\n                  )}\n                  {!item.playing && (\n                    <Fragment>\n                      <PlayCircleOutlined /> Play\n                      {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n                        <Hint>[{item.hotkey}]</Hint>\n                      )}\n                    </Fragment>\n                  )}\n                </Button> */}\n              </div>\n            </Col>\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default observer(Waveform);\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]); // eslint-disable-line no-new-func\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateLocalValue(value) {\n    self._value = value;\n  },\n\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  zoom: types.optional(types.boolean, true),\n  volume: types.optional(types.boolean, true),\n  speed: types.optional(types.boolean, true),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n    playing: types.optional(types.boolean, false),\n    height: types.optional(types.number, 20),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n  }));\n\nconst AudioHOCModel = types.compose(\"AudioHOCModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nexport { AudioHOCModel };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport AudioControls from \"./Audio/Controls\";\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport Registry from \"../../core/Registry\";\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport { AudioHOCModel } from \"./AudioHOC\";\n\n/**\n * Audio tag plays a simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\" />\n *     <Choice value=\"Negative\" />\n *   </Choices>\n * </View>\n * @example\n * <!-- Audio transcription -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n *   <TextArea name=\"ta\" toName=\"audio\" />\n * </View>\n * @name Audio\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {string} hotkey hotkey used to play/pause audio\n */\n\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  zoom: types.optional(types.boolean, false),\n  volume: types.optional(types.boolean, false),\n  speed: types.optional(types.boolean, false),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = AudioHOCModel.named(\"AudioModel\").actions(self => ({\n  fromStateJSON(obj, fromModel) {\n    if (obj.value.choices) {\n      self.completion.names.get(obj.from_name).fromStateJSON(obj);\n    }\n\n    if (obj.value.text) {\n      self.completion.names.get(obj.from_name).fromStateJSON(obj);\n    }\n  },\n\n  onHotKey() {\n    return self._ws.playPause();\n  },\n\n  onLoad(ws) {\n    self._ws = ws;\n  },\n}));\n\nconst AudioModel = types.compose(\"AudioModel\", Model, TagAttrs, ObjectBase);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  if (!item._value) return null;\n\n  return (\n    <ObjectTag item={item}>\n      <Waveform\n        src={item._value}\n        onCreate={item.wsCreated}\n        onLoad={item.onLoad}\n        handlePlay={item.handlePlay}\n        speed={item.speed}\n        zoom={item.zoom}\n        volume={item.volume}\n        regions={false}\n        height={item.height}\n      />\n      <AudioControls item={item} store={store} />\n    </ObjectTag>\n  );\n});\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\n\nexport { AudioModel, HtxAudio };\n","import { types } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../core/Helpers\";\n\nexport default types\n  .model(\"WithStates\")\n  .views(self => ({\n    // returns one color from all the states\n    getOneColor(pick = \"first\") {\n      if (!self.states) return;\n\n      if (pick === \"first\") {\n        const s = self.states.find(s => \"getSelectedColor\" in s);\n\n        return s ? s.getSelectedColor() : null;\n      }\n\n      if ((pick = \"combine\")) {\n        // [TODO] combine colors\n      }\n    },\n\n    getClonedStates() {\n      return self.states.map(s => cloneNode(s));\n    },\n  }))\n  .actions(self => ({}));\n","export default {\n  FILL_COLOR: \"\",\n  STROKE_COLOR: \"\",\n  STROKE_WIDTH: 1,\n\n  // labels\n  LABEL_BACKGROUND: \"#36B37E\",\n\n  RELATION_BACKGROUND: \"#fff\",\n\n  // label on image\n  SHOW_LABEL_FILL: \"white\",\n  SHOW_LABEL_BACKGROUND: \"black\",\n\n  // when region gets highlighted styling\n  HIGHLIGHTED_STROKE_COLOR: \"red\",\n  HIGHLIGHTED_STROKE_WIDTH: 2,\n  HIGHLIGHTED_CSS_BORDER: \"1px dashed #00aeff\",\n\n  // cursors\n  DEFAULT_CURSOR: \"default\",\n  CHOOSE_CURSOR: \"pointer\",\n  POINTER_CURSOR: \"pointer\",\n  MOVE_CURSOR: \"move\",\n  RELATION_MODE_CURSOR: \"crosshair\",\n\n  // images\n  BRIGHTNESS_VALUE: 100,\n  BRIGHTNESS_MAX: 400,\n\n  CONTRAST_VALUE: 100,\n  CONTRAST_MAX: 400,\n};\n","import { types } from \"mobx-state-tree\";\n\n/**\n * Normalization\n * For normalize many labels to one value\n */\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    /**\n     * Set normalization\n     * @param {*} val\n     */\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    /**\n     * Delete normalization\n     */\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import { types, getParent, getRoot } from \"mobx-state-tree\";\nimport { cloneNode } from \"../core/Helpers\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst RegionsMixin = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    score: types.maybeNull(types.number),\n    readonly: types.optional(types.boolean, false),\n\n    hidden: types.optional(types.boolean, false),\n\n    selected: types.optional(types.boolean, false),\n    highlighted: types.optional(types.boolean, false),\n\n    parentID: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get perRegionStates() {\n      const states = self.states;\n      return states && states.filter(s => s.perregion === true);\n    },\n\n    get store() {\n      return getRoot(self);\n    },\n\n    get parent() {\n      return getParent(self);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get editable() {\n      return self.readonly === false && self.completion.editable === true;\n    },\n\n    get labelsState() {\n      return self.states.find(s => s.type.indexOf(\"labels\") !== -1);\n    },\n\n    hasLabelState(labelValue) {\n      // first of all check if this region implements labels\n      // interface\n      const s = self.labelsState;\n      if (!s) return false;\n\n      // find that label and check if its selected\n      const l = s.findLabel(labelValue);\n      if (!l || !l.selected) return false;\n\n      return true;\n    },\n  }))\n  .actions(self => ({\n    setParentID(id) {\n      self.parentID = id;\n    },\n\n    moveTop(size) {},\n    moveBottom(size) {},\n    moveLeft(size) {},\n    moveRight(size) {},\n\n    sizeRight(size) {},\n    sizeLeft(size) {},\n    sizeTop(size) {},\n    sizeBottom(size) {},\n\n    // \"web\" degree is opposite to mathematical, -90 is 90 actually\n    // swapSizes = true when canvas is already rotated at this moment\n    rotatePoint(point, degree, swapSizes = true) {\n      const { x, y } = point;\n      if (!degree) return { x, y };\n\n      degree = (360 + degree) % 360;\n      // transform origin is (w/2, w/2) for ccw rotation\n      // (h/2, h/2) for cw rotation\n      const w = self.parent.stageWidth;\n      const h = self.parent.stageHeight;\n      // actions: translate to fit origin, rotate, translate back\n      //   const shift = size / 2;\n      //   const newX = (x - shift) * cos + (y - shift) * sin + shift;\n      //   const newY = -(x - shift) * sin + (y - shift) * cos + shift;\n      // for ortogonal degrees it's simple:\n      if (degree === 270) return { x: y, y: (swapSizes ? h : w) - x };\n      if (degree === 90) return { x: (swapSizes ? w : h) - y, y: x };\n      if (Math.abs(degree) === 180) return { x: w - x, y: h - y };\n      return { x, y };\n    },\n\n    rotateDimensions({ width, height }, degree) {\n      if ((degree + 360) % 180 === 0) return { width, height };\n      return { width: height, height: width };\n    },\n\n    // update region appearence based on it's current states, for\n    // example bbox needs to update its colors when you change the\n    // label, becuase it takes color from the label\n    updateAppearenceFromState() {},\n\n    serialize() {\n      console.error(\"Region class needs to implement serialize\");\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = control => {\n        const tree = {\n          id: self.pid,\n          from_name: control.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: control.type,\n          parent_id: self.parentID === \"\" ? null : self.parentID,\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states\n          .map(s => {\n            const ser = self.serialize(s, parent);\n            if (!ser) return null;\n\n            const tree = {\n              ...buildTree(s),\n              ...ser,\n            };\n\n            // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n\n            return tree;\n          })\n          .filter(Boolean);\n      } else {\n        const obj = self.completion.toNames.get(parent.name);\n        const control = obj.length ? obj[0] : obj;\n\n        const tree = {\n          ...buildTree(control),\n          ...self.serialize(control, parent),\n        };\n\n        return tree;\n      }\n    },\n\n    updateOrAddState(state) {\n      var foundIndex = self.states.findIndex(s => s.name === state.name);\n      if (foundIndex !== -1) {\n        self.states[foundIndex] = cloneNode(state);\n        self.updateAppearenceFromState();\n      } else {\n        self.states.push(cloneNode(state));\n      }\n    },\n\n    // given the specific state object (for example labels) it finds\n    // that inside the region states objects and updates that, this\n    // function is used to capture the state\n    updateSingleState(state) {\n      var foundIndex = self.states.findIndex(s => s.name === state.name);\n      if (foundIndex !== -1) {\n        self.states[foundIndex] = cloneNode(state);\n\n        // user is updating the label of the region, there might\n        // be other states that depend on the value of the region,\n        // therefore we need to recheck here\n        if (state.type.indexOf(\"labels\") !== -1) {\n          const states = self.states.filter(s => s.whenlabelvalue !== null && s.whenlabelvalue !== undefined);\n          states && states.forEach(s => self.states.remove(s));\n        }\n\n        self.updateAppearenceFromState();\n      }\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n\n      self.completion.loadRegionState(self);\n    },\n\n    /**\n     * Common logic for unselection; specific actions should be in `afterUnselectRegion`\n     * @param {boolean} tryToKeepStates try to keep states selected if such settings enabled\n     */\n    unselectRegion(tryToKeepStates = false) {\n      const completion = self.completion;\n      const parent = self.parent;\n      const keepStates = tryToKeepStates && self.store.settings.continuousLabeling;\n\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n      if (parent.setSelected) {\n        parent.setSelected(undefined);\n      }\n\n      self.selected = false;\n      completion.setHighlightedNode(null);\n\n      self.afterUnselectRegion();\n\n      if (!keepStates) {\n        completion.unloadRegionState(self);\n      }\n    },\n\n    afterUnselectRegion() {},\n\n    onClickRegion() {\n      const completion = self.completion;\n      if (!completion.editable) return;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        if (self.selected) {\n          self.unselectRegion(true);\n        } else {\n          completion.regionStore.unselectAll();\n          self.selectRegion();\n        }\n      }\n    },\n\n    /**\n     * Remove region\n     */\n    deleteRegion() {\n      if (!self.completion.editable) return;\n\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      if (self.type === \"polygonregion\") {\n        self.destroyRegion();\n      }\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHighlight() {\n      self.setHighlight(!self.highlighted);\n    },\n\n    toggleHidden() {\n      self.hidden = !self.hidden;\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types } from \"mobx-state-tree\";\n\nconst RequiredMixin = types\n  .model({\n    required: types.optional(types.boolean, false),\n    requiredmessage: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    validate() {\n      if (self.perregion) {\n        // validating when choices labeling is done per region,\n        // for example choice may be required to be selected for\n        // every bbox\n        const objectTag = self.completion.names.get(self.toname);\n\n        for (var i = 0; i < objectTag.regions.length; i++) {\n          const reg = objectTag.regions[i];\n          const s = reg.states.find(s => s.type === self.type);\n\n          if (self.whenlabelvalue && !reg.hasLabelState(self.whenlabelvalue)) {\n            return true;\n          }\n\n          if (!s || s.selectedValues().length === 0) {\n            // means that this element is not visible because its\n            // not matching the label value, means we don't need to validation\n\n            self.completion.regionStore.unselectAll();\n            reg.selectRegion();\n            self.requiredModal();\n\n            return false;\n          }\n        }\n      } else {\n        // validation when its classifying the whole object\n        if (self.selectedValues().length === 0) {\n          self.requiredModal();\n          return false;\n        }\n      }\n\n      return true;\n    },\n  }));\n\nexport default RequiredMixin;\n","import { types } from \"mobx-state-tree\";\n\n/*\n * Per Region Mixin\n */\nconst PerRegionMixin = types\n  .model({\n    perregion: types.optional(types.boolean, false),\n    whenlabelvalue: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    perRegionVisible() {\n      if (!self.perregion) return true;\n\n      const region = self.completion.highlightedNode;\n      if (!region) {\n        // no region is selected return hidden\n        return false;\n      }\n      // check if selected region is the one this tag is connected to\n      if (region.parent.name !== self.toname) return false;\n\n      // we may need to check for specific value\n      if (self.whenlabelvalue !== null && self.whenlabelvalue !== undefined)\n        return region.hasLabelState(self.whenlabelvalue);\n\n      return true;\n    },\n  }))\n  .actions(self => ({}));\n\nexport default PerRegionMixin;\n","import { types, getType, getParent } from \"mobx-state-tree\";\n\nimport Registry from \"./Registry\";\n\nfunction _mixedArray(fn) {\n  return function(arr) {\n    return types.maybeNull(types.array(fn(arr)));\n  };\n}\n\nfunction _oneOf(lookup, err) {\n  return function(arr) {\n    return types.union({\n      dispatcher: sn => {\n        if (arr.find(val => sn.type === val)) {\n          return lookup(sn.type);\n        } else {\n          throw Error(err + sn.type);\n        }\n      },\n    });\n  };\n}\n\nconst oneOfTags = _oneOf(Registry.getModelByTag, \"Not expecting tag: \");\nconst tagsArray = _mixedArray(oneOfTags);\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOfTags(arr)));\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (Registry.tags.find(val => sn.type === val)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nconst oneOfTools = _oneOf(Registry.getTool, \"Not expecting tool: \");\nconst toolsArray = _mixedArray(oneOfTools);\n\nexport default { unionArray, allModelsTypes, isType, getParentOfTypeString, tagsArray, toolsArray };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\n\nimport { Typography } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./TextAreaRegion.css\";\nimport styles from \"./TextAreaRegion/TextAreaRegion.module.scss\";\nimport \"antd/dist/antd.css\";\n\nconst { Paragraph, Text } = Typography;\n\nconst BootstrapTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n  }))\n  .actions(self => ({\n    setValue(val) {\n      self._value = val;\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ store, item, editTag }) => {\n  const classes = [styles.mark];\n  const params = {};\n  const { parent } = item;\n  const { relationMode } = item.completion;\n\n  if (relationMode) {\n    classes.push(styles.relation);\n  }\n\n  if (item.selected) {\n    classes.push(styles.selected);\n  } else if (item.highlighted) {\n    classes.push(styles.highlighted);\n  }\n\n  if (parent.editable) {\n    params[\"editable\"] = {\n      onChange: str => {\n        item.setValue(str);\n\n        // here we update the parent object's state\n        if (parent.perregion) {\n          const reg = item.completion.highlightedNode;\n          reg && reg.updateSingleState(parent);\n\n          // self.regions = [];\n        }\n      },\n    };\n  }\n\n  let divAttrs = {};\n  if (!parent.perregion) {\n    divAttrs = {\n      onClick: item.onClickRegion,\n      onMouseOver: () => {\n        if (relationMode) {\n          item.setHighlight(true);\n        }\n      },\n      onMouseOut: () => {\n        /* range.setHighlight(false); */\n        if (relationMode) {\n          item.setHighlight(false);\n        }\n      },\n    };\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <BootstrapTooltip title={item._value.length > 20 ? item._value : \"\"}>\n        <div\n          style={{\n            width: \"30%\",\n          }}\n        >\n          <Text\n            style={{\n              cursor: \"pointer\",\n              backgroundColor: \"#f6ffed\",\n              border: \"solid 1px #b7eb8f\",\n              borderRadius: \"5px\",\n              margin: 0,\n              padding: \"0.7em 1em\",\n              direction: \"rtl\",\n              width: \"100%\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }}\n            ellipsis={{\n              tooltip: \"\",\n            }}\n          >\n            {item._value}\n          </Text>\n        </div>\n      </BootstrapTooltip>\n      <BootstrapTooltip title={\"ویرایش\"}>\n        <IconButton\n          className={\"edit-button\"}\n          onClick={ev => {\n            const reg = item.completion.highlightedNode;\n            item.completion.deleteRegion(item);\n\n            reg && reg.updateSingleState(parent);\n            console.log(item._value);\n            item.setValue(item._value);\n            editTag(item);\n            ev.preventDefault();\n            return false;\n          }}\n          sx={{\n            color: \"#3f407d\",\n          }}\n        >\n          <FontAwesomeIcon icon={faPencilAlt} />\n        </IconButton>\n      </BootstrapTooltip>\n      <BootstrapTooltip title={\"حذف\"}>\n        <IconButton\n          className={\"delete-button\"}\n          onClick={ev => {\n            const reg = item.completion.highlightedNode;\n            item.completion.deleteRegion(item);\n\n            reg && reg.updateSingleState(parent);\n\n            ev.preventDefault();\n            return false;\n          }}\n          sx={{\n            color: \"red\",\n            \"&:after\": {\n              content: '\"\"',\n              position: \"absolute\",\n              height: \"50%\",\n              display: \"block\",\n              left: 0,\n              width: \"1px\",\n              bgcolor: \"black\",\n            },\n          }}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </IconButton>\n      </BootstrapTooltip>\n    </div>\n  );\n};\n\nconst HtxTextAreaRegion = inject(\"store\")(observer(HtxTextAreaRegionView));\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import { types } from \"mobx-state-tree\";\n\nconst ControlBase = types\n  .model({})\n  .views(self => ({\n    get serializableValue() {\n      const obj = {};\n      if (self.selectedValues) {\n        obj[self.type] = self.selectedValues();\n      }\n\n      return obj;\n    },\n  }))\n  .actions(self => ({}));\n\nexport default ControlBase;\n","import React, { Component } from \"react\";\nimport { Form, Input } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { types, destroy, getRoot } from \"mobx-state-tree\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../../regions/TextAreaRegion\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { cloneNode } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\nimport Button from \"@mui/material/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faPauseCircle, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst { TextArea } = Input;\n/**\n * TextArea tag shows the textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label if any\n * @param {string} value\n * @param {string=} [label] label text\n * @param {string=} [placeholder] placeholder text\n * @param {string=} [maxSubmissions] maximum number of submissions\n * @param {boolean=} [editable=false] editable textarea results\n * @param {number} [rows] number of rows in the textarea\n * @param {boolean} [required=false]   - validation if textarea is required\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {boolean=} [showSubmitButton] show submit button or hide it, it's shown by default when rows is more than one (i.e. textarea mode)\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  allowsubmit: types.optional(types.boolean, true),\n  label: types.optional(types.string, \"\"),\n  value: types.maybeNull(types.string),\n  rows: types.optional(types.string, \"1\"),\n  showsubmitbutton: types.optional(types.boolean, false),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n  editable: types.optional(types.boolean, false),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n    children: Types.unionArray([\"shortcut\"]),\n  })\n  .views(self => ({\n    get holdsState() {\n      return self.regions.length > 0;\n    },\n\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n\n    get serializableValue() {\n      if (!self.regions.length) return null;\n      return { text: self.selectedValues() };\n    },\n\n    selectedValues() {\n      return self.regions.map(r => r._value);\n    },\n  }))\n  .actions(self => ({\n    getSerializableValue() {\n      const texts = self.regions.map(s => s._value);\n      if (texts.length === 0) return;\n\n      return { text: texts };\n    },\n\n    requiredModal() {\n      InfoModal.warning(self.requiredmessage || `Input for the textarea \"${self.name}\" is required.`);\n    },\n\n    setValue(value) {\n      self._value = value;\n    },\n\n    copyState(obj) {\n      self.regions = obj.regions.map(r => cloneNode(r));\n    },\n\n    perRegionCleanup() {\n      self.regions = [];\n    },\n\n    createRegion(text, pid) {\n      const r = TextAreaRegionModel.create({ pid: pid, _value: text });\n      self.regions.push(r);\n\n      return r;\n    },\n\n    addText(text, pid) {\n      const r = self.createRegion(text, pid);\n\n      if (self.perregion) {\n        const reg = self.completion.highlightedNode;\n        reg && reg.updateOrAddState(self);\n      } else {\n        self.completion.addRegion(r);\n      }\n\n      return r;\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n        self._value = \"\";\n      }\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    onShortcut(value) {\n      self.setValue(self._value + value);\n    },\n\n    toStateJSON() {\n      if (!self.regions.length) return;\n\n      const toname = self.toname || self.name;\n      const tree = {\n        id: self.pid,\n        from_name: self.name,\n        to_name: toname,\n        type: \"textarea\",\n        value: {\n          text: self.regions.map(r => r._value),\n        },\n      };\n\n      return tree;\n    },\n\n    fromStateJSON(obj, fromModel) {\n      let { text } = obj.value;\n      if (!Array.isArray(text)) text = [text];\n\n      text.forEach(t => self.addText(t, obj.id));\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  ControlBase,\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n  RequiredMixin,\n  PerRegionMixin,\n);\n\nclass H extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      _value: null,\n    };\n  }\n\n  editTag = item => {\n    this.setState({\n      isEdit: true,\n      _value: item._value,\n    });\n  };\n\n  render() {\n    const { item } = this.props;\n    const rows = parseInt(item.rows);\n\n    if (this.state.isEdit) {\n      item.setValue(this.state._value);\n      this.setState({\n        isEdit: false,\n      });\n    }\n\n    const props = {\n      name: item.name,\n      value: item._value,\n      rows: item.rows,\n      className: \"is-search\",\n      label: item.label,\n      placeholder: item.placeholder,\n      onChange: ev => {\n        const { value } = ev.target;\n        item.setValue(value);\n      },\n    };\n\n    if (!item.completion.editable) props[\"disabled\"] = true;\n\n    const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n    const showAddButton = (item.completion.editable && rows !== 1) || item.showSubmitButton;\n    const itemStyle = {};\n    if (showAddButton) itemStyle[\"marginBottom\"] = 0;\n\n    visibleStyle[\"marginTop\"] = \"4px\";\n\n    return (\n      <div style={visibleStyle}>\n        {Tree.renderChildren(item)}\n\n        {item.showSubmit && (\n          <Form\n            onFinish={ev => {\n              if (item.allowsubmit && item._value) {\n                item.addText(item._value);\n                item.setValue(\"\");\n              }\n\n              return false;\n            }}\n          >\n            <Form.Item style={itemStyle}>\n              {rows === 1 ? <TextArea {...props} /> : <TextArea {...props} />}\n              {showAddButton && (\n                <Form.Item>\n                  <Button\n                    variant=\"contained\"\n                    startIcon={<FontAwesomeIcon icon={faPlus} />}\n                    sx={{ direction: \"ltr\", marginTop: \"10px\" }}\n                    type=\"submit\"\n                    size={\"small\"}\n                  >\n                    اضافه‌کردن\n                  </Button>\n                  {/* <Button style={{ marginTop: \"10px\" }} type=\"primary\" htmlType=\"submit\">\n                    اضافه کردن\n                  </Button> */}\n                </Form.Item>\n              )}\n            </Form.Item>\n          </Form>\n        )}\n\n        {item.regions.length > 0 && (\n          <div style={{ marginBottom: \"1em\" }}>\n            {item.regions.map(t => (\n              <HtxTextAreaRegion\n                key={t.id}\n                item={t}\n                editTag={item => {\n                  this.editTag(item);\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst HtxTextArea = observer(H);\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import { types } from \"mobx-state-tree\";\n\nimport Tree from \"../core/Tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get tiedChildren() {\n      return Tree.filterChildrenOfType(self, self._child);\n    },\n\n    get selectedLabels() {\n      return self.tiedChildren.filter(c => c.selected === true);\n    },\n\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.tiedChildren.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n\n    // right now this is duplicate code from the above and it's done for clarity\n    get holdsState() {\n      return self.selectedLabels.length > 0;\n    },\n\n    selectedValues() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    getSelectedString(joinstr = \" \") {\n      return self.selectedValues().join(joinstr);\n    },\n\n    findLabel(value) {\n      return self.tiedChildren.find(c => c.alias === value || c.value === value);\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Get current color from Label settings\n     */\n    unselectAll() {\n      self.tiedChildren.forEach(c => c.setSelected(false));\n    },\n\n    checkMaxUsages() {\n      const list = self.tiedChildren.filter(c => !c.canBeUsed());\n      if (list.length) list.forEach(c => c.setSelected(false));\n      return list;\n    },\n\n    selectFirstVisible() {\n      const f = self.tiedChildren.find(c => c.visible);\n      f && f.toggleSelected();\n\n      return f;\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { types } from \"mobx-state-tree\";\n\n/*\n * Per Region Mixin\n */\nconst VisibilityMixin = types\n  .model({\n    visiblewhen: types.maybeNull(types.string),\n    whentagname: types.maybeNull(types.string),\n    whenchoicevalue: types.maybeNull(types.string),\n    whenlabelvalue: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get isVisible() {\n      if (self.visiblewhen) {\n        const fns = {\n          \"region-selected\": ({ tagName, labelValue }) => {\n            const reg = self.completion.highlightedNode;\n\n            if (reg === null || reg === undefined || (tagName && reg.parent.name !== tagName)) {\n              return false;\n            }\n\n            if (labelValue) return labelValue.split(\",\").some(v => reg.hasLabelState(v));\n\n            return true;\n          },\n\n          \"choice-selected\": ({ tagName, choiceValue }) => {\n            if (!tagName) {\n              for (let choices of self.completion.names.values()) {\n                if (choices.type === \"choices\" && choices.selectedValues && choices.selectedValues().length) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            const tag = self.completion.names.get(tagName);\n\n            if (!tag) return false;\n\n            if (choiceValue) {\n              const choicesSelected = choiceValue\n                .split(\",\")\n                .map(v => tag.findLabel(v))\n                .some(c => c && c.selected);\n              return choicesSelected;\n            }\n\n            return tag.isSelected;\n          },\n\n          \"no-region-selected\": ({ tagName }) => self.completion.highlightedNode === null,\n        };\n\n        if (Object.keys(fns).includes(self.visiblewhen)) {\n          const res = fns[self.visiblewhen]({\n            tagName: self.whentagname,\n            choiceValue: self.whenchoicevalue,\n            labelValue: self.whenlabelvalue,\n          });\n\n          return res !== false;\n        }\n      }\n\n      return true;\n    },\n  }))\n  .actions(self => ({}));\n\nexport default VisibilityMixin;\n","import React, { Component } from \"react\";\nimport { Checkbox, Radio, Form } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport { ChoicesModel } from \"./Choices\";\n\n/**\n * Choice tag represents a single choice\n *\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice value=\"Male\" />\n *     <Choice value=\"Female\" />\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\" />\n * </View>\n * @name Choice\n * @param {string} value       - choice value\n * @param {boolean} [selected] - if this label should be preselected\n * @param {string} [alias]     - alias for the label\n * @param {style} [style]      - css style of the checkbox element\n * @param {string} [hotkey]    - hotkey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    visible: types.optional(types.boolean, true),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = self.parent.choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get isSelect() {\n      console.log(self.parent.layout);\n      return self.parent.layout === \"select\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get parent() {\n      return getParentOfType(self, ChoicesModel);\n    },\n\n    // to conform Label's maxUsages check\n    canBeUsed() {\n      return true;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choices = self.parent;\n\n      choices.shouldBeUnselected && choices.unselectAll();\n\n      self.setSelected(!self.selected);\n\n      const reg = self.completion.highlightedNode;\n\n      // if (reg) {\n      //     const sel = self.parent.selectedLabels;\n      //     if (sel.length === 1 && sel[0]._value === self._value) return;\n      // }\n\n      // choice is toggled, we need to check if we need to update\n      // the currently selected region\n      if (reg && choices.perregion && reg.parent.name === choices.toname) {\n        reg.updateOrAddState(choices);\n      }\n    },\n\n    setVisible(val) {\n      self.visible = val;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\"ChoiceModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nclass HtxChoiceView extends Component {\n  render() {\n    const { item, store } = this.props;\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (!item.visible) {\n      style[\"display\"] = \"none\";\n    }\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ display: \"flex\", alignItems: \"center\", marginBottom: 0 }, style);\n\n      return (\n        <Form.Item style={cStyle}>\n          <Checkbox\n            disabled={item.parent.readonly}\n            name={item._value}\n            onChange={ev => {\n              if (!item.completion.editable) return;\n              item.toggleSelected();\n              ev.nativeEvent.target.blur();\n            }}\n            checked={item.selected}\n          >\n            {item._value}\n            {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n              <Hint>[{item.hotkey}]</Hint>\n            )}\n          </Checkbox>\n        </Form.Item>\n      );\n    } else {\n      return (\n        <div style={style}>\n          <Radio\n            disabled={item.parent.readonly}\n            value={item._value}\n            style={{ display: \"inline-block\", marginBottom: \"0.5em\" }}\n            checked={item.selected}\n            onChange={ev => {\n              if (!item.completion.editable) return;\n              item.toggleSelected();\n              ev.nativeEvent.target.blur();\n            }}\n          >\n            {item._value}\n            {(store.settings.enableTooltips || store.settings.enableLabelTooltips) &&\n              store.settings.enableHotkeys &&\n              item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n          </Radio>\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxChoice = inject(\"store\")(observer(HtxChoiceView));\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React from \"react\";\nimport { Form, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport VisibilityMixin from \"../../mixins/Visibility\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { ChoiceModel } from \"./Choice\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\nconst { Option } = Select;\n\n/**\n * Choices tag, create a group of choices, radio, or checkboxes. Shall\n * be used for a single or multi-class classification.\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\" />\n *     <Choice alias=\"F\" value=\"Female\" />\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\" />\n * </View>\n * @name Choices\n * @param {string} name                - name of the group\n * @param {string} toName              - name of the element that you want to label\n * @param {single|single-radio|multiple} [choice=single] - single or multi-class\n * @param {boolean} [showInline=false] - show items in the same visual line\n * @param {boolean} [required=false]   - validation if choice has been selected\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {region-selected|choice-selected|no-region-selected} [visibleWhen] show the contents of a view when condition is true\n * @param {string} [whenTagName] narrow down visibility by name of the tag, for regions use the name of the object tag, for choices use the name of the choices tag\n * @param {string} [whenLabelValue] narrow down visibility by label value\n * @param {string} [whenChoiceValue] narrow down visibility by choice value\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n\n  showinline: types.maybeNull(types.boolean),\n\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n\n  layout: types.optional(types.enumeration([\"select\", \"inline\", \"vertical\"]), \"vertical\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    readonly: types.optional(types.boolean, false),\n    visible: types.optional(types.boolean, true),\n\n    type: \"choices\",\n    _type: \"choices\",\n    children: Types.unionArray([\"choice\", \"view\", \"header\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    get serializableValue() {\n      const choices = self.selectedValues();\n      if (choices && choices.length) return { choices };\n\n      return null;\n    },\n\n    // perChoiceVisible() {\n    //     if (! self.whenchoicevalue) return true;\n\n    //     // this is a special check when choices are labeling other choices\n    //     // may need to show\n    //     if (self.whenchoicevalue) {\n    //         const choicesTag = self.completion.names.get(self.toname);\n    //         const ch = choicesTag.findLabel(self.whenchoicevalue);\n\n    //         if (ch && ch.selected)\n    //             return true;\n    //     }\n\n    //     return false;\n    // }\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // TODO depricate showInline\n      if (self.showinline === true) self.layout = \"inline\";\n      if (self.showinline === false) self.layout = \"vertical\";\n    },\n\n    requiredModal() {\n      InfoModal.warning(self.requiredmessage || `Checkbox \"${self.name}\" is required.`);\n    },\n\n    copyState(choices) {\n      choices.selectedValues().forEach(l => {\n        self.findLabel(l).setSelected(true);\n      });\n    },\n\n    toStateJSON() {\n      const names = self.selectedValues();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      self.readonly = obj.readonly;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.setSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  ControlBase,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"ChoiceModel\" }),\n  RequiredMixin,\n  PerRegionMixin,\n  VisibilityMixin,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  const style = { marginTop: \"1em\", marginBottom: \"1em\" };\n  const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n  if (item.isVisible === false) {\n    item.unselectAll();\n    visibleStyle[\"display\"] = \"none\";\n  }\n\n  return (\n    <div style={{ ...style, ...visibleStyle }}>\n      {item.layout === \"select\" ? (\n        <Select\n          style={{ width: \"100%\" }}\n          defaultValue={item.selectedLabels.map(l => l._value)}\n          mode={item.choice === \"multiple\" ? \"multiple\" : \"\"}\n          onChange={function(val, opt) {\n            if (Array.isArray(val)) {\n              item.unselectAll();\n              val.forEach(v => item.findLabel(v).setSelected(true));\n            } else {\n              const c = item.findLabel(val);\n              if (c) {\n                c.toggleSelected();\n              }\n            }\n          }}\n        >\n          {item.tiedChildren.map(i => (\n            <Option key={i._value} value={i._value}>\n              {i._value}\n            </Option>\n          ))}\n        </Select>\n      ) : (\n        <Form layout={item.layout}>{Tree.renderChildren(item)}</Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import { types } from \"mobx-state-tree\";\n\nimport InfoModal from \"../components/Infomodal/Infomodal\";\n\n/**\n * Wrapper of Control item\n */\nconst LabelMixin = types.model(\"LabelMixin\").actions(self => ({\n  /**\n   * Usage check of selected controls before send completion to server\n   */\n  beforeSend() {\n    const names = self.selectedValues();\n\n    if (names && self.type === self._type) {\n      self.unselectAll();\n    }\n  },\n\n  // copy state from another Labels object\n  copyState(labels) {\n    // self.unselectAll();\n    labels.selectedValues().forEach(l => {\n      self.findLabel(l).setSelected(true);\n    });\n  },\n\n  fromStateJSON(obj, fromModel) {\n    self.unselectAll();\n\n    const objectType = obj.value[self._type];\n\n    if (!objectType) {\n      InfoModal.error(`Error with ${self._type}.`);\n      return;\n    }\n\n    if (obj.id) self.pid = obj.id;\n\n    objectType.forEach(obj => {\n      const findedObj = self.findLabel(obj);\n\n      if (!findedObj) {\n        InfoModal.error(`Error with ${self._type}. Not found: ` + objectType);\n        return;\n      }\n\n      findedObj.setSelected(true);\n    });\n  },\n}));\n\nexport default LabelMixin;\n","import ColorScheme from \"pleasejs\";\nimport React from \"react\";\nimport { Tag } from \"antd\";\nimport { getRoot, types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Constants from \"../../core/Constants\";\nimport Types from \"../../core/Types\";\nimport Utils from \"../../utils\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate } from \"../../core/Template\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\n\nimport \"./Labels.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * Label tag represents a single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\" />\n *     <Label alias=\"P\" value=\"Product\" />\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\" />\n * </View>\n * @name Label\n * @param {string} value                    - value of the label\n * @param {boolean} [selected=false]        - if this label should be preselected\n * @param {number} [maxUsages]              - maximum available usages\n * @param {string} [hotkey]                 - hotkey, if not specified then will be automatically generated\n * @param {string} [alias]                  - label alias\n * @param {boolean} [showAlias=false]       - show alias inside label text\n * @param {string} [aliasStyle=opacity:0.6] - alias CSS style\n * @param {string} [size=medium]            - size of text in the label\n * @param {string} [background]             - background color of an active label\n * @param {string} [selectedColor]          - color of text in an active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  maxusages: types.maybeNull(types.string),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.boolean, false),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(types.string, Constants.LABEL_BACKGROUND),\n  selectedcolor: types.optional(types.string, \"white\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    visible: types.optional(types.boolean, true),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get maxUsages() {\n      return Number(self.maxusages || self.parent.maxusages);\n    },\n\n    usedAlready() {\n      const regions = self.completion.regionStore.regions;\n      // count all the usages among all the regions\n      const used = regions.reduce((s, r) => s + r.hasLabelState(self.value), 0);\n      return used;\n    },\n\n    canBeUsed() {\n      if (!self.maxUsages) return true;\n      return self.usedAlready() < self.maxUsages;\n    },\n\n    get parent() {\n      return Types.getParentOfTypeString(self, [\n        \"LabelsModel\",\n        \"EllipseLabelsModel\",\n        \"RectangleLabelsModel\",\n        \"PolygonLabelsModel\",\n        \"KeyPointLabelsModel\",\n        \"BrushLabelsModel\",\n        \"HyperTextLabelsModel\",\n      ]);\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Select label\n     */\n    toggleSelected() {\n      // here we check if you click on label from labels group\n      // connected to the region on the same object tag that is\n      // right now highlighted, and if that region is readonly\n      const region = self.completion.highlightedNode;\n      if (region && region.readonly === true && region.parent.name === self.parent.toname) return;\n\n      // one more check if that label can be selected\n      if (!self.completion.editable) return;\n\n      // don't select if it can not be used\n      if (!self.selected && !self.canBeUsed()) {\n        InfoModal.warning(`You can't use ${self.value} more than ${self.maxUsages} time(s)`);\n        return;\n      }\n\n      const labels = self.parent;\n\n      // check if there is a region selected and if it is and user\n      // is changing the label we need to make sure that region is\n      // not going to endup without the label(s) at all\n      if (region) {\n        const sel = labels.selectedLabels;\n        if (sel.length === 1 && sel[0]._value === self._value) return;\n      }\n\n      // if we are going to select label and it would be the first in this labels group\n      if (!labels.selectedLabels.length && !self.selected) {\n        // unselect labels from other groups of labels connected to this obj\n        self.completion.toNames\n          .get(labels.toname)\n          .filter(tag => tag.type && tag.type.endsWith(\"labels\") && tag.name !== labels.name)\n          .forEach(tag => tag.unselectAll && tag.unselectAll());\n\n        // unselect other tools if they exist and selected\n        const tool = Object.values(self.parent.tools || {})[0];\n        if (tool && tool.manager.findSelectedTool() !== tool) {\n          tool.manager.unselectAll();\n          tool.setSelected(true);\n        }\n      }\n\n      /**\n       * Multiple\n       */\n      if (!labels.shouldBeUnselected) {\n        self.setSelected(!self.selected);\n      }\n\n      /**\n       * Single\n       */\n      if (labels.shouldBeUnselected) {\n        /**\n         * Current not selected\n         */\n        if (!self.selected) {\n          labels.unselectAll();\n          self.setSelected(!self.selected);\n        } else {\n          labels.unselectAll();\n        }\n      }\n\n      region && region.updateSingleState(labels);\n    },\n\n    setVisible(val) {\n      self.visible = val;\n    },\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    setSelected(value) {\n      self.selected = value;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n\n    _updateBackgroundColor(val) {\n      if (self.background === Constants.LABEL_BACKGROUND) self.background = ColorScheme.make_color({ seed: val })[0];\n    },\n\n    afterCreate() {\n      self._updateBackgroundColor(self._value || self.value);\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n      self._updateBackgroundColor(self._value);\n    },\n  }));\n\nconst LabelModel = types.compose(\"LabelModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = item.background;\n    const labelStyle = {\n      backgroundColor: item.selected ? bg : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    if (!item.visible) {\n      labelStyle[\"display\"] = \"none\";\n    }\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={labelStyle}\n        size={item.size}\n        icon={<FontAwesomeIcon icon={faTag} />}\n        className={\"tag\"}\n      >\n        {item._value}\n        {item.showalias === true && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {(store.settings.enableTooltips || store.settings.enableLabelTooltips) &&\n          store.settings.enableHotkeys &&\n          item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { LabelModel } from \"./Label\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Labels tag, create a group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\" />\n *     <Label alias=\"P\" value=\"Product\" />\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\" />\n * </View>\n * @name Labels\n * @param {string} name                      - name of the element\n * @param {string} toName                    - name of the element that you want to label\n * @param {single|multiple=} [choice=single] - configure if you can select just one or multiple labels\n * @param {number} [maxUsages]               - maximum available usages\n * @param {boolean} [required=false]         - validation if label is required\n * @param {string} [requiredMessage]         - message to show if validation fails\n * @param {boolean} [showInline=true]        - show items in the same visual line\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n  maxusages: types.maybeNull(types.string),\n  showinline: types.optional(types.boolean, true),\n});\n\n/**\n * @param {boolean} showinline\n * @param {identifier} id\n * @param {string} pid\n */\nconst ModelAttrs = types.model({\n  id: types.optional(types.identifier, guidGenerator),\n  pid: types.optional(types.string, guidGenerator),\n  type: \"labels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n\n  visible: types.optional(types.boolean, true),\n});\n\nconst Model = LabelMixin.props({ _type: \"labels\" })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\";\n    },\n  }))\n  .actions(self => ({\n    validate() {\n      const regions = self.completion.regionStore.regions;\n\n      for (let r of regions) {\n        for (let s of r.states) {\n          if (s.name === self.name) {\n            return true;\n          }\n        }\n      }\n\n      InfoModal.warning(self.requiredmessage || `Labels \"${self.name}\" were not used.`);\n      return false;\n    },\n  }));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  ModelAttrs,\n  TagAttrs,\n  Model,\n  RequiredMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  const style = {\n    marginTop: \"1em\",\n    marginBottom: \"1em\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    flexFlow: \"wrap\",\n    marginLeft: \"-5px\",\n  };\n\n  if (!item.showinline) {\n    style[\"flexDirection\"] = \"column\";\n    style[\"alignItems\"] = \"flex-start\";\n    style[\"marginTop\"] = \"0\";\n  }\n\n  if (!item.visible) {\n    style[\"display\"] = \"none\";\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React from \"react\";\nimport { Rate } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { StarOutlined } from \"@ant-design/icons\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Rating adds rating selection\n *\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\" />\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\" icon=\"star\" size=\"medium\" />\n * </View>\n *\n * @name Rating\n * @param {string} name Name of the element\n * @param {string} toName Name of the element that you want to label\n * @param {number} [maxRating=5] Maximum rating value\n * @param {number} [defaultValue=0] Default rating value\n * @param {string} [size=medium] One of: small, medium, large\n * @param {string} [icon=start] One of: star, heart, fire, smile\n * @param {string} hotkey HotKey for changing rating value\n * @param {boolean} [required=false]   - validation if rating is required\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"medium\"),\n  defaultvalue: types.optional(types.string, \"0\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    selectedValues() {\n      return self.holdsState ? self.rating : null;\n    },\n\n    get serializableValue() {\n      const rating = self.selectedValues();\n      if (!rating) return null;\n      return { rating };\n    },\n\n    get holdsState() {\n      return self.rating > 0;\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    copyState(obj) {\n      self.setRating(obj.rating);\n    },\n\n    unselectAll() {\n      self.rating = 0;\n    },\n\n    setRating(value) {\n      self.rating = value;\n\n      if (self.perregion) {\n        const reg = self.completion.highlightedNode;\n        reg && reg.updateOrAddState(self);\n      }\n    },\n\n    increaseValue() {\n      if (self.rating >= Number(self.maxrating)) {\n        self.setRating(0);\n      } else {\n        if (self.rating > 0) {\n          self.setRating(self.rating + 1);\n        } else {\n          self.setRating(1);\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\"RatingModel\", ControlBase, TagAttrs, Model, RequiredMixin, PerRegionMixin);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    let iconSize;\n\n    if (item.size === \"small\") {\n      iconSize = 15;\n    } else if (item.size === \"medium\") {\n      iconSize = 25;\n    } else if (item.size === \"large\") {\n      iconSize = 40;\n    }\n\n    const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n    return (\n      <div style={visibleStyle}>\n        <Rate\n          character={<StarOutlined style={{ fontSize: iconSize }} />}\n          value={item.rating}\n          count={Number(item.maxrating)}\n          defaultValue={Number(item.defaultvalue)}\n          onChange={item.setRating}\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Utils from \"../utils\";\nimport { AudioPlusModel } from \"../tags/object/AudioPlus\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { LabelsModel } from \"../tags/control/Labels\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { RatingModel } from \"../tags/control/Rating\";\n\nconst Model = types\n  .model(\"AudioRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"audioregion\",\n    start: types.number,\n    end: types.number,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n    selectedregionbg: types.optional(types.string, \"rgba(0, 0, 0, 0.5)\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, AudioPlusModel);\n    },\n\n    wsRegionElement(wsRegion) {\n      const elID = wsRegion.id;\n      let el = Array.from(document.querySelectorAll(`[data-id=\"${elID}\"]`));\n\n      if (el && el.length) el = el[0];\n      return el;\n    },\n  }))\n  .actions(self => ({\n    serialize(control, object) {\n      let res = {\n        original_length: object._ws.getDuration(),\n        value: {\n          start: self.start,\n          end: self.end,\n        },\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n\n    updateAppearenceFromState() {\n      const s = self.labelsState;\n      if (!s) return;\n\n      self.selectedregionbg = Utils.Colors.convertToRGBA(s.getSelectedColor(), 0.3);\n      if (self._ws_region.update) {\n        self.applyCSSClass(self._ws_region);\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n      }\n    },\n\n    applyCSSClass(wsRegion) {\n      const el = self.wsRegionElement(wsRegion);\n\n      const settings = getRoot(self).settings;\n      const names = Utils.Checkers.flatten(self.states.filter(s => s._type === \"labels\").map(s => s.selectedValues()));\n\n      const cssCls = Utils.HTML.labelWithCSS(el, {\n        labels: names,\n        score: self.score,\n      });\n\n      const classes = [el.className, \"htx-highlight\", \"htx-highlight-last\", cssCls];\n\n      if (!self.parent.showlabels && !settings.showLabels) classes.push(\"htx-no-label\");\n\n      el.className = classes.filter(c => c).join(\" \");\n    },\n\n    /**\n     * Select audio region\n     */\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self._ws_region.update({\n        color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8),\n        // border: \"1px dashed #00aeff\"\n      });\n      self.completion.loadRegionState(self);\n\n      const el = self.wsRegionElement(self._ws_region);\n      if (el) {\n        const container = window.document.scrollingElement;\n        const top = container.scrollTop;\n        const left = container.scrollLeft;\n        el.scrollIntoViewIfNeeded ? el.scrollIntoViewIfNeeded() : el.scrollIntoView();\n        window.document.scrollingElement.scrollTo(left, top);\n      }\n    },\n\n    /**\n     * Unselect audio region\n     */\n    afterUnselectRegion() {\n      // debugger;\n      if (self._ws_region.update) {\n        self._ws_region.update({\n          color: self.selectedregionbg,\n          // border: \"none\"\n        });\n      }\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n        self._ws_region.element.style.border = Constants.HIGHLIGHTED_CSS_BORDER;\n      } else {\n        self._ws_region.update({ color: self.selectedregionbg });\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      // if (! self.editable) return;\n\n      if (!self.completion.relationMode) {\n        // Object.values(wavesurfer.regions.list).forEach(r => {\n        //   // r.update({ color: self.selectedregionbg });\n        // });\n\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n      }\n\n      self.onClickRegion();\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = Constants.RELATION_MODE_CURSOR;\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = Constants.MOVE_CURSOR;\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\"AudioRegionModel\", WithStatesMixin, RegionsMixin, NormalizationMixin, Model);\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot, getType } from \"mobx-state-tree\";\n\nimport AudioControls from \"./Audio/Controls\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport ObjectBase from \"./Base\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Utils from \"../../utils\";\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport styles from \"./AudioPlus/AudioPlus.module.scss\"; // eslint-disable-line no-unused-vars\nimport { AudioRegionModel } from \"../../regions/AudioRegion\";\nimport { cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n/**\n * AudioPlus tag plays audio and shows its wave\n * @example\n * <View>\n *   <Labels name=\"lbl-1\" toName=\"audio-1\">\n *     <Label value=\"Hello\" />\n *     <Label value=\"World\" />\n *   </Labels>\n *   <Rating name=\"rate-1\" toName=\"audio-1\" />\n *   <AudioPlus name=\"audio-1\" value=\"$audio\" />\n * </View>\n * @name AudioPlus\n * @param {string} name - name of the element\n * @param {string} value - value of the element\n * @param {boolean=} [volume=false] - show the volume slider (from 0 to 1)\n * @param {boolean} [speed=false] - show the speed slider (from 0.5 to 3)\n * @param {boolean} [zoom=true] - show the zoom slider\n * @param {string} [hotkey] - hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  zoom: types.optional(types.boolean, true),\n  volume: types.optional(types.boolean, true),\n  speed: types.optional(types.boolean, true),\n  regs: types.optional(types.boolean, true),\n  hotkey: types.maybeNull(types.string),\n  showlabels: types.optional(types.boolean, false),\n  showscores: types.optional(types.boolean, false),\n  height: types.optional(types.string, \"128\"),\n});\n\nconst Model = types\n  .model(\"AudioPlusModel\", {\n    id: types.identifier,\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => getType(s).name === \"LabelsModel\" && s.isSelected);\n    },\n  }))\n  .actions(self => ({\n    onHotKey(e) {\n      e && e.preventDefault();\n      return self._ws.playPause();\n    },\n\n    fromStateJSON(obj, fromModel) {\n      let r;\n      let m;\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      if (!fm.perregion && fromModel.type !== \"labels\") return;\n\n      /**\n       *\n       */\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        normalization: obj.normalization,\n        score: obj.score,\n        readonly: obj.readonly,\n      };\n\n      r = self.findRegion({ start: obj.value.start, end: obj.value.end });\n\n      if (fromModel) {\n        m = restoreNewsnapshot(fromModel);\n        // m.fromStateJSON(obj);\n\n        if (!r) {\n          // tree.states = [m];\n          r = self.createRegion(tree, [m]);\n          // r = self.addRegion(tree);\n        } else {\n          r.states.push(m);\n        }\n      }\n\n      if (self._ws) {\n        self._ws.addRegion({\n          start: r.start,\n          end: r.end,\n        });\n      }\n\n      // if (fm.perregion)\n      //     fm.perRegionCleanup();\n\n      r.updateAppearenceFromState();\n\n      return r;\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    setPlaybackRate(val) {\n      self.playBackRate = val;\n    },\n\n    createRegion(wsRegion, states) {\n      let bgColor = self.selectedregionbg;\n      const st = states.find(s => s.type === \"labels\");\n      if (st) bgColor = Utils.Colors.convertToRGBA(st.getSelectedColor(), 0.3);\n\n      const r = AudioRegionModel.create({\n        id: wsRegion.id ? wsRegion.id : guidGenerator(),\n        pid: wsRegion.pid ? wsRegion.pid : guidGenerator(),\n        parentID: wsRegion.parent_id === null ? \"\" : wsRegion.parent_id,\n        start: wsRegion.start,\n        end: wsRegion.end,\n        score: wsRegion.score,\n        readonly: wsRegion.readonly,\n        regionbg: self.regionbg,\n        selectedregionbg: bgColor,\n        normalization: wsRegion.normalization,\n        states: states,\n      });\n\n      r._ws_region = wsRegion;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(ws_region) {\n      const find_r = self.findRegion({ start: ws_region.start, end: ws_region.end });\n\n      if (find_r) {\n        find_r.applyCSSClass(ws_region);\n\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      const allStates = self.getAvailableStates();\n      if (allStates.length === 0) {\n        ws_region.remove && ws_region.remove();\n        return;\n      }\n\n      const r = self.createRegion(\n        ws_region,\n        allStates.map(s => cloneNode(s)),\n      );\n      r.applyCSSClass(ws_region);\n\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n\n      self.regions.forEach(obj => {\n        let opts = {};\n        if (obj.readonly)\n          opts = {\n            drag: false,\n            resize: false,\n          };\n\n        self._ws.addRegion({\n          start: obj.start,\n          end: obj.end,\n          ...opts,\n        });\n      });\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\"AudioPlusModel\", TagAttrs, Model, ProcessAttrsMixin, ObjectBase);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  if (!item._value) return null;\n\n  return (\n    <ObjectTag item={item}>\n      <Fragment>\n        <Waveform\n          src={item._value}\n          selectRegion={item.selectRegion}\n          handlePlay={item.handlePlay}\n          onCreate={item.wsCreated}\n          addRegion={item.addRegion}\n          onLoad={item.onLoad}\n          speed={item.speed}\n          zoom={item.zoom}\n          volume={item.volume}\n          regions={item.regs}\n          height={item.height}\n          store={store}\n          item={item}\n        />\n        {/* \n        <AudioControls item={item} store={store} /> */}\n        <div style={{ marginBottom: \"4px\" }}></div>\n      </Fragment>\n    </ObjectTag>\n  );\n});\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\n\nexport { AudioRegionModel, AudioPlusModel, HtxAudioPlus };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../utils\";\nimport Constants from \"../core/Constants\";\nimport { highlightRange } from \"../utils/html\";\n\nexport default types\n  .model()\n  .views(self => ({}))\n  .actions(self => ({\n    updateSpansColor(bgcolor, opacity) {\n      if (self._spans) {\n        self._spans.forEach(span => {\n          if (bgcolor) {\n            span.style.backgroundColor = bgcolor;\n          }\n\n          if (opacity) {\n            span.style.backgroundColor = Utils.Colors.rgbaChangeAlpha(span.style.backgroundColor, opacity);\n          }\n        });\n      }\n    },\n\n    updateAppearenceFromState() {\n      const labelColor = self.getLabelColor();\n\n      self.updateSpansColor(labelColor);\n      self.applyCSSClass(self._lastSpan);\n    },\n\n    createSpans() {\n      const labelColor = self.getLabelColor();\n      const spans = highlightRange(self, \"htx-highlight\", { backgroundColor: labelColor });\n\n      const lastSpan = spans[spans.length - 1];\n      if (!lastSpan) return;\n\n      self.applyCSSClass(lastSpan);\n\n      self._lastSpan = lastSpan;\n      self._spans = spans;\n\n      return spans;\n    },\n\n    getLabelColor() {\n      let labelColor = self.parent.highlightcolor;\n      if (!labelColor) {\n        const ls = self.states.find(s => s._type && s._type.indexOf(\"labels\") !== -1);\n        if (ls) labelColor = ls.getSelectedColor();\n      }\n\n      if (labelColor) {\n        labelColor = Utils.Colors.convertToRGBA(labelColor, 0.3);\n      }\n\n      return labelColor;\n    },\n\n    applyCSSClass(lastSpan) {\n      const settings = getRoot(self).settings;\n      const names = Utils.Checkers.flatten(\n        self.states.filter(s => s._type && s._type.indexOf(\"labels\") !== -1).map(s => s.selectedValues()),\n      );\n\n      const cssCls = Utils.HTML.labelWithCSS(lastSpan, {\n        labels: names,\n        score: self.score,\n      });\n\n      const classes = [\"htx-highlight\", \"htx-highlight-last\", cssCls];\n\n      if (!self.parent.showlabels && !settings.showLabels) classes.push(\"htx-no-label\");\n\n      lastSpan.className = classes.filter(c => c).join(\" \");\n    },\n\n    addEventsToSpans(spans) {\n      const addEvent = s => {\n        s.onmouseover = function(ev) {\n          if (self.completion.relationMode) {\n            self.toggleHighlight();\n            s.style.cursor = Constants.RELATION_MODE_CURSOR;\n            // only one span should be highlighted\n            ev.stopPropagation();\n          } else {\n            s.style.cursor = Constants.POINTER_CURSOR;\n          }\n        };\n\n        s.onmouseout = function() {\n          self.setHighlight(false);\n        };\n\n        s.onmousedown = function(ev) {\n          // if we click to already selected span (=== this)\n          // skip it to allow another span to be selected\n          if (self.parent._currentSpan !== this) {\n            ev.stopPropagation();\n            self.parent._currentSpan = this;\n          }\n        };\n\n        s.onclick = function(ev) {\n          // set above in `onmousedown`, can be nulled when new region created\n          if (self.parent._currentSpan !== this) return;\n          // reset for the case we just created new relation\n          s.style.cursor = Constants.POINTER_CURSOR;\n          self.onClickRegion();\n        };\n\n        return false;\n      };\n\n      spans && spans.forEach(s => addEvent(s));\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.updateSpansColor(null, 0.8);\n      self.completion.loadRegionState(self);\n\n      const first = self._spans[0];\n      if (first) {\n        if (first.scrollIntoViewIfNeeded) {\n          first.scrollIntoViewIfNeeded();\n        } else {\n          first.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n      }\n    },\n\n    /**\n     * Unselect text region\n     */\n    afterUnselectRegion() {\n      self.updateSpansColor(null, 0.3);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (self._spans) {\n        const len = self._spans.length;\n        const fspan = self._spans[0];\n        const lspan = self._spans[len - 1];\n        const mspans = self._spans.slice(1, len - 1);\n\n        const set = (span, s, { top = true, bottom = true, right = true, left = true } = {}) => {\n          if (right) span.style.borderRight = s;\n          if (left) span.style.borderLeft = s;\n          if (top) span.style.borderTop = s;\n          if (bottom) span.style.borderBottom = s;\n        };\n\n        if (self.highlighted) {\n          const h = Constants.HIGHLIGHTED_CSS_BORDER;\n          set(fspan, h, { right: false });\n          set(lspan, h, { left: false });\n\n          if (mspans.length) mspans.forEach(s => set(s, h, { left: false, right: false }));\n        } else {\n          const zpx = \"0px\";\n          set(fspan, zpx);\n          set(lspan, zpx);\n\n          if (mspans.length) mspans.forEach(s => set(s, zpx, { left: false, right: false }));\n        }\n      }\n    },\n  }));\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * HyperTextLabels tag\n * HyperTextLabels tag creates labeled hyper text (HTML)\n * @example\n * <View>\n *   <HyperTextLabels name=\"labels\" toName=\"ht\">\n *     <Label value=\"Face\" />\n *     <Label value=\"Nose\" />\n *   </HyperTextLabels>\n *   <HyperText name=\"ht\" value=\"$html\" />\n * </View>\n * @name HyperTextLabels\n * @param {string} name name of the element\n * @param {string} toName name of the html element to label\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types\n  .model(\"HyperTextLabelesModel\", {\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n    type: \"htmllabels\",\n    children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get serializableValue() {\n      const obj = {};\n      obj[\"htmllabels\"] = self.selectedValues();\n\n      return obj;\n    },\n  }));\n\nconst Model = LabelMixin.props({ _type: \"htmllabels\" });\n\nconst Composition = types.compose(\n  ControlBase,\n  LabelsModel,\n  ModelAttrs,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n);\n\nconst HyperTextLabelsModel = types.compose(\"HyperTextLabelsModel\", Composition);\n\nconst HtxHyperTextLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"hypertextlabels\", HyperTextLabelsModel, HtxHyperTextLabels);\n\nexport { HtxHyperTextLabels, HyperTextLabelsModel };\n","import { types, getParentOfType } from \"mobx-state-tree\";\n\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport SpanTextMixin from \"../mixins/SpanText\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { HyperTextLabelsModel } from \"../tags/control/HyperTextLabels\";\nimport { HyperTextModel } from \"../tags/object/HyperText\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst Model = types\n  .model(\"HyperTextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"hypertextregion\",\n    startOffset: types.integer,\n    start: types.string,\n    endOffset: types.integer,\n    end: types.string,\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(HyperTextLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, HyperTextModel);\n    },\n  }))\n  .actions(self => ({\n    beforeDestroy() {\n      Utils.HTML.removeSpans(self._spans);\n    },\n\n    serialize(control, object) {\n      let res = {\n        value: {\n          start: self.start,\n          end: self.end,\n          text: self.text,\n          startOffset: self.startOffset,\n          endOffset: self.endOffset,\n        },\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst HyperTextRegionModel = types.compose(\n  \"HyperTextRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n  SpanTextMixin,\n);\n\nexport { HyperTextRegionModel };\n","import * as xpath from \"xpath-range\";\nimport React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../../utils\";\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport RegionsMixin from \"../../mixins/Regions\";\nimport Registry from \"../../core/Registry\";\nimport { HyperTextRegionModel } from \"../../regions/HyperTextRegion\";\nimport { cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { splitBoundaries } from \"../../utils/html\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * HyperText tag shows an HyperText markup that can be labeled\n * @example\n * <HyperText name=\"text-1\" value=\"$text\" />\n * @name HyperText\n * @param {string} name - name of the element\n * @param {string} value - value of the element\n * @param {boolean} [showLabels=false] - show labels next to the region\n * @param {string} [encoding=none|base64|base64unicode]  - decode value from encoded string\n */\nconst TagAttrs = types.model(\"HyperTextModel\", {\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n\n  highlightcolor: types.maybeNull(types.string),\n  showlabels: types.optional(types.boolean, false),\n\n  encoding: types.optional(types.enumeration([\"none\", \"base64\", \"base64unicode\"]), \"none\"),\n});\n\nconst Model = types\n  .model(\"HyperTextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"hypertext\",\n    regions: types.array(HyperTextRegionModel),\n    _value: types.optional(types.string, \"\"),\n    _update: types.optional(types.number, 1),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(\n            s => s.isSelected && (getType(s).name === \"HyperTextLabelsModel\" || getType(s).name === \"RatingModel\"),\n          )\n        : null;\n    },\n  }))\n  .actions(self => ({\n    needsUpdate() {\n      self._update = self._update + 1;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    createRegion(p) {\n      const r = HyperTextRegionModel.create({\n        pid: p.id,\n        ...p,\n      });\n\n      r._range = p._range;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.getAvailableStates();\n      if (states.length === 0) return;\n\n      const clonedStates = states.map(s => cloneNode(s));\n\n      const r = self.createRegion({ ...range, states: clonedStates });\n\n      return r;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      const { start, startOffset, end, endOffset, text } = obj.value;\n\n      if (fromModel.type === \"textarea\" || fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      const states = restoreNewsnapshot(fromModel);\n      const tree = {\n        pid: obj.id,\n        parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        start: start,\n        end: end,\n        text: text,\n        score: obj.score,\n        readonly: obj.readonly,\n        normalization: obj.normalization,\n        states: [states],\n      };\n\n      states.fromStateJSON(obj);\n\n      self.createRegion(tree);\n\n      self.needsUpdate();\n    },\n  }));\n\nconst HyperTextModel = types.compose(\"HyperTextModel\", RegionsMixin, TagAttrs, Model, ObjectBase);\n\nclass HtxHyperTextView extends Component {\n  render() {\n    const { item, store } = this.props;\n\n    if (!item._value) return null;\n\n    return <HtxHyperTextPieceView store={store} item={item} />;\n  }\n}\n\nclass HyperTextPieceView extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  captureDocumentSelection() {\n    var i,\n      self = this,\n      ranges = [],\n      rangesToIgnore = [],\n      selection = window.getSelection();\n\n    if (selection.isCollapsed) return [];\n\n    for (i = 0; i < selection.rangeCount; i++) {\n      var r = selection.getRangeAt(i);\n\n      if (r.endContainer.nodeName === \"DIV\") {\n        r.setEnd(r.startContainer, r.startContainer.length);\n      }\n\n      try {\n        var normedRange = xpath.fromRange(r, self.myRef.current);\n        splitBoundaries(r);\n\n        normedRange._range = r;\n        normedRange.text = selection.toString();\n\n        // If the new range falls fully outside our this.element, we should\n        // add it back to the document but not return it from this method.\n        if (normedRange === null) {\n          rangesToIgnore.push(r);\n        } else {\n          ranges.push(normedRange);\n        }\n      } catch (err) {}\n    }\n\n    // BrowserRange#normalize() modifies the DOM structure and deselects the\n    // underlying text as a result. So here we remove the selected ranges and\n    // reapply the new ones.\n    selection.removeAllRanges();\n\n    return ranges;\n  }\n\n  onMouseUp(ev) {\n    const item = this.props.item;\n    const states = item.activeStates();\n    if (!states || states.length === 0) return;\n\n    var selectedRanges = this.captureDocumentSelection();\n\n    if (selectedRanges.length === 0) return;\n\n    item._currentSpan = null;\n\n    const htxRange = item.addRegion(selectedRanges[0]);\n    if (htxRange) {\n      const spans = htxRange.createSpans();\n      htxRange.addEventsToSpans(spans);\n    }\n  }\n\n  _handleUpdate() {\n    const root = this.myRef.current;\n    const { item } = this.props;\n\n    item.regions.forEach(function(r) {\n      try {\n        const range = xpath.toRange(r.start, r.startOffset, r.end, r.endOffset, root);\n\n        splitBoundaries(range);\n\n        r._range = range;\n        const spans = r.createSpans();\n        r.addEventsToSpans(spans);\n      } catch (err) {\n        console.log(r);\n      }\n    });\n\n    Array.from(this.myRef.current.getElementsByTagName(\"a\")).forEach(a => {\n      a.addEventListener(\"click\", function(ev) {\n        ev.preventDefault();\n        return false;\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this._handleUpdate();\n  }\n\n  componentDidMount() {\n    this._handleUpdate();\n  }\n\n  render() {\n    const { item, store } = this.props;\n\n    let val = runTemplate(item.value, store.task.dataObj);\n    if (item.encoding === \"base64\") val = atob(val);\n    if (item.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n    return (\n      <ObjectTag item={item}>\n        <div\n          ref={this.myRef}\n          data-update={item._update}\n          style={{ overflow: \"auto\" }}\n          onMouseUp={this.onMouseUp.bind(this)}\n          dangerouslySetInnerHTML={{ __html: val }}\n        />\n      </ObjectTag>\n    );\n  }\n}\n\nconst HtxHyperText = inject(\"store\")(observer(HtxHyperTextView));\nconst HtxHyperTextPieceView = inject(\"store\")(observer(HyperTextPieceView));\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperText);\n\nexport { HyperTextModel, HtxHyperText };\n","import { types } from \"mobx-state-tree\";\n\nconst BaseTool = types.model(\"BaseTool\", {}).actions(self => ({}));\n\nexport const MIN_SIZE = { X: 3, Y: 3 };\n\nexport default BaseTool;\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Slider, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class SliderTool extends Component {\n    render() {\n      return (\n        <Fragment>\n          <Slider\n            defaultValue={this.props.default || 15}\n            max={this.props.max || 50}\n            min={0}\n            vertical\n            tipFormatter={null}\n            style={{ height: this.props.height || 100 }}\n            onChange={this.props.onChange}\n          />\n          <Tooltip title={this.props.title} placement=\"left\">\n            <Button\n              shape=\"circle\"\n              type={this.props.selected ? \"primary\" : \"default\"}\n              className={styles.button}\n              onClick={this.props.onClick}\n            >\n              {this.props.icon}\n            </Button>\n          </Tooltip>\n        </Fragment>\n      );\n    }\n  },\n);\n","import { types, getRoot } from \"mobx-state-tree\";\nimport { cloneNode, restoreNewsnapshot } from \"../core/Helpers\";\n\nconst ToolMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get obj() {\n      return self._manager.obj;\n    },\n\n    get manager() {\n      return self._manager;\n    },\n\n    get control() {\n      return self._control;\n    },\n\n    get completion() {\n      return getRoot(self.control).completionStore.selected;\n    },\n\n    get viewClass() {\n      return null;\n    },\n\n    get clonedStates() {\n      const states = [self.control];\n      const activeStates = states\n        ? states.filter(c => c.isSelected)\n        : // .filter(\n          //   c =>\n          //     c.type === IMAGE_CONSTANTS.rectanglelabels ||\n          //     c.type === IMAGE_CONSTANTS.keypointlabels ||\n          //     c.type === IMAGE_CONSTANTS.polygonlabels ||\n          //     c.type === IMAGE_CONSTANTS.brushlabels,\n          // )\n          null;\n\n      return activeStates ? activeStates.map(s => cloneNode(s)) : null;\n    },\n\n    //\n    moreRegionParams(obj) {},\n\n    // given states try to find a state that can provide a color\n    // params for the region\n    paramsFromStates(states) {\n      const c = self.control;\n      let fillcolor = c.fillcolor;\n      let strokecolor = c.strokecolor;\n\n      if (states && states.length) {\n        const stateProvidesColor = states.find(s => s && s.hasOwnProperty(\"getSelectedColor\"));\n        if (stateProvidesColor) {\n          const color = stateProvidesColor.getSelectedColor();\n          fillcolor = color;\n          strokecolor = color;\n        }\n      }\n\n      return {\n        fillColor: fillcolor,\n        strokeColor: strokecolor,\n      };\n    },\n\n    // clones the current state, dervies params from it (like colors)\n    // and returns that as an object. This method is used to\n    // reconstruct the region and it's labels.\n    get statesAndParams() {\n      const states = self.clonedStates;\n      const params = self.paramsFromStates(states);\n\n      return { states: states, ...params };\n    },\n\n    get getActiveShape() {\n      // active shape here is the last one that was added\n      const obj = self.obj;\n      return obj.regions[obj.regions.length - 1];\n    },\n\n    get getSelectedShape() {\n      return self.control.completion.highlightedNode;\n    },\n  }))\n  .actions(self => ({\n    setSelected(val) {\n      self.selected = val;\n    },\n\n    event(name, ev, args) {\n      const fn = name + \"Ev\";\n      if (typeof self[fn] !== \"undefined\") self[fn].call(self, ev, args);\n    },\n\n    createFromJSON(obj, fromModel) {\n      let r;\n      let states = [];\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      // workaround to prevent perregion textarea from duplicating\n      // during deserialisation\n      if (fm.perregion && fromModel.type === \"textarea\") return;\n\n      const { stateTypes, controlTagTypes } = self.tagTypes;\n\n      if (!fm.perregion && !controlTagTypes.includes(fromModel.type)) return;\n\n      if (obj.type === stateTypes) {\n        states = restoreNewsnapshot(fromModel);\n        if (states.fromStateJSON) {\n          states.fromStateJSON(obj);\n        }\n\n        states = [states];\n      }\n\n      if (controlTagTypes.includes(obj.type)) {\n        const params = self.paramsFromStates(states);\n        const moreParams = self.moreRegionParams(obj);\n        const data = {\n          pid: obj.id,\n          parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n          score: obj.score,\n          readonly: obj.readonly,\n          coordstype: \"perc\",\n          states,\n          ...params,\n          ...obj.value,\n          ...moreParams,\n        };\n\n        r = self.createRegion(data);\n      } else if (fm.perregion) {\n        const m = restoreNewsnapshot(fromModel);\n\n        // [TODO] this is a poor mans findRegion for the image\n        // regions right now. This is based on a idea that\n        // results comming from the same region share the same\n        // id, which might not be the case since it'd a good\n        // practice to have unique ids\n        const { regions } = self.obj;\n        r = regions.find(r => r.pid === obj.id);\n\n        // r = self.findRegion(obj.value);\n\n        if (r) r.states.push(m);\n      }\n\n      return r;\n    },\n\n    fromStateJSON(obj, fromModel) {\n      // tool may not be implementing fromStateJSON at all\n      if (!self.tagTypes) return;\n\n      return self.createFromJSON(obj, fromModel);\n    },\n  }));\n\nexport default ToolMixin;\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\n\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  strokewidth: types.optional(types.string, \"15\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"brush\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      const brush = Tools.Brush.create();\n      const erase = Tools.Erase.create();\n      // const zoom  = Tools.Zoom.create();\n\n      brush._control = self;\n      erase._control = self;\n\n      self.tools = {\n        brush: brush,\n        erase: erase,\n        // zoom: zoom\n      };\n    },\n  }));\n\nconst BrushModel = types.compose(\"BrushModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"brush\", BrushModel, HtxView);\n\nexport { HtxView, BrushModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { BrushModel } from \"./Brush\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * BrushLabels tag creates segmented labeling\n * @example\n * <View>\n *   <BrushLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </BrushLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name BrushLabels\n * @param {string} name   - name of the element\n * @param {string} toName - name of the image to label\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types.model(\"BrushLabelsModel\", {\n  id: types.optional(types.identifier, guidGenerator),\n  pid: types.optional(types.string, guidGenerator),\n  type: \"brushlabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Model = LabelMixin.props({ _type: \"brushlabels\" });\n\nconst BrushLabelsModel = types.compose(\n  \"BrushLabelsModel\",\n  LabelsModel,\n  ModelAttrs,\n  BrushModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst HtxBrushLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"brushlabels\", BrushLabelsModel, HtxBrushLabels);\n\nexport { HtxBrushLabels, BrushLabelsModel };\n","import React, { Fragment } from \"react\";\nimport { Rect, Group, Text, Label, Tag } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../../utils\";\nimport Constants from \"../../core/Constants\";\n\nfunction polytobbox(points) {\n  var lats = [];\n  var lngs = [];\n\n  points.forEach(p => {\n    lats.push(p.x);\n    lngs.push(p.y);\n  });\n\n  // calc the min and max lng and lat\n  var minlat = Math.min.apply(null, lats),\n    maxlat = Math.max.apply(null, lats);\n  var minlng = Math.min.apply(null, lngs),\n    maxlng = Math.max.apply(null, lngs);\n\n  // create a bounding rectangle that can be used in leaflet\n  return [\n    [minlat, maxlat],\n    [minlng, maxlng],\n  ];\n}\n\nconst LabelOnBbox = ({ x, y, text, score, showLabels, showScore, zoomScale }) => {\n  const ss = showScore && score;\n  const scale = 1 / (zoomScale || 1);\n\n  return (\n    <Group strokeScaleEnabled={false} opacity={0.8}>\n      {ss && (\n        <Label x={x} y={y - 20 * scale} scaleX={scale} scaleY={scale}>\n          <Tag fill={Utils.Colors.getScaleGradient(score)} cornerRadius={2} />\n          <Text text={score.toFixed(2)} fontFamily=\"Calibri\" fill=\"white\" padding={2} />\n        </Label>\n      )}\n\n      {showLabels && (\n        <Label x={ss ? x + 34 * scale : x} y={y - 20 * scale} scaleX={scale} scaleY={scale}>\n          <Tag fill={Constants.SHOW_LABEL_BACKGROUND} cornerRadius={2} />\n          <Text text={text} fontFamily=\"Calibri\" fill={Constants.SHOW_LABEL_FILL} padding={2} />\n        </Label>\n      )}\n    </Group>\n  );\n};\n\nconst LabelOnEllipse = observer(({ item }) => {\n  const s = item.states.find(s => s.type === \"ellipselabels\");\n  if (!s || !s.holdsState) return null;\n\n  return (\n    <LabelOnBbox\n      x={item.x}\n      y={item.y}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showLabels}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nconst LabelOnRect = observer(({ item }) => {\n  const s = item.states.find(s => s.type === \"rectanglelabels\");\n  if (!s || !s.holdsState) return null;\n\n  return (\n    <LabelOnBbox\n      x={item.x}\n      y={item.y}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showLabels}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nconst LabelOnPolygon = observer(({ item }) => {\n  const s = item.states.find(s => s.type === \"polygonlabels\");\n  if (!s || !s.holdsState) return null;\n\n  const bbox = polytobbox(item.points);\n  const settings = getRoot(item).settings;\n  return (\n    <Fragment>\n      {settings && (settings.showLabels || settings.showScore) && (\n        <Rect\n          x={bbox[0][0]}\n          y={bbox[1][0]}\n          fillEnabled={false}\n          width={bbox[0][1] - bbox[0][0]}\n          height={bbox[1][1] - bbox[1][0]}\n          stroke={item.strokeColor}\n          strokeWidth={1}\n          strokeScaleEnabled={false}\n          shadowBlur={0}\n        />\n      )}\n      <LabelOnBbox\n        x={bbox[0][0]}\n        y={bbox[1][0] + 2 / item.parent.zoomScale}\n        text={s.getSelectedString(\",\")}\n        score={item.score}\n        showLabels={settings && settings.showLabels}\n        showScore={settings && settings.showScore}\n        zoomScale={item.parent.zoomScale}\n      />\n    </Fragment>\n  );\n});\n\nconst LabelOnMask = observer(({ item }) => {\n  const s = item.states.find(s => s.type === \"brushlabels\");\n  if (!s || !s.holdsState) return null;\n  if (item.touches.length === 0) return null;\n\n  const bbox = polytobbox(item.touches);\n  const settings = getRoot(item).settings;\n\n  return (\n    <Fragment>\n      <Rect\n        x={bbox[0][0]}\n        y={bbox[1][0]}\n        fillEnabled={false}\n        width={bbox[0][1] - bbox[0][0]}\n        height={bbox[1][1] - bbox[1][0]}\n        stroke={item.strokeColor}\n        strokeWidth={1}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n      />\n      <LabelOnBbox\n        x={bbox[0][0]}\n        y={bbox[1][0] + 2 / item.parent.zoomScale}\n        text={s.getSelectedString(\",\")}\n        score={item.score}\n        showLabels={getRoot(item).settings.showLabels}\n        showScore={settings && settings.showScore}\n        zoomScale={item.parent.zoomScale}\n      />\n    </Fragment>\n  );\n});\n\nconst LabelOnKP = observer(({ item }) => {\n  const s = item.states.find(s => s.type === \"keypointlabels\");\n  if (!s || !s.holdsState) return null;\n\n  return (\n    <LabelOnBbox\n      // keypoints' width scaled back to stay always small, so scale it here too\n      x={item.x + (item.width + 2) / item.parent.zoomScale}\n      y={item.y + (item.width + 2) / item.parent.zoomScale}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showScore}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nexport { LabelOnBbox, LabelOnPolygon, LabelOnRect, LabelOnEllipse, LabelOnKP, LabelOnMask };\n","import React, { Fragment } from \"react\";\nimport { Line, Shape, Group } from \"react-konva\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\n\nimport Canvas from \"../utils/canvas\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { BrushLabelsModel } from \"../tags/control/BrushLabels\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnMask } from \"../components/ImageView/LabelOnRegion\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst Points = types\n  .model(\"Points\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: types.optional(types.enumeration([\"add\", \"eraser\"]), \"add\"),\n    points: types.array(types.number),\n    /**\n     * Stroke width\n     */\n    strokeWidth: types.optional(types.number, 25),\n  })\n  .actions(self => ({\n    setType(type) {\n      self.type = type;\n    },\n\n    addPoints(x, y) {\n      self.points.push(x);\n      self.points.push(y);\n    },\n\n    // rescale points to the new width and height from the original\n    rescale(origW, origH, destW, destH) {\n      const s = destW / origW;\n      return self.points.map(p => p * s);\n    },\n\n    scaledStrokeWidth(origW, origH, destW, destH) {\n      const s = destW / origW;\n      return s * self.strokeWidth;\n    },\n  }));\n\n/**\n * Rectangle object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"brushregion\",\n\n    states: types.maybeNull(types.array(types.union(BrushLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n    /**\n     * Higher values will result in a more curvy line. A value of 0 will result in no interpolation.\n     */\n    tension: types.optional(types.number, 1.0),\n    /**\n     * Stroke color\n     */\n    strokeColor: types.optional(types.string, \"red\"),\n\n    /**\n     * Determines node opacity. Can be any number between 0 and 1\n     */\n    opacity: types.optional(types.number, 1),\n    /**\n     * Set scale x\n     */\n    scaleX: types.optional(types.number, 1),\n    /**\n     * Set scale y\n     */\n    scaleY: types.optional(types.number, 1),\n    /**\n     * Points array of brush\n     */\n\n    touches: types.array(Points),\n    currentTouch: types.maybeNull(types.reference(Points)),\n\n    // points: types.array(types.array(types.number)),\n    // eraserpoints: types.array(types.array(types.number)),\n\n    mode: types.optional(types.string, \"brush\"),\n\n    needsUpdate: types.optional(types.number, 1),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // if ()\n      // const newdata = ctx.createImageData(750, 937);\n      // newdata.data.set(decode(item._rle));\n      // const dec = decode(self._rle);\n      // self._rle_image =\n      // item._cached_mask = decode(item._rle);\n      // const newdata = ctx.createImageData(750, 937);\n      //     newdata.data.set(item._cached_mask);\n      //     var img = imagedata_to_image(newdata);\n    },\n\n    addTouch({ type, strokeWidth }) {\n      const p = Points.create({ id: guidGenerator(), type: type, strokeWidth: strokeWidth });\n      self.touches.push(p);\n      self.currentTouch = p;\n\n      return p;\n    },\n\n    afterAttach() {},\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n      self.completion.loadRegionState(self);\n    },\n\n    convertPointsToMask() {},\n\n    updateAppearenceFromState() {\n      const stroke = self.states[0].getSelectedColor();\n      self.strokeColor = stroke;\n    },\n\n    // addPoints(x, y, mode) {\n    //   if (mode) self.mode = \"eraser\";\n    //   self.points.push(x);\n    //   self.points.push(y);\n    // },\n\n    // addEraserPoints(x, y) {\n    //   self.eraserpoints = [...self.eraserpoints, x, y];\n    // },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      if (self.parent.initialWidth > 1 && self.parent.initialHeight > 1) {\n        let ratioX = self.parent.stageWidth / self.parent.initialWidth;\n        let ratioY = self.parent.stageHeight / self.parent.initialHeight;\n\n        self.setScale(ratioX, ratioY);\n\n        self.needsUpdate = self.needsUpdate + 1;\n      }\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    serialize(control, object) {\n      const rle = Canvas.Region2RLE(self, object, {\n        stroke: self.strokeColor,\n        tension: self.tension,\n      });\n\n      const res = {\n        original_width: object.naturalWidth,\n        original_height: object.naturalHeight,\n        value: {\n          format: \"rle\",\n          rle: Array.prototype.slice.call(rle),\n        },\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst BrushRegionModel = types.compose(\"BrushRegionModel\", WithStatesMixin, RegionsMixin, NormalizationMixin, Model);\n\nconst HtxBrushLayer = observer(({ store, item, points }) => {\n  let currentPoints = [];\n  points.points.forEach(point => {\n    currentPoints.push(point);\n  });\n\n  return points.type === \"add\" ? (\n    <HtxBrushAddLine item={item} points={currentPoints} strokeWidth={points.strokeWidth} />\n  ) : (\n    <HtxBrushEraserLine item={item} points={currentPoints} strokeWidth={points.strokeWidth} />\n  );\n});\n\nconst HtxBrushAddLine = observer(({ store, item, points, strokeWidth }) => {\n  let highlightOptions = {\n    shadowColor: \"red\",\n    shadowBlur: 1,\n    shadowOffsetY: 2,\n    shadowOffsetX: 2,\n    shadowOpacity: 1,\n  };\n\n  let highlight = item.highlighted ? highlightOptions : { shadowOpacity: 0 };\n  //        {...highlight}\n\n  return (\n    <Line\n      onMouseDown={e => {\n        e.cancelBubble = false;\n      }}\n      strokeWidth={strokeWidth}\n      points={points}\n      stroke={item.strokeColor}\n      opacity={item.mode === \"brush\" ? item.opacity : 1}\n      globalCompositeOperation={\"source-over\"}\n      tension={item.tension}\n      lineJoin={\"round\"}\n      lineCap=\"round\"\n      {...highlight}\n    />\n  );\n});\n\nconst HtxBrushEraserLine = ({ store, item, points, strokeWidth }) => {\n  return (\n    <Line\n      onMouseDown={e => {\n        e.cancelBubble = false;\n      }}\n      strokeWidth={strokeWidth}\n      points={points}\n      tension={item.tension}\n      lineJoin={\"round\"}\n      lineCap=\"round\"\n      stroke={item.strokeColor}\n      opacity={1}\n      globalCompositeOperation={\"destination-out\"}\n    />\n  );\n};\n\nconst HtxBrushView = ({ store, item }) => {\n  // if (item.parent.stageRef && item._rle) {\n  //     const sref = item.parent.stageRef;\n  //     const ctx = sref.getLayers()[0].getContext(\"2d\");\n  //     const newdata = ctx.createImageData(item.parent.stageWidth, item.parent.stageHeight);\n\n  //     newdata.data.set(decode(item._rle));\n\n  //     // newdata.data.set(RLEdecode(_rle))\n  //     ctx.putImageData(newdata, 0, 0);\n  // }\n\n  let highlightOptions = {\n    shadowColor: \"red\",\n    shadowBlur: 1,\n    shadowOffsetY: 2,\n    shadowOffsetX: 2,\n    shadowOpacity: 1,\n  };\n\n  let highlight = item.highlighted ? highlightOptions : { shadowOpacity: 0 };\n\n  return (\n    <Fragment>\n      <Group\n        attrMy={item.needsUpdate}\n        name=\"segmentation\"\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        // onClick={e => {\n        //     e.cancelBubble = false;\n        // }}\n        // onMouseDown={e => {\n        //     console.log(\"down\");\n        //     e.cancelBubble = false;\n        // }}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            // no tool selected\n            if (!item.parent.getToolsManager().findSelectedTool()) stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n\n          if (!item.parent.getToolsManager().findSelectedTool()) {\n            const stage = item.parent.stageRef;\n            stage.container().style.cursor = \"default\";\n          }\n        }}\n        onClick={e => {\n          if (item.parent.getToolsManager().findSelectedTool()) return;\n\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n      >\n        <Shape\n          sceneFunc={(ctx, shape) => {\n            if (item.parent.naturalWidth === 1) return null;\n\n            if (item._loadedOnce === true) {\n              ctx.drawImage(item._img, 0, 0, item.parent.stageWidth, item.parent.stageHeight);\n              ctx.fillStrokeShape(shape);\n\n              return;\n            }\n\n            if (item._rle) {\n              const img = Canvas.RLE2Region(item._rle, item.parent);\n              item._loadedOnce = true;\n\n              img.onload = function() {\n                ctx.drawImage(img, 0, 0, item.parent.stageWidth, item.parent.stageHeight);\n                ctx.fillStrokeShape(shape);\n              };\n\n              item._img = img;\n            }\n          }}\n          opacity={1}\n          {...highlight}\n        />\n\n        {item.touches.map(p => (\n          <HtxBrushLayer store={store} item={item} points={p} />\n        ))}\n\n        <LabelOnMask item={item} />\n      </Group>\n    </Fragment>\n  );\n};\n\nconst HtxBrush = inject(\"store\")(observer(HtxBrushView));\n\nRegistry.addTag(\"brushregion\", BrushRegionModel, HtxBrush);\n\nexport { BrushRegionModel, HtxBrush };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { HighlightOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport SliderTool from \"../components/Tools/Slider\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { BrushRegionModel } from \"../regions/BrushRegion\";\nimport Canvas from \"../utils/canvas\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <SliderTool\n      selected={item.selected}\n      icon={<HighlightOutlined />}\n      onClick={ev => {\n        const sel = item.selected;\n        item.manager.unselectAll();\n\n        item.setSelected(!sel);\n\n        if (item.selected) {\n          item.updateCursor();\n        }\n      }}\n      onChange={val => {\n        item.setStroke(val);\n        item.updateCursor();\n      }}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({\n    strokeWidth: types.optional(types.number, 10),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n\n    get tagTypes() {\n      return {\n        stateTypes: \"brushlabels\",\n        controlTagTypes: [\"brushlabels\", \"brush\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(json, controlTag) {\n      const region = self.createFromJSON(json, controlTag);\n\n      if (json.value.points) {\n        const p = region.addPoints({ type: \"add\" });\n        p.addPoints(json.value.points);\n      }\n\n      if (json.value.format === \"rle\") {\n        region._rle = json.value.rle;\n      }\n\n      return region;\n    },\n\n    // fromStateJSON(obj, fromModel) {\n    //   if (\"brushlabels\" in obj.value) {\n    //     const states = restoreNewsnapshot(fromModel);\n    //     states.fromStateJSON(obj);\n\n    //     const region = self.createRegion({\n    //       pid: obj.id,\n    //       stroke: states.getSelectedColor(),\n    //       states: states,\n    //       // coordstype: \"px\",\n    //       // points: obj.value.points,\n    //     });\n\n    //     if (obj.value.points) {\n    //       const p = region.addPoints({ type: \"add\" });\n    //       p.addPoints(obj.value.points);\n    //     }\n\n    //     if (obj.value.format === \"rle\") {\n    //       region._rle = obj.value.rle;\n    //     }\n    //   }\n    // },\n\n    createRegion(opts) {\n      const brush = BrushRegionModel.create(opts);\n\n      self.obj.addShape(brush);\n\n      return brush;\n    },\n\n    updateCursor() {\n      const val = self.strokeWidth;\n      const stage = self.obj.stageRef;\n      const base64 = Canvas.brushSizeCircle(val);\n      const cursor = [\"url('\", base64, \"')\", \" \", Math.floor(val / 2) + 4, \" \", Math.floor(val / 2) + 4, \", auto\"];\n\n      stage.container().style.cursor = cursor.join(\"\");\n    },\n\n    setStroke(val) {\n      self.strokeWidth = val;\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const shape = self.getSelectedShape;\n\n      shape.currentTouch.addPoints(Math.floor(x), Math.floor(y));\n    },\n\n    mousedownEv(ev, [x, y]) {\n      const c = self.control;\n      const brush = self.getSelectedShape;\n\n      if (brush) {\n        self.mode = \"drawing\";\n\n        const p = brush.addTouch({\n          type: \"add\",\n          strokeWidth: self.strokeWidth || c.strokeWidth,\n        });\n\n        p.addPoints(Math.floor(x), Math.floor(y));\n      } else {\n        if (c.isSelected) {\n          self.mode = \"drawing\";\n\n          const sap = self.statesAndParams;\n\n          const brush = self.createRegion({\n            x: x,\n            y: y,\n            coordstype: \"px\",\n            ...sap,\n          });\n\n          const p = brush.addTouch({\n            type: \"add\",\n            strokeWidth: self.strokeWidth || c.strokeWidth,\n          });\n\n          p.addPoints(Math.floor(x), Math.floor(y));\n        }\n      }\n    },\n  }));\n\nconst Brush = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Brush };\n","import React, { Component } from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class BasicToolView extends Component {\n    render() {\n      return (\n        <Tooltip title={this.props.tooltip} placement=\"left\">\n          <Button\n            shape=\"circle\"\n            type={this.props.selected ? \"primary\" : \"default\"}\n            disabled={this.props.disabled ? true : false}\n            icon={this.props.icon}\n            className={styles.button}\n            onClick={this.props.onClick}\n          ></Button>\n        </Tooltip>\n      );\n    }\n  },\n);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ScissorOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport BasicTool from \"../components/Tools/Basic\";\nimport ToolMixin from \"../mixins/Tool\";\nimport Canvas from \"../utils/canvas\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <BasicTool\n      selected={item.selected}\n      onClick={ev => {\n        const sel = item.selected;\n\n        item.manager.unselectAll();\n\n        item.setSelected(!sel);\n\n        if (item.selected) {\n          item.updateCursor();\n        }\n      }}\n      icon={<ScissorOutlined />}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({})\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    updateCursor() {\n      const val = 24;\n      const stage = self.obj.stageRef;\n      const base64 = Canvas.brushSizeCircle(val);\n      const cursor = [\"url('\", base64, \"')\", \" \", Math.floor(val / 2) + 4, \" \", Math.floor(val / 2) + 4, \", auto\"];\n\n      stage.container().style.cursor = cursor.join(\"\");\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const shape = self.getSelectedShape;\n      if (shape && shape.type === \"brushregion\") {\n        shape.currentTouch.addPoints(Math.floor(x), Math.floor(y));\n      }\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"drawing\";\n\n      const shape = self.getSelectedShape;\n      if (!shape) return;\n\n      if (shape && shape.type === \"brushregion\") {\n        shape.addTouch({ type: \"eraser\" });\n      }\n    },\n  }));\n\nconst Erase = types.compose(ToolMixin, _Tool, BaseTool);\n\nexport { Erase };\n","import { types } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ControlBase from \"./Base\";\n\n/**\n * KeyPoint tag\n * KeyPoint is used to add a keypoint to an image\n * @example\n * <View>\n *   <KeyPoint name=\"kp-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name KeyPoint\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float=} [opacity=0.9]         - opacity of keypoint\n * @param {string=} [fillColor=#8bad00]  - keypoint fill color\n * @param {number=} [strokeWidth=1]      - width of the stroke\n * @param {string=} [stokeColor=#8bad00] - keypoint stroke color\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.9\"),\n  fillcolor: types.optional(types.string, \"#8bad00\"),\n\n  strokecolor: types.optional(types.string, \"#8bad00\"),\n  strokewidth: types.optional(types.string, \"1\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"keypoint\",\n\n    // tools: types.array(BaseTool)\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return Types.getParentOfTypeString(self, \"Completion\");\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {},\n\n    afterCreate() {\n      const kp = Tools.KeyPoint.create();\n      kp._control = self;\n\n      self.tools = { keypoint: kp };\n    },\n  }));\n\nconst KeyPointModel = types.compose(\"KeyPointModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"keypoint\", KeyPointModel, HtxView);\n\nexport { HtxView, KeyPointModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { KeyPointModel } from \"./KeyPoint\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * KeyPointLabels tag\n * KeyPointLabels tag creates labeled keypoints\n * @example\n * <View>\n *   <KeyPointLabels name=\"kp-1\" toName=\"img-1\">\n *     <Label value=\"Face\" />\n *     <Label value=\"Nose\" />\n *   </KeyPointLabels>\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name KeyPointLabels\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float=} [opacity=0.9]         - opacity of keypoint\n * @param {string=} [fillColor]          - keypoint fill color, default is transparent\n * @param {number=} [strokeWidth=1]      - width of the stroke\n * @param {string=} [stokeColor=#8bad00] - keypoint stroke color\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types\n  .model(\"KeyPointLabelesModel\", {\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n    type: \"keypointlabels\",\n    children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n  }));\n\nconst Model = LabelMixin.props({ _type: \"keypointlabels\" });\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  KeyPointModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst KeyPointLabelsModel = types.compose(\"KeyPointLabelsModel\", Composition);\n\nconst HtxKeyPointLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"keypointlabels\", KeyPointLabelsModel, HtxKeyPointLabels);\n\nexport { HtxKeyPointLabels, KeyPointLabelsModel };\n","import React, { Fragment } from \"react\";\nimport { Circle } from \"react-konva\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { KeyPointLabelsModel } from \"../tags/control/KeyPointLabels\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { LabelOnKP } from \"../components/ImageView/LabelOnRegion\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"keypointregion\",\n\n    x: types.number,\n    y: types.number,\n\n    relativeX: types.optional(types.number, 0),\n    relativeY: types.optional(types.number, 0),\n\n    width: types.number,\n\n    opacity: types.number,\n    fillColor: types.maybeNull(types.string),\n\n    states: types.maybeNull(types.array(types.union(KeyPointLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n  }))\n  .actions(self => ({\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n      self.completion.loadRegionState(self);\n    },\n\n    updateAppearenceFromState() {\n      const stroke = self.states[0].getSelectedColor();\n      self.strokeColor = stroke;\n      self.fillColor = stroke;\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      self.setPosition(p.x, p.y);\n    },\n\n    setPosition(x, y) {\n      self.x = x;\n      self.y = y;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    afterAttach() {\n      if (self.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n      }\n\n      if (self.coordstype === \"px\") {\n        self.relativeX = (self.x / self.parent.stageWidth) * 100;\n        self.relativeY = (self.y / self.parent.stageHeight) * 100;\n      }\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      // self.wp = wp;\n      // self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n      }\n\n      if (!self.completion.sentUserGenerate && self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize(control, object) {\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n\n      const { x, y } = self.rotatePoint(self, degree, false);\n\n      const res = {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n\n        value: {\n          x: (x * 100) / width,\n          y: (y * 100) / height,\n          width: (self.width * 100) / width, //  * (self.scaleX || 1)\n        },\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst KeyPointRegionModel = types.compose(\n  \"KeyPointRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxKeyPointView = ({ store, item }) => {\n  const x = item.x;\n  const y = item.y;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillColor) {\n    props[\"fill\"] = item.fillColor;\n  }\n\n  props[\"stroke\"] = item.strokeColor;\n  props[\"strokeWidth\"] = item.strokeWidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = Constants.HIGHLIGHTED_STROKE_COLOR;\n    props[\"strokeWidth\"] = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  return (\n    <Fragment>\n      <Circle\n        x={x}\n        y={y}\n        radius={item.width}\n        scaleX={1 / item.parent.zoomScale}\n        scaleY={1 / item.parent.zoomScale}\n        name={item.id}\n        onDragEnd={e => {\n          const t = e.target;\n          item.setPosition(t.getAttr(\"x\"), t.getAttr(\"y\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          const r = item.parent.stageWidth;\n          const b = item.parent.stageHeight;\n\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable={item.editable}\n      />\n      <LabelOnKP item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxKeyPoint = inject(\"store\")(observer(HtxKeyPointView));\n\nRegistry.addTag(\"keypointregion\", KeyPointRegionModel, HtxKeyPoint);\n\nexport { KeyPointRegionModel, HtxKeyPoint };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { KeyPointRegionModel } from \"../regions/KeyPointRegion\";\n\nconst _Tool = types\n  .model({\n    default: types.optional(types.boolean, true),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"keypointlabels\",\n        controlTagTypes: [\"keypointlabels\", \"keypoint\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const image = self.obj;\n      const c = self.control;\n\n      const kp = KeyPointRegionModel.create({\n        opacity: parseFloat(c.opacity),\n        ...opts,\n      });\n\n      image.addShape(kp);\n\n      return kp;\n    },\n\n    clickEv(ev, [x, y]) {\n      const c = self.control;\n      if (c.type === \"keypointlabels\" && !c.isSelected) return;\n\n      if (!self.obj.checkLabels()) return;\n\n      const sap = self.statesAndParams;\n\n      self.createRegion({\n        x: x,\n        y: y,\n        width: Number(c.strokewidth),\n        coordstype: \"px\",\n        ...sap,\n      });\n\n      self.obj.completion.highlightedNode.unselectRegion(true);\n      // if (self.control.type === \"keypointlabels\") self.control.unselectAll();\n    },\n  }));\n\nconst KeyPoint = types.compose(ToolMixin, BaseTool, _Tool);\n\n// Registry.addTool(\"keypoint\", KeyPoint);\n\nexport { KeyPoint };\n","import { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\n\n/**\n * Polygon tag\n * Polygon is used to add polygons to an image\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Polygon\n * @param {string} name                           - name of tag\n * @param {string} toname                         - name of image to label\n * @param {number} [opacity=0.6]                  - opacity of polygon\n * @param {string} [fillColor]                    - rectangle fill color, default is transparent\n * @param {string} [strokeColor]                  - stroke color\n * @param {number} [strokeWidth=1]                - width of stroke\n * @param {small|medium|large} [pointSize=medium] - size of polygon handle points\n * @param {rectangle|circle} [pointStyle=circle]  - style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.optional(types.string, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"3\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"small\"),\n  pointstyle: types.optional(types.string, \"circle\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON() {},\n\n    afterCreate() {\n      const poly = Tools.Polygon.create();\n      const floodFill = Tools.FloodFill.create();\n\n      poly._control = self;\n      floodFill._control = self;\n\n      self.tools = {\n        poly: poly,\n        // floodfill: floodFill,\n      };\n    },\n  }));\n\nconst PolygonModel = types.compose(\"PolygonModel\", ControlBase, TagAttrs, Model);\n\nconst HtxView = inject(\"store\")(\n  observer(({ store, item }) => {\n    return null;\n  }),\n);\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\" />\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\" />\n *     <Label value=\"Sign\" />\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name                             - name of tag\n * @param {string} toName                           - name of image to label\n * @param {number} [opacity=0.6]                    - opacity of polygon\n * @param {string} [fillColor]                      - rectangle fill color, default is transparent\n * @param {string} [strokeColor]                    - stroke color\n * @param {number} [strokeWidth=1]                  - width of stroke\n * @param {small|medium|large} [pointSize=medium]   - size of polygon handle points\n * @param {rectangle|circle} [pointStyle=rectangle] - style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types.model(\"PolygonLabelsModel\", {\n  id: types.optional(types.identifier, guidGenerator),\n  pid: types.optional(types.string, guidGenerator),\n  type: \"polygonlabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Model = LabelMixin.props({ _type: \"polygonlabels\" });\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  PolygonModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst PolygonLabelsModel = types.compose(\"PolygonLabelsModel\", Composition);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React from \"react\";\nimport { Rect, Circle } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getParent, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst PolygonPoint = types\n  .model(\"PolygonPoint\", {\n    id: types.optional(types.identifier, guidGenerator),\n\n    relativeX: types.optional(types.number, 0),\n    relativeY: types.optional(types.number, 0),\n\n    initX: types.optional(types.number, 0),\n    initY: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    index: types.number,\n\n    selected: types.optional(types.boolean, false),\n\n    style: types.string,\n    size: types.string,\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Triggered after create model\n     */\n    afterCreate() {\n      self.initX = self.x;\n      self.initY = self.y;\n\n      if (self.parent.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n      } else {\n        self.relativeX = (self.x / self.parent.parent.stageWidth) * 100;\n        self.relativeY = (self.y / self.parent.parent.stageHeight) * 100;\n      }\n    },\n\n    /**\n     * External function for Polygon Parent\n     * @param {number} x\n     * @param {number} y\n     */\n\n    movePoint(offsetX, offsetY) {\n      self.initX = self.initX + offsetX;\n      self.initY = self.initY + offsetY;\n      self.x = self.x + offsetX;\n      self.y = self.y + offsetY;\n\n      self.relativeX = (self.x / self.parent.parent.stageWidth) * 100;\n      self.relativeY = (self.y / self.parent.parent.stageHeight) * 100;\n    },\n\n    _movePoint(x, y) {\n      self.initX = x;\n      self.initY = y;\n\n      self.relativeX = (x / self.parent.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.parent.stageHeight) * 100;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    /**\n     * Close polygon\n     * @param {*} ev\n     */\n    closeStartPoint(ev) {\n      if (!self.completion.editable) return;\n\n      if (self.parent.mouseOverStartPoint) {\n        self.parent.closePoly();\n      }\n    },\n\n    handleMouseOverStartPoint(ev) {\n      const stage = self.parent.parent.stageRef;\n\n      stage.container().style.cursor = \"crosshair\";\n\n      /**\n       * Check if polygon > 2 points and closed point\n       */\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const startPoint = ev.target;\n\n      if (self.style === \"rectangle\") {\n        startPoint.setX(startPoint.x() - startPoint.width() / 2);\n        startPoint.setY(startPoint.y() - startPoint.height() / 2);\n      }\n\n      const scaleMap = {\n        small: 2,\n        medium: 3,\n        large: 4,\n      };\n\n      const scale = scaleMap[self.size];\n\n      startPoint.scale({\n        x: scale / self.parent.parent.zoomScale,\n        y: scale / self.parent.parent.zoomScale,\n      });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent.stageRef;\n      stage.container().style.cursor = \"default\";\n\n      if (self.style === \"rectangle\") {\n        t.setX(t.x() + t.width() / 2);\n        t.setY(t.y() + t.height() / 2);\n      }\n\n      t.scale({\n        x: 1 / self.parent.parent.zoomScale,\n        y: 1 / self.parent.parent.zoomScale,\n      });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, name }) => {\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    item.index === 0\n      ? {\n          hitStrokeWidth: 12,\n          fill: item.parent.strokeColor ? item.parent.strokeColor : item.primary,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n          onClick: item.closeStartPoint,\n        }\n      : null;\n\n  const dragOpts = {\n    onDragMove: e => {\n      let { x, y } = e.target.attrs;\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > item.parent.parent.stageWidth) x = item.parent.parent.stageWidth;\n      if (y > item.parent.parent.stageHeight) y = item.parent.parent.stageHeight;\n\n      item._movePoint(x, y);\n    },\n\n    onDragEnd: e => {\n      e.cancelBubble = true;\n    },\n\n    onMouseOver: e => {\n      const stage = item.parent.parent.stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent.stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  const fill = item.selected ? \"green\" : \"white\";\n\n  if (item.style === \"circle\") {\n    return (\n      <Circle\n        key={name}\n        name={name}\n        x={item.x}\n        y={item.y}\n        radius={w}\n        fill={fill}\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        strokeScaleEnabled={false}\n        scaleX={1 / (item.parent.parent.zoomScale || 1)}\n        scaleY={1 / (item.parent.parent.zoomScale || 1)}\n        onClick={ev => {\n          if (item.parent.mouseOverStartPoint) {\n            item.parent.closePoly();\n          } else {\n            // ev.evt.preventDefault();\n            // ev.cancelBubble = true;\n            item.parent.setSelectedPoint(item);\n          }\n        }}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable={item.parent.editable}\n      />\n    );\n  } else {\n    return (\n      <Rect\n        name={name}\n        key={name}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill={fill}\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable={item.parent.editable}\n      />\n    );\n  }\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import Konva from \"konva\";\nimport React from \"react\";\nimport { Group, Line } from \"react-konva\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, destroy, detach } from \"mobx-state-tree\";\n\nimport Constants from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnPolygon } from \"../components/ImageView/LabelOnRegion\";\nimport { PolygonLabelsModel } from \"../tags/control/PolygonLabels\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\nimport { green } from \"@ant-design/colors\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonregion\",\n\n    opacity: types.number,\n    fillColor: types.maybeNull(types.string),\n\n    strokeWidth: types.number,\n    strokeColor: types.string,\n\n    pointSize: types.string,\n    pointStyle: types.string,\n\n    closed: types.optional(types.boolean, false),\n\n    points: types.array(PolygonPoint, []),\n\n    states: types.maybeNull(types.array(types.union(PolygonLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n\n    mouseOverStartPoint: types.optional(types.boolean, false),\n\n    selectedPoint: types.maybeNull(types.safeReference(PolygonPoint)),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n\n    fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n  }))\n  .actions(self => ({\n    /**\n     * @todo excess method; better to handle click only on start point\n     * Handler for mouse on start point of Polygon\n     * @param {boolean} val\n     */\n    setMouseOverStartPoint(value) {\n      self.mouseOverStartPoint = value;\n    },\n\n    // @todo not used\n    setSelectedPoint(point) {\n      if (self.selectedPoint) {\n        self.selectedPoint.selected = false;\n      }\n\n      point.selected = true;\n      self.selectedPoint = point;\n    },\n\n    handleMouseMove({ e, flattenedPoints }) {\n      const { offsetX, offsetY } = e.evt;\n      const [cursorX, cursorY] = self.parent.fixZoomedCoords([offsetX, offsetY]);\n      const [x, y] = getAnchorPoint({ flattenedPoints, cursorX, cursorY });\n\n      const group = e.currentTarget;\n      const layer = e.currentTarget.getLayer();\n      const zoom = self.parent.zoomScale;\n\n      moveHoverAnchor({ point: [x, y], group, layer, zoom });\n    },\n\n    handleMouseLeave({ e }) {\n      removeHoverAnchor({ layer: e.currentTarget.getLayer() });\n    },\n\n    handleLineClick({ e, flattenedPoints, insertIdx }) {\n      e.cancelBubble = true;\n\n      if (!self.closed || !self.selected) return;\n\n      removeHoverAnchor({ layer: e.currentTarget.getLayer() });\n\n      const { offsetX, offsetY } = e.evt;\n      const [cursorX, cursorY] = self.parent.fixZoomedCoords([offsetX, offsetY]);\n      const point = getAnchorPoint({ flattenedPoints, cursorX, cursorY });\n\n      self.insertPoint(insertIdx, point[0], point[1]);\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = {\n        id: guidGenerator(),\n        x: x,\n        y: y,\n        size: self.pointSize,\n        style: self.pointStyle,\n        index: self.points.length,\n      };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({\n        id: guidGenerator(),\n        x: x,\n        y: y,\n        size: self.pointSize,\n        style: self.pointStyle,\n        index: self.points.length,\n      });\n    },\n\n    // only px coordtype here\n    rotate(degree = -90) {\n      self.points.forEach(point => {\n        const p = self.rotatePoint(point, degree);\n        point._movePoint(p.x, p.y);\n      });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x, y };\n\n      var r = 50;\n      var dist_points = (p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2;\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    destroyRegion() {\n      detach(self.points);\n      destroy(self.points);\n    },\n\n    afterUnselectRegion() {\n      if (self.selectedPoint) {\n        self.selectedPoint.selected = false;\n      }\n\n      // self.points.forEach(p => p.computeOffset());\n    },\n\n    updateAppearenceFromState() {\n      const stroke = self.states[0].getSelectedColor();\n      self.strokeColor = stroke;\n      self.fillColor = stroke;\n    },\n\n    selectRegion() {\n      if (self.parent.selected) {\n        self.parent.selected.closed = true;\n      }\n      // self.points.forEach(p => p.computeOffset());\n\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n\n      self.completion.loadRegionState(self);\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateOffset() {\n      self.points.map(p => p.computeOffset());\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      if (self.coordstype === \"px\") {\n        self.points.forEach(p => {\n          const x = (sw * p.relativeX) / 100;\n          const y = (sh * p.relativeY) / 100;\n\n          p._movePoint(x, y);\n        });\n      }\n\n      if (!self.completion.sentUserGenerate && self.coordstype === \"perc\") {\n        self.points.forEach(p => {\n          const x = (sw * p.x) / 100;\n          const y = (sh * p.y) / 100;\n          self.coordstype = \"px\";\n          p._movePoint(x, y);\n        });\n      }\n    },\n\n    serialize(control, object) {\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n\n      const perc_points = self.points.map(p => {\n        const normalized = self.rotatePoint(p, degree, false);\n        const res_w = (normalized.x * 100) / width;\n        const res_h = (normalized.y * 100) / height;\n\n        return [res_w, res_h];\n      });\n\n      let res = {\n        value: {\n          points: perc_points,\n        },\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Get coordinates of anchor point\n * @param {array} flattenedPoints\n * @param {number} cursorX coordinates of cursor X\n * @param {number} cursorY coordinates of cursor Y\n */\nfunction getAnchorPoint({ flattenedPoints, cursorX, cursorY }) {\n  const [point1X, point1Y, point2X, point2Y] = flattenedPoints;\n  const y =\n    ((point2X - point1X) * (point2X * point1Y - point1X * point2Y) +\n      (point2X - point1X) * (point2Y - point1Y) * cursorX +\n      (point2Y - point1Y) * (point2Y - point1Y) * cursorY) /\n    ((point2Y - point1Y) * (point2Y - point1Y) + (point2X - point1X) * (point2X - point1X));\n  const x =\n    cursorX -\n    ((point2Y - point1Y) *\n      (point2X * point1Y - point1X * point2Y + cursorX * (point2Y - point1Y) - cursorY * (point2X - point1X))) /\n      ((point2Y - point1Y) * (point2Y - point1Y) + (point2X - point1X) * (point2X - point1X));\n\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p.x, p.y]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nfunction getHoverAnchor({ layer }) {\n  return layer.findOne(\".hoverAnchor\");\n}\n\n/**\n * Create new anchor for current polygon\n */\nfunction createHoverAnchor({ point, group, layer, zoom }) {\n  const hoverAnchor = new Konva.Circle({\n    name: \"hoverAnchor\",\n    x: point[0],\n    y: point[1],\n    stroke: green.primary,\n    fill: green[0],\n    scaleX: 1 / (zoom || 1),\n    scaleY: 1 / (zoom || 1),\n\n    strokeWidth: 2,\n    radius: 5,\n  });\n\n  group.add(hoverAnchor);\n  layer.draw();\n  return hoverAnchor;\n}\n\nfunction moveHoverAnchor({ point, group, layer, zoom }) {\n  const hoverAnchor = getHoverAnchor({ layer }) || createHoverAnchor({ point, group, layer, zoom });\n  hoverAnchor.to({ x: point[0], y: point[1], duration: 0 });\n}\n\nfunction removeHoverAnchor({ layer }) {\n  const hoverAnchor = getHoverAnchor({ layer });\n  if (!hoverAnchor) return;\n  hoverAnchor.destroy();\n  layer.draw();\n}\n\nconst HtxPolygonView = ({ store, item }) => {\n  /**\n   * Render line between 2 points\n   */\n  function renderLine({ points, idx1, idx2 }) {\n    const name = `border_${idx1}_${idx2}`;\n    let { strokeColor, strokeWidth } = item;\n\n    if (item.highlighted) {\n      strokeColor = Constants.HIGHLIGHTED_STROKE_COLOR;\n      strokeWidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n    }\n\n    if (!item.closed && idx2 === 0) return null;\n\n    const insertIdx = idx1 + 1; // idx1 + 1 or idx2\n    const flattenedPoints = getFlattenedPoints([points[idx1], points[idx2]]);\n    return (\n      <Group\n        key={name}\n        name={name}\n        onClick={e => item.handleLineClick({ e, flattenedPoints, insertIdx })}\n        onMouseMove={e => {\n          if (!item.closed || !item.selected || !item.editable) return;\n\n          item.handleMouseMove({ e, flattenedPoints });\n        }}\n        onMouseLeave={e => item.handleMouseLeave({ e })}\n      >\n        <Line\n          points={flattenedPoints}\n          stroke={strokeColor}\n          opacity={item.opacity}\n          lineJoin=\"bevel\"\n          strokeWidth={strokeWidth}\n          strokeScaleEnabled={false}\n        />\n      </Group>\n    );\n  }\n\n  function renderLines(points) {\n    const name = \"borders\";\n    return (\n      <Group key={name} name={name}>\n        {points.map((p, idx) => {\n          const idx1 = idx;\n          const idx2 = idx === points.length - 1 ? 0 : idx + 1;\n          return renderLine({ points, idx1, idx2 });\n        })}\n      </Group>\n    );\n  }\n\n  function renderPoly(points) {\n    const name = \"poly\";\n    return (\n      <Group key={name} name={name}>\n        <Line\n          lineJoin=\"bevel\"\n          points={getFlattenedPoints(points)}\n          fill={item.strokeColor}\n          closed={true}\n          opacity={0.2}\n        />\n      </Group>\n    );\n  }\n\n  function renderCircle({ points, idx }) {\n    const name = `anchor_${points.length}_${idx}`;\n    const point = points[idx];\n\n    if (!item.closed || (item.closed && item.selected)) {\n      return <PolygonPointView item={point} name={name} key={name} />;\n    }\n  }\n\n  function renderCircles(points) {\n    const name = \"anchors\";\n    return (\n      <Group key={name} name={name}>\n        {points.map((p, idx) => renderCircle({ points, idx }))}\n      </Group>\n    );\n  }\n\n  function minMax(items) {\n    return items.reduce((acc, val) => {\n      acc[0] = acc[0] === undefined || val < acc[0] ? val : acc[0];\n      acc[1] = acc[1] === undefined || val > acc[1] ? val : acc[1];\n      return acc;\n    }, []);\n  }\n\n  let minX = 0,\n    maxX = 0,\n    minY = 0,\n    maxY = 0;\n\n  return (\n    <Group\n      key={item.id ? item.id : guidGenerator(5)}\n      onDragStart={e => {\n        item.completion.setDragMode(true);\n\n        var arrX = item.points.map(p => p.x);\n        var arrY = item.points.map(p => p.y);\n\n        [minX, maxX] = minMax(arrX);\n        [minY, maxY] = minMax(arrY);\n      }}\n      dragBoundFunc={item.parent.fixForZoom(pos => {\n        let { x, y } = pos;\n\n        const sw = item.parent.stageWidth;\n        const sh = item.parent.stageHeight;\n\n        if (minY + y < 0) y = -1 * minY;\n        if (minX + x < 0) x = -1 * minX;\n        if (maxY + y > sh) y = sh - maxY;\n        if (maxX + x > sw) x = sw - maxX;\n\n        return { x: x, y: y };\n      })}\n      onDragEnd={e => {\n        const t = e.target;\n\n        item.completion.setDragMode(false);\n        if (!item.closed) item.closePoly();\n\n        item.points.forEach(p => p.movePoint(t.getAttr(\"x\"), t.getAttr(\"y\")));\n\n        t.setAttr(\"x\", 0);\n        t.setAttr(\"y\", 0);\n      }}\n      onMouseOver={e => {\n        const stage = item.parent.stageRef;\n\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n          stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n        } else {\n          stage.container().style.cursor = Constants.POINTER_CURSOR;\n        }\n      }}\n      onMouseOut={e => {\n        const stage = item.parent.stageRef;\n        stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n      onClick={e => {\n        e.cancelBubble = true;\n\n        // if (!item.editable) return;\n\n        if (!item.closed) return;\n\n        const stage = item.parent.stageRef;\n\n        if (store.completionStore.selected.relationMode) {\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n        }\n\n        item.setHighlight(false);\n        item.onClickRegion();\n      }}\n      draggable={item.editable}\n    >\n      {item.mouseOverStartPoint}\n\n      {item.points && item.closed ? renderPoly(item.points) : null}\n      {item.points ? renderLines(item.points) : null}\n      {item.points ? renderCircles(item.points) : null}\n\n      <LabelOnPolygon item={item} />\n    </Group>\n  );\n};\n\nconst HtxPolygon = inject(\"store\")(observer(HtxPolygonView));\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { PolygonRegionModel } from \"../regions/PolygonRegion\";\n\nconst _Tool = types\n  .model({\n    default: types.optional(types.boolean, true),\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\", \"brush\", \"eraser\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get getActivePolygon() {\n      const poly = self.getActiveShape;\n\n      if (poly && poly.closed) return null;\n      if (poly === undefined) return null;\n      if (poly.type !== \"polygonregion\") return null;\n\n      return poly;\n    },\n\n    get tagTypes() {\n      return {\n        stateTypes: \"polygonlabels\",\n        controlTagTypes: [\"polygonlabels\", \"polygon\"],\n      };\n    },\n\n    moreRegionParams(obj) {\n      return {\n        x: obj.value.points[0][0],\n        y: obj.value.points[0][1],\n      };\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, controlTag) {\n      const poly = self.createFromJSON(obj, controlTag);\n      if (poly) {\n        for (var i = 1; i < obj.value.points.length; i++) {\n          poly.addPoint(obj.value.points[i][0], obj.value.points[i][1]);\n        }\n\n        poly.closePoly();\n      }\n    },\n\n    createRegion(opts) {\n      let newPolygon = self.getActivePolygon;\n      // self.freezeHistory();\n      const image = self.obj;\n      const c = self.control;\n\n      delete opts[\"points\"];\n\n      if (!newPolygon) {\n        newPolygon = PolygonRegionModel.create({\n          opacity: Number(c.opacity),\n          strokeWidth: Number(c.strokewidth),\n          fillOpacity: Number(c.fillopacity),\n          pointSize: c.pointsize,\n          pointStyle: c.pointstyle,\n          ...opts,\n        });\n\n        image.addShape(newPolygon);\n      }\n\n      newPolygon.addPoint(opts.x, opts.y);\n\n      return newPolygon;\n    },\n\n    clickEv(ev, [x, y]) {\n      if (self.control.type === \"polygonlabels\") if (!self.control.isSelected && self.getActivePolygon === null) return;\n\n      if (!self.getActivePolygon && !self.obj.checkLabels()) return;\n\n      const sap = self.statesAndParams;\n\n      // if there is a polygon in process of creation right now, but\n      // the user has clicked on the labels without first finishing\n      // it, we close it automatically and create a new one with new\n      // labels\n\n      // if (states.length && self.getActivePolygon) {\n      //   self.getActivePolygon.closePoly();\n      // }\n\n      self.createRegion({\n        x: x,\n        y: y,\n        width: 10,\n        coordstype: \"px\",\n        ...sap,\n      });\n\n      // if (self.control.type == \"polygonlabels\") self.control.unselectAll();\n    },\n  }));\n\nconst Polygon = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Polygon };\n\n// ImageTools.addTool(PolygonTool);\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\n\n/**\n * Rectangle\n * Rectangle is used to add rectangle (Bounding Box) to an image\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Rectangle\n * @param {string} name                   - name of the element\n * @param {string} toName                 - name of the image to label\n * @param {float=} [opacity=0.6]          - opacity of rectangle\n * @param {string=} [fillColor]           - rectangle fill color, default is transparent\n * @param {string=} [strokeColor=#f48a42] - stroke color\n * @param {number=} [strokeWidth=1]       - width of the stroke\n * @param {boolean=} [canRotate=true]     - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.optional(types.string, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n  fillopacity: types.optional(types.string, \"0.6\"),\n\n  canrotate: types.optional(types.boolean, true),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON() {},\n\n    afterCreate() {\n      const rect = Tools.Rect.create({ activeShape: null });\n      rect._control = self;\n\n      self.tools = { rect: rect };\n    },\n  }));\n\nconst RectangleModel = types.compose(\"RectangleModel\", ControlBase, TagAttrs, Model);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * RectangleLabels tag creates labeled rectangles\n * Used only for Image\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name RectangleLabels\n * @param {string} name              - name of the element\n * @param {string} toName            - name of the image to label\n * @param {float} [opacity=0.6]      - opacity of rectangle\n * @param {string} [fillColor]       - rectangle fill color, default is transparent\n * @param {string} [strokeColor]     - stroke color\n * @param {number} [strokeWidth=1]   - width of stroke\n * @param {boolean} [canRotate=true] - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types.model(\"RectangleLabelsModel\", {\n  id: types.optional(types.identifier, guidGenerator),\n  pid: types.optional(types.string, guidGenerator),\n  type: \"rectanglelabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Model = LabelMixin.props({ _type: \"rectanglelabels\" });\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  RectangleModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst RectangleLabelsModel = types.compose(\"RectangleLabelsModel\", Composition);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React, { Fragment } from \"react\";\nimport { Rect } from \"react-konva\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getParent, getRoot } from \"mobx-state-tree\";\n\nimport Constants from \"../core/Constants\";\nimport DisabledMixin from \"../mixins/Normalization\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnRect } from \"../components/ImageView/LabelOnRegion\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { RectangleLabelsModel } from \"../tags/control/RectangleLabels\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { guidGenerator } from \"../core/Helpers\";\n\n/**\n * Rectangle object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectangleregion\",\n\n    x: types.number,\n    y: types.number,\n\n    relativeX: types.optional(types.number, 0),\n    relativeY: types.optional(types.number, 0),\n\n    relativeWidth: types.optional(types.number, 0),\n    relativeHeight: types.optional(types.number, 0),\n\n    startX: types.optional(types.number, 0),\n    startY: types.optional(types.number, 0),\n\n    width: types.number,\n    height: types.number,\n\n    // @todo not used\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n\n    fill: types.optional(types.boolean, true),\n    fillColor: types.optional(types.string, Constants.FILL_COLOR),\n    fillOpacity: types.optional(types.number, 0.6),\n\n    strokeColor: types.optional(types.string, Constants.STROKE_COLOR),\n    strokeWidth: types.optional(types.number, Constants.STROKE_WIDTH),\n\n    states: types.maybeNull(types.array(types.union(RectangleLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n\n    supportsTransform: true,\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.startX = self.x;\n      self.startY = self.y;\n\n      if (self.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n        self.relativeWidth = self.width;\n        self.relativeHeight = self.height;\n      }\n\n      self.updateAppearenceFromState();\n    },\n\n    updateAppearenceFromState() {\n      if (self.states && self.states.length) {\n        const stroke = self.states[0].getSelectedColor();\n        self.strokeColor = stroke;\n        self.fillColor = stroke;\n      }\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      if (degree === -90) p.y -= self.width;\n      if (degree === 90) p.x -= self.height;\n      self.setPosition(p.x, p.y, self.height, self.width, self.rotation);\n    },\n\n    // @todo not used\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n\n      self.completion.loadRegionState(self);\n    },\n\n    /**\n     * Boundg Box set position on canvas\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} rotation\n     */\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n\n      self.relativeWidth = (width / self.parent.stageWidth) * 100;\n      self.relativeHeight = (height / self.parent.stageHeight) * 100;\n\n      self.rotation = (rotation + 360) % 360;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n        self.width = (sw * self.relativeWidth) / 100;\n        self.height = (sh * self.relativeHeight) / 100;\n      } else if (self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize(control, object) {\n      const value = control.serializableValue;\n      if (!value) return null;\n\n      const degree = (360 - self.parent.rotation) % 360;\n      let { x, y } = self.rotatePoint(self, degree, false);\n      if (degree === 270) y -= self.width;\n      if (degree === 90) x -= self.height;\n      if (degree === 180) {\n        x -= self.width;\n        y -= self.height;\n      }\n\n      const natural = self.rotateDimensions({ width: object.naturalWidth, height: object.naturalHeight }, degree);\n      const stage = self.rotateDimensions({ width: object.stageWidth, height: object.stageHeight }, degree);\n      const { width, height } = self.rotateDimensions(\n        {\n          width: (self.width * (self.scaleX || 1) * 100) / object.stageWidth, //  * (self.scaleX || 1)\n          height: (self.height * (self.scaleY || 1) * 100) / object.stageHeight,\n        },\n        degree,\n      );\n\n      return {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n        value: {\n          x: (x * 100) / stage.width,\n          y: (y * 100) / stage.height,\n          width,\n          height,\n          rotation: self.rotation,\n          ...value,\n        },\n      };\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  DisabledMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ store, item }) => {\n  let { strokeColor, strokeWidth } = item;\n  if (item.highlighted) {\n    strokeColor = Constants.HIGHLIGHTED_STROKE_COLOR;\n    strokeWidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  if (item.hidden) return null;\n\n  return (\n    <Fragment>\n      <Rect\n        x={item.x}\n        y={item.y}\n        width={item.width}\n        height={item.height}\n        fill={item.fill ? Utils.Colors.convertToRGBA(item.fillColor, item.fillOpacity) : null}\n        stroke={strokeColor}\n        strokeWidth={strokeWidth}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        opacity={item.opacity}\n        rotation={item.rotation}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\") * t.getAttr(\"scaleX\"),\n            t.getAttr(\"height\") * t.getAttr(\"scaleY\"),\n            t.getAttr(\"rotation\"),\n          );\n\n          t.setAttr(\"scaleX\", 1);\n          t.setAttr(\"scaleY\", 1);\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          let { x, y } = pos;\n          let { stageHeight, stageWidth } = getParent(item, 2);\n\n          if (x <= 0) {\n            x = 0;\n          } else if (x + item.width >= stageWidth) {\n            x = stageWidth - item.width;\n          }\n\n          if (y < 0) {\n            y = 0;\n          } else if (y + item.height >= stageHeight) {\n            y = stageHeight - item.height;\n          }\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n          } else {\n            stage.container().style.cursor = Constants.POINTER_CURSOR;\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        draggable={item.editable}\n      />\n      <LabelOnRect item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = inject(\"store\")(observer(HtxRectangleView));\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\n\nexport { RectRegionModel, HtxRectangle };\n","import { types } from \"mobx-state-tree\";\n\nimport Utils from \"../utils\";\nimport throttle from \"lodash.throttle\";\n\nconst DrawingTool = types.model(\"DrawingTool\").actions(self => ({\n  updateDraw: throttle(function(x, y) {\n    const shape = self.getActiveShape;\n    const { stageWidth, stageHeight } = self.obj;\n\n    let { x1, y1, x2, y2 } = Utils.Image.reverseCoordinates({ x: shape.startX, y: shape.startY }, { x, y });\n\n    x1 = Math.max(0, x1);\n    y1 = Math.max(0, y1);\n    x2 = Math.min(stageWidth, x2);\n    y2 = Math.min(stageHeight, y2);\n\n    shape.setPosition(x1, y1, x2 - x1, y2 - y1, shape.rotation);\n  }, 48), // 3 frames, optimized enough and not laggy yet\n}));\n\nexport { DrawingTool };\n","import { types, destroy } from \"mobx-state-tree\";\n\nimport BaseTool, { MIN_SIZE } from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { RectRegionModel } from \"../regions/RectRegion\";\nimport { DrawingTool } from \"../mixins/DrawingTool\";\n\nconst _Tool = types\n  .model({\n    default: true,\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\", \"brush\", \"eraser\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"rectanglelabels\",\n        controlTagTypes: [\"rectanglelabels\", \"rectangle\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const c = self.control;\n      const rect = RectRegionModel.create({\n        opacity: parseFloat(c.opacity),\n        strokeWidth: Number(c.strokewidth),\n        fillOpacity: Number(c.fillopacity),\n        ...opts,\n      });\n\n      self.obj.addShape(rect);\n\n      return rect;\n    },\n\n    mousedownEv(ev, [x, y]) {\n      if (self.control.type === \"rectanglelabels\" && !self.control.isSelected) return;\n\n      if (!self.obj.checkLabels()) return;\n\n      self.mode = \"drawing\";\n\n      const sap = self.statesAndParams;\n\n      const rect = self.createRegion({\n        x: x,\n        y: y,\n        height: 1,\n        width: 1,\n        coordstype: \"px\",\n        ...sap,\n      });\n\n      // if (self.control.type === \"rectanglelabels\") self.control.unselectAll();\n\n      return rect;\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      self.updateDraw(x, y);\n    },\n\n    mouseupEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const s = self.getActiveShape;\n\n      if (s.width < MIN_SIZE.X || s.height < MIN_SIZE.Y) {\n        destroy(s);\n        if (self.control.type === \"rectanglelabels\") self.control.unselectAll();\n      } else {\n        self.obj.completion.highlightedNode.unselectRegion(true);\n      }\n\n      self.mode = \"viewing\";\n    },\n  }));\n\nconst Rect = types.compose(ToolMixin, BaseTool, DrawingTool, _Tool);\n\nexport { Rect };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\n\n/**\n * Ellipse\n * Ellipse is used to add ellipse (elleptic Bounding Box) to an image\n * @example\n * <View>\n *   <Ellipse name=\"ellipse1-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Ellipse\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float} [opacity=0.6]          - opacity of ellipse\n * @param {string} [fillColor]           - rectangle fill color, default is transparent\n * @param {string} [strokeColor=#f48a42] - stroke color\n * @param {number} [strokeWidth=1]       - width of the stroke\n * @param {boolean} [canRotate=true]     - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.optional(types.string, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n  fillopacity: types.optional(types.string, \"0.6\"),\n\n  canrotate: types.optional(types.boolean, true),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"ellipse\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      const ellipse = Tools.Ellipse.create({ activeShape: null });\n      ellipse._control = self;\n\n      self.tools = { ellipse: ellipse };\n    },\n  }));\n\nconst EllipseModel = types.compose(\"EllipseModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"ellipse\", EllipseModel, HtxView);\n\nexport { HtxView, EllipseModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { EllipseModel } from \"./Ellipse\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * EllipseLabels tag creates labeled ellipses\n * Used only for Image\n * @example\n * <View>\n *   <EllipseLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </EllipseLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name EllipseLabels\n * @param {string} name               - name of the element\n * @param {string} toName             - name of the image to label\n * @param {float=} [opacity=0.6]      - opacity of rectangle\n * @param {string=} [fillColor]       - ellipse fill color, default is transparent\n * @param {string=} [strokeColor]     - stroke color\n * @param {number=} [strokeWidth=1]   - width of stroke\n * @param {boolean=} [canRotate=true] - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types.model(\"EllipseLabelsModel\", {\n  id: types.optional(types.identifier, guidGenerator),\n  pid: types.optional(types.string, guidGenerator),\n  type: \"ellipselabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Model = LabelMixin.props({ _type: \"ellipselabels\" });\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  EllipseModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst EllipseLabelsModel = types.compose(\"EllipseLabelsModel\", Composition);\n\nconst HtxEllipseLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"ellipselabels\", EllipseLabelsModel, HtxEllipseLabels);\n\nexport { HtxEllipseLabels, EllipseLabelsModel };\n","import React, { Fragment } from \"react\";\nimport { Ellipse } from \"react-konva\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getParent } from \"mobx-state-tree\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants from \"../core/Constants\";\nimport DisabledMixin from \"../mixins/Normalization\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport Utils from \"../utils\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { EllipseLabelsModel } from \"../tags/control/EllipseLabels\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { LabelOnEllipse } from \"../components/ImageView/LabelOnRegion\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\n\n/**\n * Ellipse object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"ellipseregion\",\n\n    x: types.number,\n    y: types.number,\n\n    relativeX: types.optional(types.number, 0),\n    relativeY: types.optional(types.number, 0),\n\n    relativeWidth: types.optional(types.number, 0),\n    relativeHeight: types.optional(types.number, 0),\n\n    startX: types.optional(types.number, 0),\n    startY: types.optional(types.number, 0),\n\n    relativeRadiusX: types.optional(types.number, 0),\n    relativeRadiusY: types.optional(types.number, 0),\n\n    radiusX: types.number,\n    radiusY: types.number,\n\n    // @todo not used\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n\n    fill: types.optional(types.boolean, true),\n    fillColor: types.optional(types.string, Constants.FILL_COLOR),\n    fillOpacity: types.optional(types.number, 0.6),\n\n    strokeColor: types.optional(types.string, Constants.STROKE_COLOR),\n    strokeWidth: types.optional(types.number, Constants.STROKE_WIDTH),\n\n    states: types.maybeNull(types.array(types.union(EllipseLabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n\n    supportsTransform: true,\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.startX = self.x;\n      self.startY = self.y;\n\n      if (self.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n        self.relativeRadiusX = self.radiusX;\n        self.relativeRadiusY = self.radiusY;\n        self.relativeWidth = self.width;\n        self.relativeHeight = self.height;\n      }\n\n      self.updateAppearenceFromState();\n    },\n\n    updateAppearenceFromState() {\n      if (!self.states.length) return;\n      const stroke = self.states[0].getSelectedColor();\n      self.strokeColor = stroke;\n      self.fillColor = stroke;\n    },\n\n    // @todo not used\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const a = self.radiusX;\n      const b = self.radiusY;\n\n      const cx = self.x;\n      const cy = self.y;\n      //going to system where center coordinates are (0,0)\n      var rel_x = x - cx;\n      var rel_y = y - cy;\n\n      //going to system where our ellipse has angle 0 to X-Axis via rotate matrix\n      const theta = self.rotation;\n      rel_x = rel_x * Math.cos(Math.unit(theta, \"deg\")) - rel_y * Math.sin(Math.unit(theta, \"deg\"));\n      rel_y = rel_x * Math.sin(Math.unit(theta, \"deg\")) + rel_y * Math.cos(Math.unit(theta, \"deg\"));\n\n      if (Math.abs(rel_x) < a) {\n        if (Math.pow(rel_y, 2) < Math.pow(b, 2) * (1 - Math.pow(rel_x, 2) / Math.pow(a, 2))) {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n\n      self.completion.loadRegionState(self);\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      self.setPosition(p.x, p.y, self.radiusY, self.radiusX, self.rotation);\n    },\n\n    /**\n     * Boundg Box set position on canvas\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radiusX\n     * @param {number} radiusY\n     * @param {number} rotation\n     */\n    setPosition(x, y, radiusX, radiusY, rotation) {\n      self.x = x;\n      self.y = y;\n      self.radiusX = radiusX;\n      self.radiusY = radiusY;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n\n      self.relativeRadiusX = (radiusX / self.parent.stageWidth) * 100;\n      self.relativeRadiusY = (radiusY / self.parent.stageHeight) * 100;\n\n      self.rotation = (rotation + 360) % 360;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n        self.radiusX = (sw * self.relativeRadiusX) / 100;\n        self.radiusY = (sh * self.relativeRadiusY) / 100;\n      } else if (self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.radiusX = (sw * self.radiusX) / 100;\n        self.radiusY = (sh * self.radiusY) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize(control, object) {\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n      const { width: radiusX, height: radiusY } = self.rotateDimensions(\n        {\n          width: (self.radiusX * (self.scaleX || 1) * 100) / object.stageWidth, //  * (self.scaleX || 1)\n          height: (self.radiusY * (self.scaleY || 1) * 100) / object.stageHeight,\n        },\n        degree,\n      );\n\n      const { x, y } = self.rotatePoint(self, degree, false);\n\n      const res = {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n        value: {\n          x: (x * 100) / width,\n          y: (y * 100) / height,\n          radiusX,\n          radiusY,\n          rotation: self.rotation,\n        },\n      };\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst EllipseRegionModel = types.compose(\n  \"EllipseRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  DisabledMixin,\n  Model,\n);\n\nconst HtxEllipseView = ({ store, item }) => {\n  let { strokeColor, strokeWidth } = item;\n\n  if (item.highlighted) {\n    strokeColor = Constants.HIGHLIGHTED_STROKE_COLOR;\n    strokeWidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  return (\n    <Fragment>\n      <Ellipse\n        x={item.x}\n        y={item.y}\n        radiusX={item.radiusX}\n        radiusY={item.radiusY}\n        fill={item.fill ? Utils.Colors.convertToRGBA(item.fillColor, item.fillOpacity) : null}\n        stroke={strokeColor}\n        strokeWidth={strokeWidth}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        opacity={item.opacity}\n        rotation={item.rotation}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"radiusX\") * t.getAttr(\"scaleX\"),\n            t.getAttr(\"radiusY\") * t.getAttr(\"scaleY\"),\n            t.getAttr(\"rotation\"),\n          );\n\n          t.setAttr(\"scaleX\", 1);\n          t.setAttr(\"scaleY\", 1);\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"radiusX\"),\n            t.getAttr(\"radiusY\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          let { x, y } = pos;\n          let { stageHeight, stageWidth } = getParent(item, 2);\n\n          if (x < 0) {\n            x = 0;\n          } else if (x > stageWidth) {\n            x = stageWidth;\n          }\n\n          if (y < 0) {\n            y = 0;\n          } else if (y > stageHeight) {\n            y = stageHeight;\n          }\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n          } else {\n            stage.container().style.cursor = Constants.POINTER_CURSOR;\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        draggable={item.editable}\n      />\n      <LabelOnEllipse item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxEllipse = inject(\"store\")(observer(HtxEllipseView));\n\nRegistry.addTag(\"ellipseregion\", EllipseRegionModel, HtxEllipse);\n\nexport { EllipseRegionModel, HtxEllipse };\n","import { types, destroy } from \"mobx-state-tree\";\n\nimport BaseTool, { MIN_SIZE } from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { EllipseRegionModel } from \"../regions/EllipseRegion\";\nimport { DrawingTool } from \"../mixins/DrawingTool\";\n\nconst _Tool = types\n  .model({\n    default: true,\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\", \"brush\", \"eraser\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"ellipselabels\",\n        controlTagTypes: [\"ellipselabels\", \"ellipse\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const control = self.control;\n\n      const ellipse = EllipseRegionModel.create({\n        opacity: parseFloat(control.opacity),\n        strokeWidth: Number(control.strokewidth),\n        fillOpacity: Number(control.fillopacity),\n        ...opts,\n      });\n\n      self.obj.addShape(ellipse);\n\n      return ellipse;\n    },\n\n    mousedownEv(ev, [x, y]) {\n      if (self.control.type === \"ellipselabels\" && !self.control.isSelected) return;\n\n      if (!self.obj.checkLabels()) return;\n\n      self.mode = \"drawing\";\n\n      const sap = self.statesAndParams;\n      const ellipse = self.createRegion({\n        x: x,\n        y: y,\n        radiusX: 1,\n        radiusY: 1,\n        coordstype: \"px\",\n        ...sap,\n      });\n\n      // if (self.control.type === \"ellipselabels\") self.control.unselectAll();\n\n      return ellipse;\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      self.updateDraw(x, y);\n    },\n\n    mouseupEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const s = self.getActiveShape;\n\n      if (s.radiusX < MIN_SIZE.X || s.radiusY < MIN_SIZE.Y) {\n        destroy(s);\n        if (self.control.type === \"ellipselabels\") self.control.unselectAll();\n      } else {\n        self.obj.completion.highlightedNode.unselectRegion(true);\n      }\n\n      self.mode = \"viewing\";\n    },\n  }));\n\nconst Ellipse = types.compose(ToolMixin, BaseTool, DrawingTool, _Tool);\n\nexport { Ellipse };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { DragOutlined, ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport BasicToolView from \"../components/Tools/Basic\";\nimport ToolMixin from \"../mixins/Tool\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <BasicToolView\n        selected={item.selected}\n        icon={<DragOutlined />}\n        tooltip=\"Move position\"\n        onClick={ev => {\n          const sel = item.selected;\n          item.manager.unselectAll();\n          item.setSelected(!sel);\n          if (item.selected) {\n            const stage = item.obj.stageRef;\n            stage.container().style.cursor = \"all-scroll\";\n          }\n        }}\n      />\n      <BasicToolView\n        icon={<ZoomInOutlined />}\n        tooltip=\"Zoom into the image\"\n        onClick={ev => {\n          // console.log(self.image);\n          // console.log(self._image);\n          item.handleZoom(1.2);\n        }}\n      />\n      <BasicToolView\n        icon={<ZoomOutOutlined />}\n        tooltip=\"Zoom out of the image\"\n        onClick={ev => {\n          item.handleZoom(0.8);\n        }}\n      />\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    // image: types.late(() => types.safeReference(Registry.getModelByTag(\"image\")))\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    handleDrag(ev) {\n      const item = self._manager.obj;\n      const stage = item.stageRef;\n      const scale = stage.scaleX();\n\n      let posx = stage.x() + ev.movementX;\n      let posy = stage.y() + ev.movementY;\n\n      if (posx > 0) posx = 0;\n      if (posy > 0) posy = 0;\n\n      item.setZoom(scale, posx, posy);\n      stage.position({ x: posx, y: posy });\n      stage.batchDraw();\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      const scale = self._manager.obj.stageRef.scaleX();\n\n      if (scale <= 1) return;\n      if (self.mode === \"moving\") self.handleDrag(ev);\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"moving\";\n    },\n\n    handleZoom(e, val) {\n      if (e.evt && !e.evt.ctrlKey) {\n        return;\n      } else if (e.evt && e.evt.ctrlKey) {\n        /**\n         * Disable scrolling page\n         */\n        e.evt.preventDefault();\n      }\n\n      // console.log(getEnv(self).manager);\n      // console.log(getEnv(self));\n\n      const item = self._manager.obj;\n\n      // const { item } = this.props;\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scaleBy = parseFloat(item.zoomby);\n      const oldScale = stage.scaleX();\n\n      let mousePointTo;\n      let newScale;\n      let pos;\n      let newPos;\n\n      if (e.evt) {\n        mousePointTo = {\n          x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n          y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n\n        newPos = {\n          x: -(mousePointTo.x - stage.getPointerPosition().x / newScale) * newScale,\n          y: -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale,\n        };\n      } else {\n        pos = {\n          x: stage.width() / 2,\n          y: stage.height() / 2,\n        };\n\n        mousePointTo = {\n          x: pos.x / oldScale - stage.x() / oldScale,\n          y: pos.y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = Math.max(0.05, oldScale * e);\n\n        newPos = {\n          x: -(mousePointTo.x - pos.x / newScale) * newScale,\n          y: -(mousePointTo.y - pos.y / newScale) * newScale,\n        };\n      }\n\n      if (item.negativezoom !== true && newScale <= 1) {\n        item.setZoom(1, 0, 0);\n        stage.scale({ x: 1, y: 1 });\n        stage.position({ x: 0, y: 0 });\n        stage.batchDraw();\n        return;\n      }\n\n      stage.scale({ x: newScale, y: newScale });\n\n      item.setZoom(newScale, newPos.x, newPos.y);\n      stage.position(newPos);\n      stage.batchDraw();\n    },\n  }));\n\nconst Zoom = types.compose(ToolMixin, BaseTool, _Tool);\n\n// Registry.addTool(\"zoom\", Zoom);\n\nexport { Zoom };\n\n// ImageTools.addTool(ZoomTool);\n","import React from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { RotateLeftOutlined, RotateRightOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport BasicToolView from \"../components/Tools/Basic\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <>\n      <BasicToolView\n        selected={item.selected}\n        icon={<RotateLeftOutlined />}\n        tooltip=\"Rotate Left\"\n        onClick={ev => {\n          item.rotate(-90);\n        }}\n      />\n      <BasicToolView\n        selected={item.selected}\n        icon={<RotateRightOutlined />}\n        tooltip=\"Rotate Right\"\n        onClick={ev => {\n          item.rotate(90);\n        }}\n      />\n    </>\n  );\n});\n\nconst _Tool = types\n  .model({})\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    rotate(degree) {\n      self.obj.rotate(degree);\n    },\n  }));\n\nconst Rotate = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Rotate };\n\n// ImageTools.addTool(RotateTool);\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Slider, Menu, Dropdown } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class SliderDropDownTool extends Component {\n    render() {\n      const menu = (\n        <Menu>\n          <Menu.Item key=\"1\">\n            <Slider\n              defaultValue={this.props.default || 15}\n              max={this.props.max || 50}\n              value={this.props.value}\n              min={0}\n              vertical\n              tipFormatter={null}\n              style={{ height: this.props.height || 100 }}\n              onChange={this.props.onChange}\n            />\n            <Button\n              shape=\"circle\"\n              type={this.props.selected ? \"primary\" : \"default\"}\n              className={styles.button}\n              onClick={this.props.onResetClick}\n            >\n              <ReloadOutlined />\n            </Button>\n          </Menu.Item>\n        </Menu>\n      );\n\n      return (\n        <Fragment>\n          <Dropdown overlay={menu}>\n            <Button shape=\"circle\" className={styles.button}>\n              {this.props.icon}\n            </Button>\n          </Dropdown>\n        </Fragment>\n      );\n    }\n  },\n);\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ControlOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport Constants from \"../core/Constants\";\nimport SliderDropDownTool from \"../components/Tools/SliderDropDown\";\nimport ToolMixin from \"../mixins/Tool\";\n\nimport styles from \"./Tools.module.scss\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <SliderDropDownTool\n        default={Constants.BRIGHTNESS_VALUE}\n        value={item.brightness}\n        max={Constants.BRIGHTNESS_MAX}\n        selected={item.selected}\n        icon={<ControlOutlined />}\n        onResetClick={ev => {\n          item.setStroke(Constants.BRIGHTNESS_VALUE);\n        }}\n        onChange={val => {\n          item.setStroke(val);\n        }}\n      />\n      <span className={styles.tooltitle}>Brightness</span>\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    brightness: types.optional(types.number, Constants.BRIGHTNESS_VALUE),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setStroke(val) {\n      self.brightness = val;\n      self.obj.setBrightnessGrade(val);\n    },\n  }));\n\nconst Brightness = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Brightness };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ControlOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport Constants from \"../core/Constants\";\nimport SliderDropDownTool from \"../components/Tools/SliderDropDown\";\nimport ToolMixin from \"../mixins/Tool\";\n\nimport styles from \"./Tools.module.scss\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <SliderDropDownTool\n        default={Constants.CONTRAST_VALUE}\n        value={item.contrast}\n        max={Constants.CONTRAST_MAX}\n        selected={item.selected}\n        icon={<ControlOutlined />}\n        onResetClick={ev => {\n          item.setStroke(Constants.CONTRAST_VALUE);\n        }}\n        onChange={val => {\n          item.setStroke(val);\n        }}\n      />\n      <span className={styles.tooltitle}>Contrast</span>\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    contrast: types.optional(types.number, Constants.CONTRAST_VALUE),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setStroke(val) {\n      self.contrast = val;\n      self.obj.setContrastGrade(val);\n    },\n  }));\n\nconst Contrast = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Contrast };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport SliderTool from \"../components/Tools/Slider\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { PolygonRegionModel } from \"../regions/PolygonRegion\";\nimport { calcBorder, getImageData } from \"../utils/floodfill\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst DEF_THRESHOLD = 10;\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <SliderTool\n      max={50}\n      default={DEF_THRESHOLD}\n      selected={item.selected}\n      icon={\"tool\"}\n      onClick={ev => {\n        const cur = item.selected;\n        item.manager.unselectAll();\n        item.setSelected(!cur);\n      }}\n      onChange={val => {\n        item.setThreshold(val);\n      }}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({\n    threshold: types.optional(types.number, DEF_THRESHOLD),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setThreshold(val) {\n      self.threshold = val;\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n    },\n\n    createPolygonRegion(points) {\n      const { states, strokecolor } = self.statesAndParams;\n      const c = self.control;\n\n      const p = PolygonRegionModel.create({\n        id: guidGenerator(),\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: strokecolor,\n\n        pointsize: c.pointsize,\n        pointstyle: c.pointstyle,\n\n        states: states,\n\n        coordstype: \"px\",\n      });\n\n      points.forEach(t => p.addPoint(t.x, t.y));\n      self.obj.addShape(p);\n\n      p.closePoly();\n\n      return p;\n    },\n\n    clickEv(ev, [x, y]) {\n      const image = self.obj;\n      const imageRef = image.imageRef;\n      const imageData = getImageData(imageRef);\n      const points = calcBorder(imageData.data, image.naturalWidth, image.naturalHeight, x, y, self.threshold, true);\n\n      if (points) self.createPolygonRegion(points);\n\n      self.control.unselectAll();\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"drawing\";\n    },\n  }));\n\nconst FloodFill = types.compose(ToolMixin, _Tool, BaseTool);\n\nexport { FloodFill };\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Layer, Rect } from \"react-konva\";\n\n/**\n * Create grid for Image Canvas\n * @param {number} width\n * @param {number} height\n * @param {number} nodeSize\n */\nconst createGrid = (width, height, nodeSize) => {\n  return [...Array(width)]\n    .map((_, col) =>\n      [...Array(height)].map((_, row) => ({\n        col,\n        row,\n        x: col * nodeSize,\n        y: row * nodeSize,\n        fill: \"#fff\",\n      })),\n    )\n    .reduce((p, c) => [...p, ...c]);\n};\n\nexport default observer(\n  class ImageGrid extends Component {\n    render() {\n      const { item } = this.props;\n\n      const grid = createGrid(\n        Math.ceil(item.stageWidth / item.gridSize),\n        Math.ceil(item.stageHeight / item.gridSize),\n        item.gridSize,\n      );\n\n      return (\n        <Layer opacity={0.15} name=\"ruler\">\n          {Object.values(grid).map((n, i) => (\n            <Rect\n              key={i}\n              x={n.x}\n              y={n.y}\n              width={item.gridSize}\n              height={item.gridSize}\n              stroke={item.gridColor}\n              strokeWidth={1}\n            />\n          ))}\n        </Layer>\n      );\n    }\n  },\n);\n","import React, { Component } from \"react\";\nimport { Transformer } from \"react-konva\";\n\nexport default class TransformerComponent extends Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    if (!this.transformer) return;\n\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShape } = this.props;\n\n    if (!selectedShape) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    if (!selectedShape.supportsTransform) return;\n\n    const selectedNode = stage.findOne(\".\" + selectedShape.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    if (!this.props.selectedShape.supportsTransform) return null;\n\n    return (\n      <Transformer\n        resizeEnabled={true}\n        ignoreStroke={true}\n        keepRatio={false}\n        rotateEnabled={this.props.rotateEnabled}\n        borderDash={[3, 1]}\n        // borderStroke={\"red\"}\n        boundBoxFunc={(oldBox, newBox) => {\n          newBox.width = Math.max(3, newBox.width);\n          newBox.height = Math.max(3, newBox.height);\n          return newBox;\n        }}\n        anchorSize={8}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Stage, Layer, Group, Line } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { getRoot } from \"mobx-state-tree\";\n\nimport ImageGrid from \"../ImageGrid/ImageGrid\";\nimport ImageTransformer from \"../ImageTransformer/ImageTransformer\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport Tree from \"../../core/Tree\";\nimport styles from \"./ImageView.module.scss\";\n\nexport default observer(\n  class ImageView extends Component {\n    // stored position of canvas before creating region\n    canvasX;\n    canvasY;\n\n    handleOnClick = e => {\n      const { item } = this.props;\n\n      return item.event(\"click\", e, e.evt.offsetX, e.evt.offsetY);\n    };\n\n    handleMouseDown = e => {\n      const { item } = this.props;\n\n      // item.freezeHistory();\n      const p = e.target.getParent();\n\n      if (p && p.className === \"Transformer\") return;\n\n      if (\n        e.target === e.target.getStage() ||\n        (e.target.parent && (e.target.parent.attrs.name === \"ruler\" || e.target.parent.attrs.name === \"segmentation\"))\n      ) {\n        window.addEventListener(\"mousemove\", this.handleGlobalMouseMove);\n        window.addEventListener(\"mouseup\", this.handleGlobalMouseUp);\n        const { offsetX: x, offsetY: y } = e.evt;\n        // store the canvas coords for calculations in further events\n        const { left, top } = this.container.getBoundingClientRect();\n        this.canvasX = left;\n        this.canvasY = top;\n        return item.event(\"mousedown\", e, x, y);\n      }\n\n      return true;\n    };\n\n    /**\n     * Mouse up outside the canvas\n     */\n    handleGlobalMouseUp = e => {\n      window.removeEventListener(\"mousemove\", this.handleGlobalMouseMove);\n      window.removeEventListener(\"mouseup\", this.handleGlobalMouseUp);\n\n      if (e.target && e.target.tagName === \"CANVAS\") return;\n\n      const { item } = this.props;\n      const { clientX: x, clientY: y } = e;\n\n      item.freezeHistory();\n\n      return item.event(\"mouseup\", e, x - this.canvasX, y - this.canvasY);\n    };\n\n    handleGlobalMouseMove = e => {\n      if (e.target && e.target.tagName === \"CANVAS\") return;\n\n      const { item } = this.props;\n      const { clientX: x, clientY: y } = e;\n\n      return item.event(\"mousemove\", e, x - this.canvasX, y - this.canvasY);\n    };\n\n    /**\n     * Mouse up on Stage\n     */\n    handleMouseUp = e => {\n      const { item } = this.props;\n\n      item.freezeHistory();\n\n      return item.event(\"mouseup\", e, e.evt.offsetX, e.evt.offsetY);\n    };\n\n    handleMouseMove = e => {\n      const { item } = this.props;\n\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scale = stage.scaleX();\n\n      if (e.evt && (e.evt.buttons === 4 || (e.evt.buttons === 1 && e.evt.shiftKey)) && scale > 1) {\n        e.evt.preventDefault();\n        const newPos = { x: stage.x() + e.evt.movementX, y: stage.y() + e.evt.movementY };\n        item.setZoom(scale, newPos.x, newPos.y);\n        stage.position(newPos);\n        stage.batchDraw();\n      } else {\n        return item.event(\"mousemove\", e, e.evt.offsetX, e.evt.offsetY);\n      }\n    };\n\n    updateGridSize = range => {\n      const { item } = this.props;\n      item.freezeHistory();\n\n      item.setGridSize(range);\n    };\n\n    /**\n     * Handle to zoom\n     */\n    handleZoom = e => {\n      /**\n       * Disable if user doesn't use ctrl\n       */\n      if (e.evt && !e.evt.ctrlKey) {\n        return;\n      } else if (e.evt && e.evt.ctrlKey) {\n        /**\n         * Disable scrolling page\n         */\n        e.evt.preventDefault();\n      }\n\n      const { item } = this.props;\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scaleBy = parseFloat(item.zoomby);\n      const oldScale = stage.scaleX();\n\n      let mousePointTo;\n      let newScale;\n      let pos;\n      let newPos;\n\n      if (e.evt) {\n        mousePointTo = {\n          x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n          y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n\n        newPos = {\n          x: -(mousePointTo.x - stage.getPointerPosition().x / newScale) * newScale,\n          y: -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale,\n        };\n      } else {\n        pos = {\n          x: stage.width() / 2,\n          y: stage.height() / 2,\n        };\n\n        mousePointTo = {\n          x: pos.x / oldScale - stage.x() / oldScale,\n          y: pos.y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = Math.max(0.05, oldScale * e);\n\n        newPos = {\n          x: -(mousePointTo.x - pos.x / newScale) * newScale,\n          y: -(mousePointTo.y - pos.y / newScale) * newScale,\n        };\n      }\n\n      if (item.negativezoom !== true && newScale <= 1) {\n        item.setZoom(1, 0, 0);\n        stage.scale({ x: 1, y: 1 });\n        stage.position({ x: 0, y: 0 });\n        stage.batchDraw();\n        return;\n      }\n\n      stage.scale({ x: newScale, y: newScale });\n\n      item.setZoom(newScale, newPos.x, newPos.y);\n      stage.position(newPos);\n      stage.batchDraw();\n    };\n\n    renderRulers() {\n      const { item } = this.props;\n      const width = 1;\n      const color = \"white\";\n\n      return (\n        <Group\n          name=\"ruler\"\n          onClick={ev => {\n            ev.cancelBubble = false;\n          }}\n        >\n          <Line\n            x={0}\n            y={item.cursorPositionY}\n            points={[0, 0, item.stageWidth, 0]}\n            strokeWidth={width}\n            stroke={color}\n            tension={0}\n            dash={[4, 4]}\n            closed\n          />\n          <Line\n            x={item.cursorPositionX}\n            y={0}\n            points={[0, 0, 0, item.stageHeight]}\n            strokeWidth={width}\n            stroke={color}\n            tension={0}\n            dash={[1.5]}\n            closed\n          />\n        </Group>\n      );\n    }\n\n    onResize = () => {\n      this.props.item.onResize(this.container.offsetWidth, this.container.offsetHeight, true);\n    };\n\n    componentDidMount() {\n      window.addEventListener(\"resize\", this.onResize);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.onResize);\n    }\n\n    renderTools() {\n      const { item, store } = this.props;\n      const cs = store.completionStore;\n\n      if (cs.viewingAllCompletions || cs.viewingAllPredictions) return null;\n\n      return (\n        <div className={styles.block}>\n          {item\n            .getToolsManager()\n            .allTools()\n            .map(tool => tool.viewClass)}\n        </div>\n      );\n    }\n\n    render() {\n      const { item, store } = this.props;\n\n      // TODO fix me\n      if (!store.task || !item._value) return null;\n\n      const cb = item.controlButton();\n      let filler = null;\n      let containerClassName = styles.container;\n      const containerStyle = {};\n\n      const imgStyle = {\n        width: item.width,\n        transformOrigin: \"left top\",\n        filter: `brightness(${item.brightnessGrade}%) contrast(${item.contrastGrade}%)`,\n      };\n      const imgTransform = [];\n\n      if (getRoot(item).settings.imageFullSize === false) {\n        containerStyle[\"maxWidth\"] = item.maxwidth;\n      }\n\n      if (item.zoomScale !== 1) {\n        let { zoomingPositionX, zoomingPositionY } = item;\n        imgTransform.push(\"translate(\" + zoomingPositionX + \"px,\" + zoomingPositionY + \"px)\");\n        imgTransform.push(\"scale(\" + item.resize + \", \" + item.resize + \")\");\n      }\n\n      if (item.rotation) {\n        const translate = {\n          90: `0, -100%`,\n          180: `-100%, -100%`,\n          270: `-100%, 0`,\n        };\n        // there is a top left origin already set for zoom; so translate+rotate\n        imgTransform.push(`rotate(${item.rotation}deg)`);\n        imgTransform.push(`translate(${translate[item.rotation] || \"0, 0\"})`);\n        if ([90, 270].includes(item.rotation)) {\n          // we can not rotate img itself, so we change container's size via css margin hack, ...\n          const ratio = item.naturalHeight / item.naturalWidth;\n          filler = <div className={styles.filler} style={{ marginTop: `${ratio * 100}%` }} />;\n          containerClassName += \" \" + styles.rotated;\n          // ... prepare image size for transform rotation and use position: absolute\n          imgStyle.width = `${ratio * 100}%`;\n        }\n      }\n\n      if (imgTransform.length) {\n        imgStyle[\"transform\"] = imgTransform.join(\" \");\n      }\n\n      return (\n        <ObjectTag\n          item={item}\n          style={{\n            position: \"relative\",\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            direction: \"ltr\",\n          }}\n        >\n          <div\n            ref={node => {\n              this.container = node;\n            }}\n            className={containerClassName}\n            style={containerStyle}\n          >\n            {filler}\n            <img\n              ref={ref => {\n                item.setImageRef(ref);\n              }}\n              style={imgStyle}\n              src={item._value}\n              onLoad={item.updateImageSize}\n              onClick={this.handleOnClick}\n              alt=\"LS\"\n            />\n          </div>\n          <Stage\n            ref={ref => {\n              item.setStageRef(ref);\n            }}\n            style={{ position: \"absolute\", top: 0, left: 0, brightness: \"150%\" }}\n            className={\"image-element\"}\n            width={item.stageWidth}\n            height={item.stageHeight}\n            scaleX={item.scale}\n            scaleY={item.scale}\n            x={item.zoomingPositionX}\n            y={item.zoomingPositionY}\n            onClick={this.handleOnClick}\n            onMouseDown={this.handleMouseDown}\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.handleMouseUp}\n            onWheel={item.zoom ? this.handleZoom : () => {}}\n          >\n            {item.grid && item.sizeUpdated && <ImageGrid item={item} />}\n            {item.regions\n              .filter(shape => shape.type === \"brushregion\")\n              .map(shape => (\n                <Layer name={\"brushLayer-\" + shape.id} id={shape.id}>\n                  {Tree.renderItem(shape)}\n                </Layer>\n              ))}\n            <Layer name=\"shapes\">\n              {item.regions.filter(s => s.type !== \"brushregion\").map(s => Tree.renderItem(s))}\n              {item.activeShape && Tree.renderItem(item.activeShape)}\n\n              {item.selectedShape && item.selectedShape.editable && (\n                <ImageTransformer rotateEnabled={cb && cb.canrotate} selectedShape={item.selectedShape} />\n              )}\n            </Layer>\n          </Stage>\n\n          {this.renderTools()}\n        </ObjectTag>\n      );\n    }\n  },\n);\n\n// <ImageControls\n//   item={item}\n//   handleZoom={this.handleZoom}\n//   updateBrightness={this.updateBrightness}\n//   updateGridSize={this.updateGridSize}\n//   updateBrushControl={this.updateBrushControl}\n//   updateBrushStrokeWidth={this.updateBrushStrokeWidth}\n// />\n","class ToolsManager {\n  constructor({ obj }) {\n    this.obj = obj;\n    this.tools = {};\n    this._default_tool = null;\n  }\n\n  addTool(name, tool) {\n    this.tools[name] = tool;\n    tool._manager = this;\n\n    if (tool.default) {\n      this._default_tool = tool;\n    }\n  }\n\n  unselectAll() {\n    // when one of the tool get selected you need to unselect all\n    // other active tools\n    Object.values(this.tools).forEach(t => {\n      if (typeof t.selected !== \"undefined\") t.setSelected(false);\n    });\n\n    const stage = this.obj.stageRef;\n    stage.container().style.cursor = \"default\";\n  }\n\n  allTools() {\n    return Object.values(this.tools);\n  }\n\n  addToolsFromControl(s) {\n    const self = this;\n\n    if (s.tools) {\n      const t = s.tools;\n\n      Object.keys(t).forEach(k => {\n        self.addTool(k, t[k]);\n      });\n    }\n  }\n\n  findSelectedTool() {\n    return Object.values(this.tools).find(t => t.selected);\n  }\n\n  event(name, ev, ...args) {\n    // if there is an active tool, dispatch there\n    const selectedTool = this.findSelectedTool();\n\n    if (selectedTool) {\n      selectedTool.event(name, ev, args);\n      return;\n    }\n\n    // if there is a default tool then dispatch an event there\n    if (this._default_tool) {\n      this._default_tool.event(name, ev, args);\n      return;\n    }\n  }\n}\n\nexport default ToolsManager;\n","import { types, getType, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport * as Tools from \"../../tools\";\nimport ImageView from \"../../components/ImageView/ImageView\";\nimport ObjectBase from \"./Base\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport ToolsManager from \"../../tools/Manager\";\nimport { BrushRegionModel } from \"../../regions/BrushRegion\";\nimport { KeyPointRegionModel } from \"../../regions/KeyPointRegion\";\nimport { PolygonRegionModel } from \"../../regions/PolygonRegion\";\nimport { RectRegionModel } from \"../../regions/RectRegion\";\nimport { EllipseRegionModel } from \"../../regions/EllipseRegion\";\n\n/**\n * Image tag shows an image on the page\n * @example\n * <View>\n *   <!-- Take the image url from the url column in JSON/CSV -->\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\" />\n * </View>\n * @name Image\n * @param {string} name                       - name of the element\n * @param {string} value                      - value\n * @param {string=} [width=100%]              - image width\n * @param {string=} [maxWidth=750px]          - image maximum width\n * @param {boolean=} [zoom=false]             - enable zooming an image by the mouse wheel\n * @param {boolean=} [negativeZoom=false]     - enable zooming out an image\n * @param {float=} [zoomBy=1.1]               - scale factor\n * @param {boolean=} [grid=false]             - show grid\n * @param {number=} [gridSize=30]             - size of the grid\n * @param {string=} [gridColor=\"#EEEEF4\"]     - color of the grid, opacity is 0.15\n * @param {boolean} [zoomControl=false]       - show zoom controls in toolbar\n * @param {boolean} [brightnessControl=false] - show brightness control in toolbar\n * @param {boolean} [contrastControl=false]   - show contrast control in toolbar\n * @param {boolean} [rotateControl=false]     - show rotate control in toolbar\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.number),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n\n  // rulers: types.optional(types.boolean, true),\n  grid: types.optional(types.boolean, false),\n  gridSize: types.optional(types.number, 30),\n  gridColor: types.optional(types.string, \"#EEEEF4\"),\n\n  zoom: types.optional(types.boolean, false),\n  negativezoom: types.optional(types.boolean, false),\n  zoomby: types.optional(types.string, \"1.1\"),\n\n  showlabels: types.optional(types.boolean, false),\n\n  zoomcontrol: types.optional(types.boolean, false),\n  brightnesscontrol: types.optional(types.boolean, false),\n  contrastcontrol: types.optional(types.boolean, false),\n  rotatecontrol: types.optional(types.boolean, false),\n});\n\nconst IMAGE_CONSTANTS = {\n  rectangleModel: \"RectangleModel\",\n  rectangleLabelsModel: \"RectangleLabelsModel\",\n  ellipseModel: \"EllipseModel\",\n  ellipseLabelsModel: \"EllipseLabelsModel\",\n  brushLabelsModel: \"BrushLabelsModel\",\n  rectanglelabels: \"rectanglelabels\",\n  keypointlabels: \"keypointlabels\",\n  polygonlabels: \"polygonlabels\",\n  brushlabels: \"brushlabels\",\n  brushModel: \"BrushModel\",\n  ellipselabels: \"ellipselabels\",\n};\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n\n    // tools: types.array(BaseTool),\n\n    rotation: types.optional(types.number, 0),\n\n    sizeUpdated: types.optional(types.boolean, false),\n\n    /**\n     * Natural sizes of Image\n     * Constants\n     */\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n\n    /**\n     * Initial width and height of the image\n     */\n    initialWidth: types.optional(types.integer, 1),\n    initialHeight: types.optional(types.integer, 1),\n\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n\n    /**\n     * Zoom Scale\n     */\n    zoomScale: types.optional(types.number, 1),\n\n    /**\n     * Coordinates of left top corner\n     * Default: { x: 0, y: 0 }\n     */\n    zoomingPositionX: types.maybeNull(types.number),\n    zoomingPositionY: types.maybeNull(types.number),\n\n    /**\n     * Brightness of Canvas\n     */\n    brightnessGrade: types.optional(types.number, 100),\n\n    contrastGrade: types.optional(types.number, 100),\n\n    /**\n     * Cursor coordinates\n     */\n    cursorPositionX: types.optional(types.number, 0),\n    cursorPositionY: types.optional(types.number, 0),\n\n    brushControl: types.optional(types.string, \"brush\"),\n\n    brushStrokeWidth: types.optional(types.number, 15),\n\n    /**\n     * Mode\n     * brush for Image Segmentation\n     * eraser for Image Segmentation\n     */\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\", \"brush\", \"eraser\"]), \"viewing\"),\n\n    selectedShape: types.safeReference(\n      types.union(BrushRegionModel, RectRegionModel, EllipseRegionModel, PolygonRegionModel, KeyPointRegionModel),\n    ),\n\n    regions: types.array(\n      types.union(BrushRegionModel, RectRegionModel, EllipseRegionModel, PolygonRegionModel, KeyPointRegionModel),\n      [],\n    ),\n  })\n  .views(self => ({\n    /**\n     * @return {boolean}\n     */\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    /**\n     * @return {object}\n     */\n    get completion() {\n      // return Types.getParentOfTypeString(self, \"Completion\");\n      return getRoot(self).completionStore.selected;\n    },\n\n    /**\n     * @return {object}\n     */\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => s.isSelected && s._type.includes(\"labels\"));\n    },\n\n    controlButton() {\n      const names = self.states();\n      if (!names || names.length === 0) return;\n\n      let returnedControl = names[0];\n\n      names.forEach(item => {\n        if (\n          item.type === IMAGE_CONSTANTS.rectanglelabels ||\n          item.type === IMAGE_CONSTANTS.brushlabels ||\n          item.type === IMAGE_CONSTANTS.ellipselabels\n        ) {\n          returnedControl = item;\n        }\n      });\n\n      return returnedControl;\n    },\n\n    get controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n  }))\n\n  // actions for the tools\n  .actions(self => {\n    const toolsManager = new ToolsManager({ obj: self });\n\n    function afterCreate() {\n      if (self.zoomcontrol) toolsManager.addTool(\"zoom\", Tools.Zoom.create({}, { manager: toolsManager }));\n\n      if (self.brightnesscontrol)\n        toolsManager.addTool(\"brightness\", Tools.Brightness.create({}, { manager: toolsManager }));\n\n      if (self.contrastcontrol) toolsManager.addTool(\"contrast\", Tools.Contrast.create({}, { manager: toolsManager }));\n\n      if (self.rotatecontrol) toolsManager.addTool(\"rotate\", Tools.Rotate.create({}, { manager: toolsManager }));\n    }\n\n    function getToolsManager() {\n      return toolsManager;\n    }\n\n    return { afterCreate, getToolsManager };\n  })\n\n  .actions(self => ({\n    freezeHistory() {\n      //self.completion.history.freeze();\n    },\n\n    updateBrushControl(arg) {\n      self.brushControl = arg;\n    },\n\n    updateBrushStrokeWidth(arg) {\n      self.brushStrokeWidth = arg;\n    },\n\n    /**\n     * Update brightnessGrade of Image\n     * @param {number} value\n     */\n    setBrightnessGrade(value) {\n      self.brightnessGrade = value;\n    },\n\n    setContrastGrade(value) {\n      self.contrastGrade = value;\n    },\n\n    setGridSize(value) {\n      self.gridSize = value;\n    },\n\n    /**\n     * Set pointer of X and Y\n     */\n    setPointerPosition({ x, y }) {\n      self.freezeHistory();\n      self.cursorPositionX = x;\n      self.cursorPositionY = y;\n    },\n\n    /**\n     * Set zoom\n     */\n    setZoom(scale, x, y) {\n      self.resize = scale;\n      self.zoomScale = scale;\n      self.zoomingPositionX = x;\n      self.zoomingPositionY = y;\n    },\n\n    setZoomPosition(x, y) {\n      self.zoomingPositionX = x;\n      self.zoomingPositionY = y;\n    },\n\n    /**\n     * Set mode of Image (drawing and viewing)\n     * @param {string} mode\n     */\n    setMode(mode) {\n      self.mode = mode;\n    },\n\n    setImageRef(ref) {\n      self.imageRef = ref;\n    },\n\n    setStageRef(ref) {\n      self.stageRef = ref;\n      self.initialWidth = ref && ref.attrs && ref.attrs.width ? ref.attrs.width : 1;\n      self.initialHeight = ref && ref.attrs && ref.attrs.height ? ref.attrs.height : 1;\n    },\n\n    setSelected(shape) {\n      self.selectedShape = shape;\n    },\n\n    rotate(degree = -90) {\n      self.rotation = (self.rotation + degree + 360) % 360;\n\n      // 1. swap canvas sizes to correct relative calculations\n      const w = self.stageWidth;\n      self.stageWidth = self.stageHeight;\n      self.stageHeight = w;\n      const nw = self.naturalWidth;\n      self.naturalWidth = self.naturalHeight;\n      self.naturalHeight = nw;\n\n      const ratio = self.stageHeight / self.stageWidth;\n\n      // 2. rotate regions\n      self.regions.forEach(s => s.rotate(degree));\n\n      // 3. scale to fit original width and resize all regions\n      self._updateImageSize({\n        width: w,\n        height: Math.round(ratio * w),\n        naturalWidth: self.naturalWidth,\n        naturalHeight: self.naturalHeight,\n      });\n    },\n\n    _updateImageSize({ width, height, naturalWidth, naturalHeight, userResize }) {\n      if (naturalWidth !== undefined) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n      }\n\n      self.stageWidth = width;\n      self.stageHeight = height;\n      self.sizeUpdated = true;\n\n      self.regions.forEach(shape => {\n        shape.updateImageSize(width / naturalWidth, height / naturalHeight, width, height, userResize);\n      });\n    },\n\n    updateImageSize(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n      if ((self.rotation + 360) % 180 === 90) {\n        // swap sizes\n        self._updateImageSize({\n          width: height,\n          height: width,\n          naturalWidth: naturalHeight,\n          naturalHeight: naturalWidth,\n        });\n      } else {\n        self._updateImageSize({ width, height, naturalWidth, naturalHeight });\n      }\n    },\n\n    checkLabels() {\n      // there is should be at least one state selected for *labels object\n      const labelStates = (self.states() || []).filter(s => s.type.includes(\"labels\"));\n      const selectedStates = self.getAvailableStates();\n      return selectedStates.length !== 0 || labelStates.length === 0;\n    },\n\n    addShape(shape) {\n      self.regions.push(shape);\n\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    // convert screen coords to image coords considering zoom\n    fixZoomedCoords([x, y]) {\n      return [(x - self.zoomingPositionX) / self.zoomScale, (y - self.zoomingPositionY) / self.zoomScale];\n      // good official way, but maybe a bit slower and with repeating cloning\n      // const p = self.stageRef.getAbsoluteTransform().copy().invert().point({ x, y });\n      // return [p.x, p.y];\n    },\n\n    // convert image coords to screen coords considering zoom\n    zoomOriginalCoords([x, y]) {\n      return [x * self.zoomScale + self.zoomingPositionX, y * self.zoomScale + self.zoomingPositionY];\n    },\n\n    /**\n     * @typedef {[number, number]|{ x: number, y: number }} Point\n     */\n\n    /**\n     * Wrap point operations to convert zoomed coords from screen to image and back\n     * Good for event handlers, receiving screen coords, but working with image coords\n     * Accepts both [x, y] and {x, y} points; preserves this format\n     * @param {(point: Point) => Point} fn wrapped function do some math with image coords\n     * @return {(point: Point) => Point} outer function do some math with screen coords\n     */\n    fixForZoom(fn) {\n      return p => {\n        const asArray = p.x === undefined;\n        const [x, y] = self.fixZoomedCoords(asArray ? p : [p.x, p.y]);\n        const modified = fn(asArray ? [x, y] : { x, y });\n        const zoomed = self.zoomOriginalCoords(asArray ? modified : [modified.x, modified.y]);\n        return asArray ? zoomed : { x: zoomed[0], y: zoomed[1] };\n      };\n    },\n\n    /**\n     * Resize of image canvas\n     * @param {*} width\n     * @param {*} height\n     */\n    onResize(width, height, userResize) {\n      self._updateImageSize({ width, height, userResize });\n    },\n\n    event(name, ev, ...coords) {\n      self.getToolsManager().event(name, ev.evt || ev, ...self.fixZoomedCoords(coords));\n    },\n\n    /**\n     * Transform JSON data (completions and predictions) to format\n     */\n    fromStateJSON(obj, fromModel) {\n      const tools = self.getToolsManager().allTools();\n\n      // when there is only the image classification and nothing else, we need to handle it here\n      if (tools.length === 0 && obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n\n        return;\n      }\n\n      tools.forEach(t => t.fromStateJSON && t.fromStateJSON(obj, fromModel));\n    },\n  }));\n\nconst ImageModel = types.compose(\"ImageModel\", TagAttrs, Model, ProcessAttrsMixin, ObjectBase);\n\nconst HtxImage = inject(\"store\")(observer(ImageView));\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\n\nexport { ImageModel, HtxImage };\n","import { types, getParentOfType } from \"mobx-state-tree\";\n\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport SpanTextMixin from \"../mixins/SpanText\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { LabelsModel } from \"../tags/control/Labels\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { ChoicesModel } from \"../tags/control/Choices\";\nimport { RatingModel } from \"../tags/control/Rating\";\nimport { TextModel } from \"../tags/object/Text\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    type: \"textrange\",\n\n    startOffset: types.integer,\n    start: types.string,\n    endOffset: types.integer,\n    end: types.string,\n\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(LabelsModel, TextAreaModel, ChoicesModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextModel);\n    },\n  }))\n  .actions(self => ({\n    beforeDestroy() {\n      Utils.HTML.removeSpans(self._spans);\n    },\n\n    setText(text) {\n      self.text = text;\n    },\n\n    serialize(control, object) {\n      let res = {\n        value: {\n          start: self.startOffset,\n          end: self.endOffset,\n        },\n      };\n\n      if (object.savetextresult === \"yes\") {\n        res.value[\"text\"] = self.text;\n      }\n\n      res.value = Object.assign(res.value, control.serializableValue);\n\n      return res;\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n  SpanTextMixin,\n);\n\nexport { TextRegionModel };\n","import * as xpath from \"xpath-range\";\nimport React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport RegionsMixin from \"../../mixins/Regions\";\nimport Registry from \"../../core/Registry\";\nimport Utils from \"../../utils\";\nimport { TextRegionModel } from \"../../regions/TextRegion\";\nimport { cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { splitBoundaries } from \"../../utils/html\";\nimport { runTemplate } from \"../../core/Template\";\nimport styles from \"./Text/Text.module.scss\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\n\n/**\n * Text tag shows an Text markup that can be labeled\n * @example\n * <Text name=\"text-1\" value=\"$text\" granularity=\"symbol\" highlightColor=\"#ff0000\" />\n * @name Text\n * @param {string} name                      - name of the element\n * @param {string} value                     - value of the element\n * @param {boolean} [selectionEnabled=true]  - enable or disable selection\n * @param {string} [highlightColor]          - hex string with highlight color, if not provided uses the labels color\n * @param {symbol|word} [granularity=symbol] - control per symbol or word selection\n * @param {boolean} [showLabels=true]        - show labels next to the region\n * @param {string} [encoding=none|base64|base64unicode]  - decode value from encoded string\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n\n  valuetype: types.optional(types.enumeration([\"text\", \"url\"]), \"text\"),\n\n  savetextresult: types.optional(types.enumeration([\"none\", \"no\", \"yes\"]), \"none\"),\n\n  selectionenabled: types.optional(types.boolean, true),\n\n  highlightcolor: types.maybeNull(types.string),\n  // matchlabel: types.optional(types.boolean, false),\n\n  // [TODO]\n  showlabels: types.optional(types.boolean, true),\n\n  granularity: types.optional(types.enumeration([\"symbol\", \"word\", \"sentence\", \"paragraph\"]), \"symbol\"),\n\n  encoding: types.optional(types.enumeration([\"none\", \"base64\", \"base64unicode\"]), \"none\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"text\",\n    loaded: types.optional(types.boolean, false),\n    regions: types.array(TextRegionModel),\n    _value: types.optional(types.string, \"\"),\n    _update: types.optional(types.number, 1),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => s.isSelected && s._type === \"labels\");\n    },\n  }))\n  .actions(self => ({\n    setRef(ref) {\n      self._ref = ref;\n    },\n\n    needsUpdate() {\n      self._update = self._update + 1;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n\n      if (self.valuetype === \"url\") {\n        const url = self._value;\n        if (!/^https?:\\/\\//.test(url)) {\n          InfoModal.error(`URL (${url}) is not valid`);\n          self.loadedValue(\"\");\n          return;\n        }\n        fetch(url)\n          .then(res => {\n            if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);\n            return res.text();\n          })\n          .then(self.loadedValue)\n          .catch(e => {\n            InfoModal.error(`Loading URL (${url}) unsuccessful: ${e}`);\n            self.loadedValue(\"\");\n          });\n      } else {\n        self.loadedValue(self._value);\n      }\n    },\n\n    loadedValue(val) {\n      self.loaded = true;\n      if (self.encoding === \"base64\") val = atob(val);\n      if (self.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n      self._value = val;\n\n      self._regionsCache.forEach(({ region, completion }) => {\n        region.setText(self._value.substring(region.startOffset, region.endOffset));\n        self.regions.push(region);\n        completion.addRegion(region);\n      });\n\n      self._regionsCache = [];\n    },\n\n    afterCreate() {\n      self._regionsCache = [];\n\n      // security measure, if valuetype is set to url then LS\n      // doesn't save the text into the result, otherwise it does\n      // can be aslo directly configured\n      if (self.savetextresult === \"none\") {\n        if (self.valuetype === \"url\") self.savetextresult = \"no\";\n        else if (self.valuetype === \"text\") self.savetextresult = \"yes\";\n      }\n    },\n\n    createRegion(p) {\n      const r = TextRegionModel.create(p);\n\n      r._range = p._range;\n\n      if (self.valuetype === \"url\" && self.loaded === false) {\n        self._regionsCache.push({ region: r, completion: self.completion });\n        return;\n      }\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.getAvailableStates();\n      if (states.length === 0) return;\n\n      const clonedStates = states.map(s => cloneNode(s));\n\n      const r = self.createRegion({ ...range, states: clonedStates });\n\n      return r;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n      let m;\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      if (!fm.perregion && fromModel.type !== \"labels\") return;\n\n      const { start, end } = obj.value;\n\n      r = self.findRegion({ startOffset: obj.value.start, endOffset: obj.value.end });\n\n      if (fromModel) {\n        m = restoreNewsnapshot(fromModel);\n        // m.fromStateJSON(obj);\n\n        if (r && fromModel.perregion) {\n          r.states.push(m);\n        } else {\n          // tree.states = [m];\n          const data = {\n            pid: obj.id,\n            parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n            startOffset: start,\n            endOffset: end,\n            start: \"\",\n            end: \"\",\n            score: obj.score,\n            readonly: obj.readonly,\n            text: self._value.substring(start, end),\n            normalization: obj.normalization,\n            states: [m],\n          };\n\n          r = self.createRegion(data);\n          // r = self.addRegion(tree);\n        }\n      }\n\n      // states.fromStateJSON(obj);\n\n      // r.updateAppearenceFromState();\n\n      return r;\n\n      // self.createRegion(tree);\n      // self.needsUpdate();\n    },\n  }));\n\nconst TextModel = types.compose(\"TextModel\", RegionsMixin, TagAttrs, Model, ObjectBase);\n\nclass HtxTextView extends Component {\n  render() {\n    const { item, store } = this.props;\n\n    if (!item._value) return null;\n\n    return <HtxTextPieceView store={store} item={item} />;\n  }\n}\n\nclass TextPieceView extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  getValue() {\n    const { item, store } = this.props;\n\n    let val = runTemplate(item.value, store.task.dataObj);\n    if (item.encoding === \"base64\") val = atob(val);\n    if (item.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n    return val;\n  }\n\n  alignWord(r, start, end) {\n    const val = this.getValue();\n    const strleft = val.substring(0, start);\n    const r2 = r.cloneRange();\n\n    if (strleft.length > 0) {\n      let idxSpace = strleft.lastIndexOf(\" \");\n      let idxNewline = strleft.lastIndexOf(\"\\n\");\n\n      let idx = idxSpace > idxNewline ? idxSpace : idxNewline;\n\n      if (idx === -1) {\n        r2.setStart(r.startContainer, 0);\n      }\n\n      if (idx > 0) {\n        const { node, len } = Utils.HTML.findIdxContainer(this.myRef, idx + 1);\n        r2.setStart(node, len);\n      }\n    }\n\n    const strright = val.substring(end, val.length);\n\n    if (strright.length > 0) {\n      let idxSpace = strright.indexOf(\" \");\n      let idxNewline = strright.indexOf(\"\\n\");\n\n      let idx;\n\n      if (idxNewline === -1) idx = idxSpace;\n      if (idxSpace === -1) idx = idxNewline;\n\n      if (idxNewline > 0 && idxSpace > 0) {\n        idx = idxSpace > idxNewline ? idxNewline : idxSpace;\n      }\n\n      idx = idx + end;\n\n      if (idx === -1) {\n        r2.setEnd(r.endContainer, r.endContainer.length);\n      }\n\n      if (idx > 0) {\n        const { node, len } = Utils.HTML.findIdxContainer(this.myRef, idx + 1);\n        r2.setEnd(node, len > 0 ? len - 1 : 0);\n      }\n    }\n\n    return r2;\n  }\n\n  alignRange(r) {\n    const item = this.props.item;\n\n    if (item.granularity === \"symbol\") return r;\n\n    const { start, end } = Utils.HTML.mainOffsets(this.myRef);\n\n    // given gobal position and selection node find node\n    // with correct position\n    if (item.granularity === \"word\") {\n      return this.alignWord(r, start, end);\n    }\n\n    if (item.granularity === \"sentence\") {\n    }\n\n    if (item.granularity === \"paragraph\") {\n    }\n  }\n\n  captureDocumentSelection() {\n    var i,\n      self = this,\n      ranges = [],\n      rangesToIgnore = [],\n      selection = window.getSelection();\n\n    if (selection.isCollapsed) return [];\n\n    for (i = 0; i < selection.rangeCount; i++) {\n      var r = selection.getRangeAt(i);\n\n      if (r.endContainer.nodeName === \"DIV\") {\n        r.setEnd(r.startContainer, r.startContainer.length);\n      }\n\n      r = this.alignRange(r);\n\n      if (r.collapsed || /^\\s*$/.test(r.toString())) continue;\n\n      try {\n        var normedRange = xpath.fromRange(r, self.myRef);\n\n        splitBoundaries(r);\n\n        normedRange._range = r;\n\n        // Range toString() uses only text nodes content\n        // so to extract original new lines made into <br>s we should get all the tags\n        const tags = Array.from(r.cloneContents().childNodes);\n        // and convert every <br> back to new line\n        const text = tags.reduce((str, node) => (str += node.tagName === \"BR\" ? \"\\n\" : node.textContent), \"\");\n        normedRange.text = text;\n\n        const ss = Utils.HTML.toGlobalOffset(self.myRef, r.startContainer, r.startOffset);\n        const ee = Utils.HTML.toGlobalOffset(self.myRef, r.endContainer, r.endOffset);\n\n        normedRange.startOffset = ss;\n        normedRange.endOffset = ee;\n\n        // If the new range falls fully outside our this.element, we should\n        // add it back to the document but not return it from this method.\n        if (normedRange === null) {\n          rangesToIgnore.push(r);\n        } else {\n          ranges.push(normedRange);\n        }\n      } catch (err) {}\n    }\n\n    // BrowserRange#normalize() modifies the DOM structure and deselects the\n    // underlying text as a result. So here we remove the selected ranges and\n    // reapply the new ones.\n    selection.removeAllRanges();\n\n    return ranges;\n  }\n\n  onClick(ev) {\n    // console.log('click');\n  }\n\n  onMouseUp(ev) {\n    const item = this.props.item;\n    if (!item.selectionenabled) return;\n\n    const states = item.activeStates();\n    if (!states || states.length === 0) return;\n\n    var selectedRanges = this.captureDocumentSelection();\n    if (selectedRanges.length === 0) return;\n\n    // prevent overlapping spans from being selected right after this\n    item._currentSpan = null;\n\n    const htxRange = item.addRegion(selectedRanges[0]);\n    if (htxRange) {\n      const spans = htxRange.createSpans();\n      htxRange.addEventsToSpans(spans);\n    }\n  }\n\n  _handleUpdate() {\n    const root = this.myRef;\n    const { item } = this.props;\n\n    item.regions.forEach(function(r) {\n      const findNode = (el, pos) => {\n        let left = pos;\n        const traverse = node => {\n          if (node.nodeName === \"#text\") {\n            if (left - node.length <= 0) return { node, left };\n\n            left = left - node.length;\n          }\n\n          if (node.nodeName === \"BR\") {\n            if (left - 1 < 0) return { node, left };\n\n            left = left - 1;\n          }\n\n          for (var i = 0; i <= node.childNodes.length; i++) {\n            const n = node.childNodes[i];\n            if (n) {\n              const res = traverse(n);\n              if (res) return res;\n            }\n          }\n        };\n\n        return traverse(el);\n      };\n\n      const ss = findNode(root, r.startOffset);\n      const ee = findNode(root, r.endOffset);\n\n      // if (! ss || ! ee)\n      //     return;\n\n      const range = document.createRange();\n      range.setStart(ss.node, ss.left);\n      range.setEnd(ee.node, ee.left);\n\n      splitBoundaries(range);\n\n      r._range = range;\n\n      const spans = r.createSpans();\n      r.addEventsToSpans(spans);\n    });\n  }\n\n  componentDidUpdate() {\n    this._handleUpdate();\n  }\n\n  componentDidMount() {\n    this._handleUpdate();\n  }\n\n  render() {\n    const { item } = this.props;\n\n    if (!item.loaded) return null;\n\n    const val = item._value.split(\"\\n\").reduce((res, s, i) => {\n      if (i) res.push(<br key={i} />);\n      res.push(s);\n      return res;\n    }, []);\n\n    return (\n      <ObjectTag item={item}>\n        <div\n          ref={ref => {\n            this.myRef = ref;\n            item.setRef(ref);\n          }}\n          className={styles.block + \" htx-text\"}\n          data-update={item._update}\n          onMouseUp={this.onMouseUp.bind(this)}\n        >\n          {val}\n        </div>\n      </ObjectTag>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\nconst HtxTextPieceView = inject(\"store\")(observer(TextPieceView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\n\nexport { TextModel, HtxText };\n","import React from \"react\";\nimport arrayMove from \"array-move\";\nimport { List } from \"antd\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\"ListModel\", TagAttrs, Model);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { runTemplate } from \"../../core/Template\";\nimport ControlBase from \"./Base\";\n\n/**\n * Pairwise element. Compare two different objects, works with any label studio object\n * @example\n * <View>\n *   <Pairwise name=\"pairwise\" leftClass=\"text1\" rightClass=\"text2\" toName=\"txt-1,txt-2\"></Pairwise>\n *   <Text name=\"txt-1\" value=\"Text 1\" />\n *   <Text name=\"txt-2\" value=\"Text 2\" />\n * </View>\n * @example\n * You can also style the appearence using the View tag:\n * <View>\n *   <Pairwise name=\"pw\" toName=\"txt-1,txt-2\"></Pairwise>\n *   <View style=\"display: flex;\">\n *     <View style=\"margin-right: 1em;\"><Text name=\"txt-1\" value=\"$text1\" /></View>\n *     <View><Text name=\"txt-2\" value=\"$text2\" /></View>\n *   </View>\n * </View>\n * @name Pairwise\n * @param {string} name               - name of the element\n * @param {string} toName             - names of the elements you want to compare\n * @param {string} [selectionStyle]   - style of the selection\n * @params {string} [leftClass=left]  - class name of the left object\n * @params {string} [rightClass=left] - class name of the right object\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n  selectionstyle: types.maybeNull(types.string),\n  leftclass: types.maybeNull(types.string),\n  rightclass: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"pairwise\",\n    selected: types.maybeNull(types.enumeration([\"left\", \"right\", \"none\"])),\n  })\n  .views(self => ({\n    get completion() {\n      return Types.getParentOfTypeString(self, \"Completion\");\n    },\n  }))\n  .actions(self => ({\n    selectLeft() {\n      self.selected === \"left\" ? (self.selected = \"none\") : (self.selected = \"left\");\n    },\n\n    selectRight() {\n      self.selected === \"right\" ? (self.selected = \"none\") : (self.selected = \"right\");\n    },\n\n    afterCreate() {\n      let selection = {};\n      if (self.selectionstyle) {\n        const s = Tree.cssConverter(self.selectionstyle);\n        for (let key in s) {\n          selection[key] = s[key];\n        }\n      } else {\n        selection = {\n          backgroundColor: \"#f6ffed\",\n          border: \"1px solid #b7eb8f\",\n        };\n      }\n\n      self._selection = selection;\n    },\n\n    getLeftRight() {\n      if (!self.toname);\n      const names = self.toname.split(\",\");\n\n      if (names.length !== 2)\n        InfoModal.error(\n          `Incorrect toName parameter on Pairwise, should be two names separated by the comma: name1,name2`,\n        );\n\n      const left = self.completion.names.get(names[0]);\n      const right = self.completion.names.get(names[1]);\n\n      return { left: left, right: right };\n    },\n\n    completionAttached() {\n      const { left, right } = self.getLeftRight();\n\n      left.addProp(\"onClick\", () => {\n        self.selectLeft();\n        left.addProp(\"style\", self._selection);\n        right.addProp(\"style\", {});\n      });\n\n      right.addProp(\"onClick\", () => {\n        self.selectRight();\n        right.addProp(\"style\", self._selection);\n        left.addProp(\"style\", {});\n      });\n    },\n\n    toStateJSON() {\n      const store = getRoot(self);\n      let choice = self.selected === \"left\" ? self.leftclass : self.selected === \"right\" ? self.rightclass : null;\n\n      console.log(self.rightclass);\n      console.log(self.selected);\n      console.log(choice);\n\n      console.log(self.rightclass);\n\n      if (choice !== null) choice = [runTemplate(choice, store.task.dataObj)];\n\n      const obj = {\n        id: self.pid,\n        from_name: self.name,\n        to_name: self.name,\n        type: \"pairwise\",\n        value: {\n          selected: self.selected,\n        },\n      };\n\n      if (choice !== null) {\n        obj.value[\"pairwise\"] = choice;\n      }\n\n      return obj;\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n      self.selected = obj.value.selected;\n\n      const { left, right } = self.getLeftRight();\n\n      if (self.selected === \"left\") left.addProp(\"style\", self._selection);\n      if (self.selected === \"right\") right.addProp(\"style\", self._selection);\n    },\n  }));\n\nconst PairwiseModel = types.compose(\"PairwiseModel\", TagAttrs, Model, ControlBase);\n\nconst HtxPairwise = () => {\n  return null;\n};\n\nRegistry.addTag(\"pairwise\", PairwiseModel, HtxPairwise);\n\nexport { HtxPairwise, PairwiseModel };\n","import React from \"react\";\nimport arrayMove from \"array-move\";\nimport { List } from \"antd\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n * @example\n * <View>\n *   <Ranker name=\"ranker\" value=\"$items\"></Ranker>\n * </View>\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.boolean, true),\n  sortable: types.optional(types.boolean, true),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\"RankerModel\", TagAttrs, Model);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","import React from \"react\";\nimport { Tag } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParent } from \"mobx-state-tree\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\n/**\n * Shortcut tag can be used to define a shortcut, which adds a predefined object\n * @example\n * <View>\n *   <TextArea name=\"txt-1\">\n *     <Shortcut alias=\"Silence\" value=\"<SILENCE>\" hotkey=\"ctrl+1\" />\n *   </TextArea>\n * </View>\n * @name Shortcut\n * @param {string} value A value of the shortcut\n * @param {string} [alias] Shortcut alias\n * @param {string} [hotkey] Hotkey\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"shortcut\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hotkeyScope() {\n      const p = getParent(getParent(self));\n      return p.name;\n    },\n  }))\n  .actions(self => ({\n    onClick() {\n      const p = getParent(getParent(self));\n\n      if (p.onShortcut) p.onShortcut(self.value);\n    },\n\n    onHotKey() {\n      return self.onClick();\n    },\n  }));\n\nconst ShortcutModel = types.compose(\"ShortcutModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nconst HtxShortcutView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.onClick();\n          return false;\n        }}\n        style={bg}\n      >\n        {item.alias ? item.alias : item._value}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"shortcut\", ShortcutModel, HtxShortcutView);\n\nexport { HtxShortcutView, ShortcutModel };\n","import { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Relations tag, create relations labels\n * @example\n * <View>\n *   <Relations>\n *     <Relation value=\"hello\" />\n *     <Relation value=\"world\" />\n *   </Relations>\n *   <Text name=\"txt-1\" value=\"$text\" />\n *   <Labels name=\"lbl-1\" toName=\"txt-1\">\n *     <Label value=\"Relevant\" />\n *     <Label value=\"Not Relevant\" />\n *   </Labels>\n * </View>\n * @name Relations\n * @param {single|multiple=} [choice=single] configure if you can select just one or multiple labels\n */\nconst TagAttrs = types.model({\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"multiple\"),\n});\n\n/**\n * @param {boolean} showinline\n * @param {identifier} id\n * @param {string} pid\n */\nconst ModelAttrs = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"relations\",\n    children: Types.unionArray([\"relations\", \"relation\"]),\n  })\n  .views(self => ({\n    getSelected() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    selectedValues() {\n      return self.getSelected().map(c => c.value);\n    },\n\n    findRelation(value) {\n      return self.children.find(c => c.value === value);\n    },\n  }))\n  .actions(self => ({\n    unselectAll() {\n      self.children.map(c => c.setSelected(false));\n    },\n  }));\n\nconst RelationsModel = types.compose(\"RelationsModel\", ModelAttrs, TagAttrs, ControlBase);\n\nconst HtxRelations = () => {\n  return null;\n};\n\nRegistry.addTag(\"relations\", RelationsModel, HtxRelations);\n\nexport { HtxRelations, RelationsModel };\n","import { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Constants from \"../../core/Constants\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\n/**\n * Relation tag represents a single relation label\n * @example\n * <View>\n *   <Relations>\n *     <Relation value=\"Name 1\" />\n *     <Relation value=\"Name 2\" />\n *   </Relations>\n * </View>\n * @name Relation\n * @param {string} value - value of the relation\n * @param {string} [background] - background color of active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  background: types.optional(types.string, Constants.RELATION_BACKGROUND),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    selected: types.optional(types.boolean, false),\n    type: \"relation\",\n  })\n  .actions(self => ({\n    setSelected(value) {\n      self.selected = value;\n    },\n  }));\n\nconst RelationModel = types.compose(\"RelationModel\", TagAttrs, Model);\n\nconst HtxRelationView = () => {\n  return null;\n};\n\nRegistry.addTag(\"relation\", RelationModel, HtxRelationView);\n\nexport { HtxRelationView, RelationModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let hint;\n    let bgColor;\n    let date;\n\n    if (this.props.hint) {\n      hint = <Tag color=\"blue\">{this.props.hint}</Tag>;\n    }\n\n    if (this.props.bg) {\n      bgColor = this.props.bg;\n    }\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      hint = (\n        <div>\n          <Tag color=\"magenta\">Selected Message</Tag>\n        </div>\n      );\n\n      if (this.props.hint) {\n        hint = (\n          <div className={styles.tag}>\n            <Tag color=\"magenta\">{this.props.hint}</Tag>\n          </div>\n        );\n      }\n    }\n\n    if (this.props.date) {\n      date = <span className={styles.date}>{this.props.date}</span>;\n    }\n\n    return (\n      <div className={selectedStyle} style={{ background: bgColor, width: \"max-content\", maxWidth: \"100%\" }}>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n        {date}\n        {hint}\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  date: PropTypes.string,\n  hint: PropTypes.string,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { Divider, Empty } from \"antd\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { stringToColor, convertToRGBA } from \"../../utils/colors\";\n\n/**\n * Dialog tag renders a dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name name of the element\n * @param {object} value value of the element\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n  date: types.optional(types.string, \"\"),\n  hint: types.optional(types.string, \"\"),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction DialogActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.map(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => DialogActions(self));\n\nconst DialogModel = types.compose(\"DialogModel\", TagAttrs, Model);\n\nconst HtxDialogView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task || !store.task.dataObj) {\n      return <Empty />;\n    }\n\n    let result = [];\n    let name = item.value;\n\n    if (name.charAt(0) === \"$\") {\n      name = name.substr(1);\n    }\n\n    store.task.dataObj[name].forEach((item, ind) => {\n      let bgColor;\n\n      if (item.name) {\n        bgColor = convertToRGBA(stringToColor(item.name), 0.1);\n      }\n\n      result.push(\n        <DialogView\n          key={ind}\n          name={item.name}\n          hint={item.hint}\n          text={item.text}\n          selected={item.selected}\n          date={item.date}\n          id={item.id}\n          bg={bgColor}\n        />,\n      );\n    });\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            maxHeight: \"500px\",\n            overflowY: \"scroll\",\n            paddingRight: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {result}\n        </div>\n        <Divider dashed={true} />\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialogView);\n\nexport { DialogModel, HtxDialogView };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Header tag, show header\n * @example\n * <Header name=\"text-1\" value=\"$text\" />\n * @example\n * <Header name=\"text-1\" value=\"Please select the class\" />\n * @name Header\n * @param {string} value              - text of header\n * @param {number} [size=4]           - size of header\n * @param {string} [style]            - css style string\n * @param {boolean} [underline=false] - underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.string, \"4\"),\n  style: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\"HeaderModel\", Model, ProcessAttrsMixin);\n\nconst HtxHeader = observer(({ item }) => {\n  const size = parseInt(item.size);\n  const style = item.style ? Tree.cssConverter(item.style) : { margin: \"10px 0\" };\n\n  if (!style.fontSize && size > 4) {\n    style.fontSize = size === 5 ? \"1.2em\" : \"1.1em\";\n  }\n\n  return (\n    <Typography.Title underline={item.underline} level={size} style={style}>\n      {item._value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types\n  .model({\n    type: \"table\",\n    value: types.maybeNull(types.string),\n    // _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get _value() {\n      if (!self.value) return undefined;\n\n      const store = getRoot(self);\n      const val = self.value.substr(1);\n      return store.task.dataObj[val];\n    },\n  }));\n\nconst TableModel = types.compose(\"TableModel\", Model);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    const columns = [\n      { title: \"Name\", dataIndex: \"type\" },\n      { title: \"Value\", dataIndex: \"value\" },\n    ];\n\n    console.log(item._value);\n    console.log(Object.keys(value));\n\n    const dataSource = Object.keys(value).map(k => {\n      let val = value[k];\n\n      if (typeof val === \"object\") val = JSON.stringify(val);\n\n      return { type: k, value: val };\n    });\n\n    return <Table bordered dataSource={dataSource} columns={columns} pagination={{ hideOnSinglePage: true }} />;\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport VisibilityMixin from \"../../mixins/Visibility\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *   <View style=\"flex: 50%\">\n *     <Header value=\"Facts:\" />\n *     <Text name=\"text\" value=\"$fact\" />\n *   </View>\n *   <View style=\"flex: 50%; margin-left: 1em\">\n *     <Header value=\"Enter your question:\" />\n *     <TextArea name=\"question\" />\n *   </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {string} [style] css style string\n * @param {string} [className] - class name of the css style to apply\n * @param {region-selected|choice-selected|no-region-selected} [visibleWhen] show the contents of a view when condition is true\n * @param {string} [whenTagName] narrow down visibility by name of the tag, for regions use the name of the object tag, for choices use the name of the choices tag\n * @param {string} [whenLabelValue] narrow down visibility by label value\n * @param {string} [whenChoiceValue] narrow down visibility by choice value\n */\nconst TagAttrs = types.model({\n  classname: types.optional(types.string, \"\"),\n  display: types.optional(types.string, \"block\"),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"view\",\n    children: Types.unionArray([\n      \"view\",\n      \"header\",\n      \"labels\",\n      \"label\",\n      \"table\",\n      \"choices\",\n      \"choice\",\n      \"rating\",\n      \"ranker\",\n      \"rectangle\",\n      \"ellipse\",\n      \"polygon\",\n      \"keypoint\",\n      \"brush\",\n      \"rectanglelabels\",\n      \"ellipselabels\",\n      \"polygonlabels\",\n      \"keypointlabels\",\n      \"brushlabels\",\n      \"hypertextlabels\",\n      \"text\",\n      \"audio\",\n      \"image\",\n      \"hypertext\",\n      \"audioplus\",\n      \"list\",\n      \"dialog\",\n      \"textarea\",\n      \"pairwise\",\n      \"style\",\n      \"label\",\n      \"relations\",\n      \"filter\",\n    ]),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst ViewModel = types.compose(\"ViewModel\", TagAttrs, Model, VisibilityMixin);\n\nconst HtxView = observer(({ item, store }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  if (item.isVisible === false) {\n    style[\"display\"] = \"none\";\n  }\n\n  return (\n    <div className={item.classname} style={style}>\n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\n\n/**\n * Style tag, add css styles right through the config\n * @example\n * <View>\n *   <Style> .cls-name { background: red; }</Style>\n *   <View className=\"cls-name\">\n *     <Header value=\"Header\" />\n *   </View>\n * </View>\n * @name Style\n */\nconst Model = types.model({\n  type: \"style\",\n  value: types.optional(types.string, \"\"),\n});\nconst StyleModel = types.compose(\"StyleModel\", Model);\n\nconst HtxStyle = observer(({ item }) => {\n  return <style dangerouslySetInnerHTML={{ __html: item.value }}></style>;\n});\n\nRegistry.addTag(\"style\", StyleModel, HtxStyle);\n\nexport { HtxStyle, StyleModel };\n","import React from \"react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Input } from \"antd\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\n\n/**\n * Filter tag, show filter\n * @example\n * <Filter name=\"text-1\" value=\"$text\" />\n * @example\n * <Filter name=\"text-1\" value=\"Please select the class\" />\n * @name Filter\n * @param {string} value              - text of filter\n * @param {number} [size=4]           - size of filter\n * @param {string} [style]            - css style string\n * @param {boolean} [underline=false] - underline of filter\n */\n\nconst TagAttrs = types.model({\n  casesensetive: types.optional(types.boolean, false),\n\n  cleanup: types.optional(types.boolean, true),\n\n  placeholder: types.optional(types.string, \"Quick Filter\"),\n  minlength: types.optional(types.string, \"3\"),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"filter\",\n    _value: types.maybeNull(types.string),\n    name: types.maybeNull(types.string),\n    toname: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get toTag() {\n      return self.completion.names.get(self.toname);\n    },\n  }))\n  .actions(self => ({\n    applyFilter() {\n      let value = self._value;\n      const tch = self.toTag.tiedChildren;\n\n      if (Number(self.minlength) > value.length) {\n        tch.filter(ch => !ch.visible).forEach(ch => ch.setVisible(true));\n        return;\n      }\n\n      if (!self.casesensetive) value = value.toLowerCase();\n\n      tch.forEach(ch => {\n        let chval = ch._value;\n        if (!self.casesensetive) chval = chval.toLowerCase();\n\n        if (chval.indexOf(value) !== -1) ch.setVisible(true);\n        else ch.setVisible(false);\n      });\n    },\n\n    applyFilterEv(e) {\n      let { value } = e.target;\n      self._value = value;\n\n      self.applyFilter();\n    },\n\n    onHotKey() {\n      if (self._ref) {\n        self._ref.focus();\n      }\n\n      return false;\n    },\n\n    setInputRef(ref) {\n      self._ref = ref;\n    },\n\n    selectFirstElement() {\n      const selected = self.toTag.selectFirstVisible();\n      if (selected && self.cleanup) {\n        self._value = \"\";\n        self.applyFilter();\n      }\n    },\n  }));\n\nconst FilterModel = types.compose(\"FilterModel\", Model, TagAttrs, ProcessAttrsMixin);\n\nconst HtxFilter = observer(({ item }) => {\n  const tag = item.toTag;\n\n  if (tag.type.indexOf(\"labels\") === -1 && tag.type.indexOf(\"choices\") === -1) return null;\n\n  return (\n    <Input\n      ref={ref => {\n        item.setInputRef(ref);\n      }}\n      value={item._value}\n      size=\"small\"\n      /* addonAfter={\"clear\"} */\n      onChange={item.applyFilterEv}\n      onPressEnter={item.selectFirstElement}\n      placeholder={item.placeholder}\n    />\n  );\n});\n\nRegistry.addTag(\"filter\", FilterModel, HtxFilter);\n\nexport { HtxFilter, FilterModel };\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport { Result, Spin } from \"antd\";\nimport { getEnv } from \"mobx-state-tree\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport MessageDialog from \"../Modal/MessageDialog/MessageDialog\";\n\n/**\n * Core\n */\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Debug from \"../Debug\";\nimport Panel from \"../Panel/Panel\";\nimport Predictions from \"../Predictions/Predictions\";\nimport Segment from \"../Segment/Segment\";\nimport Settings from \"../Settings/Settings\";\nimport SideColumn from \"../SideColumn/SideColumn\";\nimport RTL from \"../../hoc/RTL/RTL\";\n\n/**\n * Tags\n */\nimport * as ObjectTags from \"../../tags/object\"; // eslint-disable-line no-unused-vars\nimport * as ControlTags from \"../../tags/control\"; // eslint-disable-line no-unused-vars\nimport * as VisualTags from \"../../tags/visual\"; // eslint-disable-line no-unused-vars\n\n/**\n * Styles\n */\nimport styles from \"./AnnotateApp.module.scss\";\nimport \"./AnnotateApp.css\";\nimport { css } from \"@mui/styled-engine\";\n\n/**\n * App\n */\nconst AnnotateApp = inject(\"store\")(\n  observer(\n    class App extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          tree: null,\n          setTree: false,\n        };\n      }\n      renderSuccess() {\n        return <Result status=\"success\" title={getEnv(this.props.store).messages.DONE} />;\n      }\n\n      renderNoCompletion() {\n        return <Result status=\"success\" title={getEnv(this.props.store).messages.NO_COMP_LEFT} />;\n      }\n\n      renderNothingToLabel() {\n        return <Result status=\"success\" title={getEnv(this.props.store).messages.NO_NEXT_TASK} />;\n      }\n\n      renderNoAccess() {\n        return <Result status=\"warning\" title={getEnv(this.props.store).messages.NO_ACCESS} />;\n      }\n\n      renderLoader() {\n        return <Result icon={<Spin size=\"large\" />} />;\n      }\n\n      _renderAll(obj) {\n        if (obj.length === 1) return <Segment>{[Tree.renderItem(obj[0].root)]}</Segment>;\n\n        return (\n          <div className=\"ls-renderall\">\n            {obj.map(c => (\n              <div className=\"ls-fade\">\n                <Segment>{[Tree.renderItem(c.root)]}</Segment>\n              </div>\n            ))}\n          </div>\n        );\n      }\n\n      renderAllCompletions() {\n        return this._renderAll(this.props.store.completionStore.completions);\n      }\n\n      renderAllPredictions() {\n        return this._renderAll(this.props.store.completionStore.predictions);\n      }\n\n      componentDidMount() {\n        const rectangleLabelsModel = document.getElementById(\"RectangleLabelsModel\");\n        if (rectangleLabelsModel) {\n          const viewModel = document.getElementById(\"ViewModel\").childNodes[0];\n          viewModel.classList.add(\"view-model\");\n          const sideModel = document.createElement(\"div\");\n          sideModel.setAttribute(\"id\", \"sideModel\");\n          sideModel.classList.add(\"side-model\");\n          viewModel.appendChild(sideModel);\n          const choicesView = document.getElementById(\"ChoicesModel\");\n          sideModel.appendChild(choicesView);\n          const textAreaModel = document.getElementById(\"TextAreaModel\");\n          sideModel.appendChild(textAreaModel);\n          sideModel.appendChild(rectangleLabelsModel);\n        }\n      }\n\n      createSuitableRoot = root => {\n        let children = root.children.map(m => {\n          return m.type;\n        });\n\n        children = children.sort();\n        const textOnImageModels = [\"rectanglelabels\", \"choices\", \"textarea\", \"image\"].sort();\n\n        if (children.every((val, index) => val === textOnImageModels[index])) {\n          return Tree.renderItem(root, true);\n        } else {\n          return Tree.renderItem(root);\n        }\n      };\n\n      render() {\n        const self = this;\n        const { store } = self.props;\n        const cs = store.completionStore;\n        const root = cs.selected && cs.selected.root;\n        const { settings } = store;\n\n        const elements = this.createSuitableRoot(root);\n\n        if (store.isLoading) return self.renderLoader();\n\n        if (store.noTask) return self.renderNothingToLabel();\n\n        if (store.noAccess) return self.renderNoAccess();\n\n        if (store.labeledSuccess) return self.renderSuccess();\n\n        if (!root) return self.renderNoCompletion();\n\n        const stEditor = settings.fullscreen ? styles.editorfs : styles.editor;\n        const stCommon = settings.bottomSidePanel ? styles.commonbsp : styles.common;\n        const stMenu = settings.bottomSidePanel ? styles.menubsp : styles.menu;\n\n        return (\n          <RTL>\n            <div className={stEditor + \" ls-editor\" + \" app-container\"}>\n              <Settings store={store} />\n              <Provider store={store}>\n                <div>\n                  {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n                  {store.showingDescription && (\n                    <MessageDialog\n                      isOpen={store.showingDescription}\n                      closeDialog={() => {\n                        if (store.showingDescription) {\n                          store.toggleDescription();\n                          console.log(\"Close\");\n                        }\n                      }}\n                      messageText={store.description}\n                    />\n                  )}\n\n                  {/* <div className={styles.pins}> */}\n                  {/*   <div style={{ width: \"100%\", marginRight: \"20px\" }}><PushpinOutlined /></div> */}\n                  {/*   <div className={styles.pinsright}><PushpinOutlined /></div> */}\n                  {/* </div> */}\n\n                  <div className={stCommon + \" ls-common segment-container-left-menu\"}>\n                    {!cs.viewingAllCompletions && !cs.viewingAllPredictions && (\n                      <Segment\n                        className={\n                          settings.bottomSidePanel\n                            ? \"\"\n                            : styles.segment + \" ls-segment segment-block-container-left-menu\"\n                        }\n                      >\n                        {elements}\n                        {/* {this.state.tree} */}\n                        {store.hasInterface(\"controls\") && <Controls item={cs.selected} />}\n                      </Segment>\n                    )}\n                    {cs.viewingAllCompletions && this.renderAllCompletions()}\n                    {cs.viewingAllPredictions && this.renderAllPredictions()}\n\n                    <div className={stMenu + \" ls-menu\"}>\n                      {store.hasInterface(\"completions:menu\") && <Completions store={store} />}\n                      {/* {store.hasInterface(\"predictions:menu\") && <Predictions store={store} />} */}\n                      {store.hasInterface(\"side-column\") && !cs.viewingAllCompletions && !cs.viewingAllPredictions && (\n                        <SideColumn store={store} />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </Provider>\n              {store.hasInterface(\"debug\") && <Debug store={store} />}\n            </div>\n          </RTL>\n        );\n      }\n    },\n  ),\n);\n\nexport default AnnotateApp;\n","import { types } from \"mobx-state-tree\";\n\n// export { default as Zoom } from \"./Zoom\";\n// export { default as KeyPoint } from \"./KeyPoint\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\nimport { BrushRegionModel, HtxBrush } from \"./BrushRegion\";\nimport { HyperTextRegionModel } from \"./HyperTextRegion\";\nimport { KeyPointRegionModel, HtxKeyPoint } from \"./KeyPointRegion\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\nimport { PolygonRegionModel, HtxPolygon } from \"./PolygonRegion\";\nimport { RectRegionModel, HtxRectangle } from \"./RectRegion\";\nimport { EllipseRegionModel, HtxEllipse } from \"./EllipseRegion\";\nimport { TextAreaRegionModel, HtxTextAreaRegion } from \"./TextAreaRegion\";\nimport { TextRegionModel } from \"./TextRegion\";\n\nconst AllRegionsType = types.union(\n  AudioRegionModel,\n  BrushRegionModel,\n  EllipseRegionModel,\n  HyperTextRegionModel,\n  KeyPointRegionModel,\n  PolygonRegionModel,\n  RectRegionModel,\n  TextAreaRegionModel,\n  TextRegionModel,\n);\n\nexport {\n  AllRegionsType,\n  AudioRegionModel,\n  BrushRegionModel,\n  EllipseRegionModel,\n  HtxBrush,\n  HtxEllipse,\n  HtxKeyPoint,\n  HtxPolygon,\n  HtxRectangle,\n  HtxTextAreaRegion,\n  HyperTextRegionModel,\n  KeyPointRegionModel,\n  PolygonPoint,\n  PolygonPointView,\n  PolygonRegionModel,\n  RectRegionModel,\n  TextAreaRegionModel,\n  TextRegionModel,\n};\n","import { types, destroy } from \"mobx-state-tree\";\n\nimport { AllRegionsType } from \"../regions\";\n\nconst Normalization = types\n  .model(\"Normalization\", {\n    node1: types.reference(AllRegionsType),\n    node2: types.reference(AllRegionsType),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 === self.node2) {\n        self.node1.toggleHighlight();\n      } else {\n        self.node1.toggleHighlight();\n        self.node2.toggleHighlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"NormalizationStore\", {\n    normalizations: types.array(Normalization),\n  })\n  .actions(self => ({\n    findNormalization(node1, node2) {\n      if (!node2) {\n        return self.normalizations.find(rl => {\n          return rl.node1.id === node1.id || rl.node2.id === node1.id;\n        });\n      }\n\n      return self.normalizations.find(rl => {\n        return rl.node1.id === node1.id && rl.node2.id === node2.id;\n      });\n    },\n\n    addNormalization(node1, node2) {\n      if (self.findNormalization(node1, node2)) return;\n\n      const rl = Normalization.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      self.normalizations.unshift(rl);\n\n      return rl;\n    },\n\n    deleteNormalization(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeNormalization(node) {\n      // lookup $node and delete it's normalization\n      const rl = self.findNormalization(node);\n\n      if (rl) self.deleteNormalization(rl);\n    },\n  }));\n","import { types, getParent, getEnv, onPatch } from \"mobx-state-tree\";\n\nimport Hotkey from \"../core/Hotkey\";\nimport { AllRegionsType } from \"../regions\";\n\nexport default types\n  .model(\"RegionStore\", {\n    regions: types.array(types.safeReference(AllRegionsType)),\n\n    sort: types.optional(types.enumeration([\"date\", \"score\"]), \"date\"),\n    sortOrder: types.optional(types.enumeration([\"asc\", \"desc\"]), \"desc\"),\n\n    group: types.optional(types.enumeration([\"type\", \"label\"]), \"type\"),\n\n    view: types.optional(types.enumeration([\"regions\", \"labels\"]), \"regions\"),\n  })\n  .views(self => ({\n    get sortedRegions() {\n      const sorts = {\n        date: () => self.regions,\n        score: () => self.regions.sort((a, b) => a.score - b.score),\n      };\n\n      return sorts[self.sort]();\n      // TODO\n      // return (self.sortOrder === 'asc') ? r.slice().reverse() : r;\n    },\n\n    asTree(enrich) {\n      // every region has a parentID\n      // parentID is an empty string - \"\" if it's top level\n      // or it can contain a string key to the parent region\n      // [ { id: \"1\", parentID: \"\" }, { id: \"2\", parentID: \"1\" } ]\n      // would create a tree of two elements\n\n      const arr = self.regions;\n      const tree = [],\n        lookup = {};\n\n      arr.forEach((el, idx) => {\n        lookup[el.pid] = enrich(el, idx);\n        lookup[el.pid][\"item\"] = el;\n        lookup[el.pid][\"children\"] = [];\n      });\n\n      Object.keys(lookup).forEach(key => {\n        const el = lookup[key];\n        if (el[\"item\"].parentID !== \"\") {\n          lookup[el[\"item\"].parentID][\"children\"].push(el);\n        } else {\n          tree.push(el);\n        }\n      });\n\n      return tree;\n    },\n\n    asLabelsTree(enrich) {\n      // collect all label states into two maps\n      const labels = {};\n      const map = {};\n      self.regions.forEach(r => {\n        const l = r.labelsState;\n        if (l) {\n          const selected = l.selectedLabels;\n          selected &&\n            selected.forEach(s => {\n              labels[s._value] = s;\n              if (s._value in map) map[s._value].push(r);\n              else map[s._value] = [r];\n            });\n        }\n      });\n\n      // create the tree\n      let idx = 0;\n      const tree = Object.keys(labels).map(lname => {\n        const el = enrich(labels[lname], idx, true);\n        el[\"children\"] = map[lname].map(r => enrich(r, idx++));\n\n        return el;\n      });\n\n      return tree;\n    },\n  }))\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n      getEnv(self).onEntityCreate(region);\n    },\n\n    toggleSortOrder() {\n      if (self.sortOrder === \"asc\") self.sortOrder = \"desc\";\n      else self.sortOrder = \"asc\";\n    },\n\n    setView(view) {\n      self.view = view;\n    },\n\n    setSort(sort) {\n      self.sortOrder = \"desc\";\n      self.sort = sort;\n      self.initHotkeys();\n    },\n\n    setGroup(group) {\n      self.group = group;\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      // find regions that have that region as a parent\n      const children = self.filterByParentID(region.pid);\n      children && children.forEach(r => r.setParentID(region.parentID));\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n\n      getEnv(self).onEntityDelete(region);\n      self.initHotkeys();\n    },\n\n    findRegionID(id) {\n      return self.regions.find(r => r.id === id);\n    },\n\n    findRegion(pid) {\n      return self.regions.find(r => r.pid === pid);\n    },\n\n    filterByParentID(id) {\n      return self.regions.filter(r => r.parentID === id);\n    },\n\n    afterCreate() {\n      onPatch(self, patch => {\n        if ((patch.op === \"add\" || patch.op === \"delete\") && patch.path.indexOf(\"/regions/\") !== -1) {\n          self.initHotkeys();\n        }\n      });\n    },\n\n    // init Alt hotkeys for regions selection\n    initHotkeys() {\n      const PREFIX = \"alt+shift+\";\n      const keys = Hotkey.getKeys();\n      const rkeys = keys.filter(k => k.indexOf(PREFIX) !== -1);\n\n      rkeys.forEach(k => Hotkey.removeKey(k));\n\n      self.sortedRegions.forEach((r, n) => {\n        Hotkey.addKey(PREFIX + (n + 1), function() {\n          self.unselectAll();\n          r.selectRegion();\n        });\n      });\n\n      // this is added just for the reference to show up in the\n      // settings page\n      Hotkey.addKey(\"alt+shift+$n\", () => {}, \"Select a region\");\n    },\n\n    /**\n     * @param {boolean} tryToKeepStates try to keep states selected if such settings enabled\n     */\n    unselectAll(tryToKeepStates = false) {\n      self.regions.forEach(r => r.unselectRegion(tryToKeepStates));\n      getParent(self).setHighlightedNode(null);\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n\n    selectNext() {\n      const { regions } = self;\n      const idx = self.regions.findIndex(r => r.selected);\n      idx !== -1 && regions[idx].unselectRegion();\n\n      const next = regions[idx + 1] !== \"undefined\" ? regions[idx + 1] : regions[0];\n\n      next && next.selectRegion();\n    },\n  }));\n","import { types, destroy, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../core/Helpers\";\nimport { AllRegionsType } from \"../regions\";\nimport { RelationsModel } from \"../tags/control/Relations\";\nimport { TRAVERSE_SKIP } from \"../core/Tree\";\n\n/**\n * Relation between two different nodes\n */\nconst Relation = types\n  .model(\"Relation\", {\n    node1: types.reference(AllRegionsType),\n    node2: types.reference(AllRegionsType),\n    direction: types.optional(types.enumeration([\"left\", \"right\", \"bi\"]), \"right\"),\n\n    // labels\n    relations: types.maybeNull(RelationsModel),\n\n    showMeta: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, RelationStore);\n    },\n\n    get hasRelations() {\n      const r = self.relations;\n      return r && r.children && r.children.length > 0;\n    },\n  }))\n  .actions(self => ({\n    afterAttach() {\n      const root = getRoot(self);\n      const c = root.completionStore.selected;\n\n      // find <Relations> tag in the tree\n      let relations = null;\n      c.traverseTree(function(node) {\n        if (node.type === \"relations\") {\n          relations = node;\n          return TRAVERSE_SKIP;\n        }\n      });\n\n      if (relations !== null) {\n        self.relations = cloneNode(relations);\n      }\n    },\n\n    rotateDirection() {\n      const d = [\"left\", \"right\", \"bi\"];\n      let idx = d.findIndex(item => item === self.direction);\n\n      idx = idx + 1;\n      if (idx >= d.length) idx = 0;\n\n      self.direction = d[idx];\n    },\n\n    toggleHighlight() {\n      if (self.node1 === self.node2) {\n        self.node1.toggleHighlight();\n      } else {\n        self.node1.toggleHighlight();\n        self.node2.toggleHighlight();\n      }\n    },\n\n    toggleMeta() {\n      self.showMeta = !self.showMeta;\n    },\n  }));\n\nconst RelationStore = types\n  .model(\"RelationStore\", {\n    relations: types.array(Relation),\n  })\n  .actions(self => ({\n    findRelations(node1, node2) {\n      if (!node2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id === node1.id || rl.node2.id === node1.id;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id === node1.id && rl.node2.id === node2.id;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      // self.relations.unshift(rl);\n      self.relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        const s = {\n          from_id: r.node1.pid,\n          to_id: r.node2.pid,\n          type: \"relation\",\n          direction: r.direction,\n        };\n\n        if (r.relations) s[\"labels\"] = r.relations.selectedValues();\n\n        return s;\n      });\n    },\n\n    deserializeRelation(node1, node2, direction, labels) {\n      const rl = self.addRelation(node1, node2);\n      rl.direction = direction;\n\n      if (rl.relations && labels)\n        labels.forEach(l => {\n          const r = rl.relations.findRelation(l);\n          if (r) r.setSelected(true);\n        });\n    },\n  }));\n\nexport default RelationStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\n\n/**\n * Time Traveller\n */\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    history: types.array(types.frozen()),\n    undoIdx: -1,\n    targetPath: \"\",\n    skipNextUndoState: types.optional(types.boolean, false),\n\n    createdIdx: 1,\n\n    isFrozen: types.optional(types.boolean, false),\n    frozenIdx: -1,\n  })\n  .views(self => ({\n    get canUndo() {\n      // [TODO] since we initialize state a bit incorrectly we end up with 2 items in history\n      // before even any action takes place. To protect those items we keep them in history forever\n      return self.undoIdx > 1;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n        self.skipNextUndoState = true;\n        self.frozenIdx = self.undoIdx;\n      },\n\n      addUndoState(recorder) {\n        if (self.skipNextUndoState) {\n          /**\n           * Skip recording if this state was caused by undo / redo\n           */\n          self.skipNextUndoState = false;\n\n          return;\n        }\n\n        self.history.splice(self.undoIdx);\n        self.history.push(recorder);\n        self.undoIdx = self.history.length;\n      },\n\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // TODO: check if targetStore doesn't contain self\n        // if (contains(targetStore, self)) throw new Error(\"TimeTraveller shouldn't be recording itself. Please specify a sibling as taret, not some parent\")\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          self.addUndoState(getSnapshot(targetStore));\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n\n      undo() {\n        if (self.isFrozen && self.frozenIdx < self.undoIdx) return;\n\n        let newIdx = self.undoIdx - 1;\n\n        self.set(newIdx);\n      },\n\n      redo() {\n        let newIdx = self.undoIdx + 1;\n\n        self.set(newIdx);\n      },\n\n      set(idx) {\n        self.undoIdx = idx;\n        self.skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[idx]);\n      },\n\n      reset() {\n        self.set(self.createdIdx);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import { types, getParent, getEnv, getRoot, destroy, detach } from \"mobx-state-tree\";\n\nimport Constants from \"../core/Constants\";\nimport Hotkey from \"../core/Hotkey\";\nimport NormalizationStore from \"./NormalizationStore\";\nimport RegionStore from \"./RegionStore\";\nimport Registry from \"../core/Registry\";\nimport RelationStore from \"./RelationStore\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Tree, { TRAVERSE_STOP } from \"../core/Tree\";\nimport Types from \"../core/Types\";\nimport Utils from \"../utils\";\nimport { AllRegionsType } from \"../regions\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    // @todo this value used `guidGenerator(5)` as default value before\n    // @todo but it calculates once, so all the completions have the same pk\n    // @todo why don't use only `id`?\n    // @todo reverted back to wrong type; maybe it breaks all the deserialisation\n    pk: types.optional(types.string, guidGenerator(5)),\n\n    selected: types.optional(types.boolean, false),\n    type: types.enumeration([\"completion\", \"prediction\"]),\n\n    createdDate: types.optional(types.string, Utils.UDate.currentISODate()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    loadedDate: types.optional(types.Date, new Date()),\n    leadTime: types.maybeNull(types.number),\n\n    //\n    userGenerate: types.optional(types.boolean, true),\n    update: types.optional(types.boolean, false),\n    sentUserGenerate: types.optional(types.boolean, false),\n    localUpdate: types.optional(types.boolean, false),\n\n    honeypot: types.optional(types.boolean, false),\n    skipped: false,\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    history: types.optional(TimeTraveller, { targetPath: \"../root\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    editable: types.optional(types.boolean, true),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    normalizationStore: types.optional(NormalizationStore, {\n      normalizations: [],\n    }),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(types.safeReference(AllRegionsType)),\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n\n    get list() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history = { targetPath: \"../root\" };\n    },\n\n    setEdit(val) {\n      self.editable = val;\n    },\n\n    setGroundTruth(value) {\n      self.honeypot = value;\n      getEnv(self).onGroundTruth(self.store, self, value);\n    },\n\n    sendUserGenerate() {\n      self.sentUserGenerate = true;\n    },\n\n    setLocalUpdate(value) {\n      self.localUpdate = value;\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    updatePersonalKey(value) {\n      self.pk = value;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      self.highlightedNode = node;\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n\n      document.body.style.cursor = Constants.CHOOSE_CURSOR;\n    },\n\n    stopRelationMode() {\n      document.body.style.cursor = Constants.DEFAULT_CURSOR;\n\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions({ deleteReadOnly = false } = {}) {\n      let { regions } = self.regionStore;\n\n      if (deleteReadOnly === false) regions = regions.filter(r => r.readonly === false);\n\n      regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.addRegion(reg);\n      self.regionStore.unselectAll(true);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    loadRegionState(region) {\n      region.states &&\n        region.states.forEach(s => {\n          const mainViewTag = self.names.get(s.name);\n          mainViewTag.unselectAll && mainViewTag.unselectAll();\n          mainViewTag.copyState(s);\n        });\n    },\n\n    unloadRegionState(region) {\n      region.states &&\n        region.states.forEach(s => {\n          const mainViewTag = self.names.get(s.name);\n          mainViewTag.unselectAll && mainViewTag.unselectAll();\n          mainViewTag.perRegionCleanup && mainViewTag.perRegionCleanup();\n        });\n    },\n\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    addNormalization(normalization) {\n      self.normalizationStore.addNormalization();\n    },\n\n    validate() {\n      let ok = true;\n\n      self.traverseTree(function(node) {\n        if (node.required === true) {\n          ok = node.validate();\n          if (ok === false) {\n            ok = false;\n            return TRAVERSE_STOP;\n          }\n        }\n      });\n\n      return ok;\n    },\n\n    traverseTree(cb) {\n      return Tree.traverseTree(self.root, cb);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.regionStore.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      if (region.type === \"polygonregion\") {\n        detach(region);\n        return;\n      }\n\n      destroy(region);\n    },\n\n    afterAttach() {\n      self.traverseTree(node => {\n        if (node.updateValue) node.updateValue(self.store);\n\n        // called when the completion is attached to the main store,\n        // at this point the whole tree is available. This method\n        // may come handy when you have a tag that acts or depends\n        // on other elements in the tree.\n        if (node.completionAttached) node.completionAttached();\n\n        // copy tools from control tags into object tools manager\n        // [DOCS] each object tag may have an assigned tools\n        // manager. This assignment may happen because user asked\n        // for it through the config, or because the attached\n        // control tags are complex and require additional UI\n        // interfaces. Each control tag defines a set of tools it\n        // supports\n        if (node && node.getToolsManager) {\n          const tools = node.getToolsManager();\n          const states = self.toNames.get(node.name);\n\n          states && states.forEach(s => tools.addToolsFromControl(s));\n        }\n      });\n    },\n\n    afterCreate() {\n      //\n      // debugger;\n      if (self.userGenerate && !self.sentUserGenerate) {\n        self.loadedDate = new Date();\n      }\n\n      // initialize toName bindings [DOCS] name & toName are used to\n      // connect different components to each other\n      self.traverseTree(node => {\n        if (node && node.name && node.id) self.names.set(node.name, node.id);\n\n        if (node && node.toname && node.id) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.id);\n          } else {\n            self.toNames.set(node.toname, [node.id]);\n          }\n        }\n      });\n    },\n\n    setupHotKeys() {\n      Hotkey.unbindAll();\n\n      let audiosNum = 0;\n      let audioNode = null;\n      let mod = \"shift+space\";\n      let comb = mod;\n\n      // [TODO] we need to traverse this two times, fix\n      // Hotkeys setup\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) {\n          Hotkey.addKey(node.hotkey, node.onHotKey, undefined, node.hotkeyScope);\n        }\n      });\n\n      self.traverseTree(node => {\n        // add Space hotkey for playbacks of audio, there might be\n        // multiple audios on the screen\n        if (node && !node.hotkey && (node.type === \"audio\" || node.type === \"audioplus\")) {\n          if (audiosNum > 0) comb = mod + \"+\" + (audiosNum + 1);\n          else audioNode = node;\n\n          node.hotkey = comb;\n          Hotkey.addKey(comb, node.onHotKey, \"Play an audio\");\n\n          audiosNum++;\n        }\n      });\n\n      self.traverseTree(node => {\n        /**\n         * Hotkey for controls\n         */\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      if (audioNode && audiosNum > 1) {\n        audioNode.hotkey = mod + \"+1\";\n        Hotkey.addKey(audioNode.hotkey, audioNode.onHotKey);\n        Hotkey.removeKey(mod);\n      }\n\n      // prevent spacebar from scrolling\n      // document.onkeypress = function(e) {\n      //     e = e || window.event;\n\n      //   var charCode = e.keyCode || e.which;\n      //   if (charCode === 32) {\n      //     e.preventDefault();\n      //     return false;\n      //   }\n      // };\n\n      Hotkey.setScope(\"__main__\");\n    },\n\n    serializeCompletion() {\n      const arr = [];\n\n      self.traverseTree(node => {\n        if (node.toStateJSON && !node.perregion) {\n          const val = node.toStateJSON();\n\n          if (val) arr.push(val);\n        }\n      });\n\n      const relations = self.relationStore.serializeCompletion();\n      if (relations) arr.push(relations);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(arr);\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      let objCompletion = json;\n\n      if (typeof objCompletion !== \"object\") {\n        objCompletion = JSON.parse(objCompletion);\n      }\n\n      self._initialCompletionObj = objCompletion;\n\n      objCompletion.forEach(obj => {\n        if (obj[\"type\"] !== \"relation\") {\n          const names = obj.to_name.split(\",\");\n          names.forEach(name => {\n            const toModel = self.names.get(name);\n            if (!toModel) throw new Error(\"No model found for \" + obj.to_name);\n\n            const fromModel = self.names.get(obj.from_name);\n            if (!fromModel) throw new Error(\"No model found for \" + obj.from_name);\n\n            toModel.fromStateJSON(obj, fromModel);\n          });\n        }\n      });\n\n      objCompletion.forEach(obj => {\n        if (obj[\"type\"] === \"relation\") {\n          self.relationStore.deserializeRelation(\n            self.regionStore.findRegion(obj.from_id),\n            self.regionStore.findRegion(obj.to_id),\n            obj.direction,\n            obj.labels,\n          );\n        }\n      });\n\n      self.regionStore.unselectAll();\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    selected: types.maybeNull(types.reference(Completion)),\n\n    completions: types.array(Completion),\n    predictions: types.array(Completion),\n\n    viewingAllCompletions: types.optional(types.boolean, false),\n    viewingAllPredictions: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n  }))\n  .actions(self => {\n    function toggleViewingAll() {\n      if (self.viewingAllCompletions || self.viewingAllPredictions) {\n        self.completions.forEach(c => {\n          c.selected = false;\n          c.editable = false;\n          c.regionStore.unselectAll();\n        });\n\n        self.predictions.forEach(c => {\n          c.selected = false;\n          c.regionStore.unselectAll();\n        });\n      } else {\n        selectCompletion(self.completions[0].id);\n      }\n    }\n\n    function toggleViewingAllPredictions() {\n      self.viewingAllPredictions = !self.viewingAllPredictions;\n\n      if (self.viewingAllPredictions) self.viewingAllCompletions = false;\n\n      toggleViewingAll();\n    }\n\n    function toggleViewingAllCompletions() {\n      self.viewingAllCompletions = !self.viewingAllCompletions;\n\n      if (self.viewingAllCompletions) self.viewingAllPredictions = false;\n\n      toggleViewingAll();\n    }\n\n    function unselectViewingAll() {\n      self.viewingAllCompletions = false;\n      self.viewingAllPredictions = false;\n    }\n\n    function selectItem(id, list) {\n      unselectViewingAll();\n\n      if (self.selected) self.selected.selected = false;\n\n      const c = list.find(c => c.id === id);\n      c.selected = true;\n      self.selected = c;\n\n      return c;\n    }\n\n    /**\n     * Select completion\n     * @param {*} id\n     */\n    function selectCompletion(id) {\n      const { selected } = self;\n      const c = selectItem(id, self.completions);\n\n      c.editable = true;\n      c.setupHotKeys();\n\n      getEnv(self).onSelectCompletion(c, selected);\n\n      return c;\n    }\n\n    function selectPrediction(id) {\n      const p = selectItem(id, self.predictions);\n      p.regionStore.unselectAll();\n\n      return p;\n    }\n\n    function deleteCompletion(completion) {\n      getEnv(self).onDeleteCompletion(self.store, completion);\n\n      /**\n       * MST destroy completion\n       */\n      destroy(completion);\n\n      self.selected = null;\n      /**\n       * Select other completion\n       */\n      if (self.completions.length > 0) {\n        self.selectCompletion(self.completions[0].id);\n      }\n    }\n\n    function addItem(options) {\n      const { user, config } = self.store;\n\n      // convert config to mst model\n      const completionModel = Tree.treeToModel(config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      //\n      let root = modelClass.create(completionModel);\n\n      const id = options[\"id\"];\n      delete options[\"id\"];\n\n      //\n      let node = {\n        id: id || guidGenerator(5),\n        root: root,\n\n        userGenerate: false,\n\n        ...options,\n      };\n\n      if (user && !(\"createdBy\" in node)) node[\"createdBy\"] = user.displayName;\n\n      //\n      return Completion.create(node);\n    }\n\n    function addPrediction(options = {}) {\n      options.editable = false;\n      options.type = \"prediction\";\n\n      const item = addItem(options);\n      self.predictions.unshift(item);\n\n      return item;\n    }\n\n    function addCompletion(options = {}) {\n      options.type = \"completion\";\n\n      const item = addItem(options);\n      self.completions.unshift(item);\n\n      return item;\n    }\n\n    function addCompletionFromPrediction(prediction) {\n      const c = self.addCompletion({ userGenerate: true });\n      const s = prediction._initialCompletionObj;\n\n      // we need to iterate here and rename all ids, as those might\n      // clash with the one in the prediction if used as a reference\n      // somewhere\n      s.forEach(r => {\n        if (\"id\" in r) r[\"id\"] = guidGenerator();\n      });\n\n      selectCompletion(c.id);\n      c.deserializeCompletion(s);\n\n      return c;\n    }\n\n    return {\n      toggleViewingAllCompletions,\n      toggleViewingAllPredictions,\n\n      addPrediction,\n      addCompletion,\n      addCompletionFromPrediction,\n\n      selectCompletion,\n      selectPrediction,\n\n      deleteCompletion,\n    };\n  });\n","import { types, getParent } from \"mobx-state-tree\";\n\n/**\n * Project Store\n */\nconst ProjectStore = types\n  .model(\"Project\", {\n    /**\n     * Project ID\n     */\n    id: types.identifierNumber,\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n  }));\n\nexport default ProjectStore;\n","import { types, onSnapshot, getRoot } from \"mobx-state-tree\";\n\nimport Hotkey from \"../core/Hotkey\";\nimport Utils from \"../utils\";\n\n/**\n * Setting store of Label Studio\n */\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    /**\n     * Hotkey\n     */\n    enableHotkeys: types.optional(types.boolean, true),\n    /**\n     * Hotkey panel\n     */\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    /**\n     * Tooltips preview\n     */\n    enableTooltips: types.optional(types.boolean, false),\n\n    enableLabelTooltips: types.optional(types.boolean, true),\n\n    /**\n     * Keep label selected after creating a region\n     */\n    continuousLabeling: false,\n\n    fullscreen: types.optional(types.boolean, false),\n\n    bottomSidePanel: types.optional(types.boolean, false),\n\n    imageFullSize: types.optional(types.boolean, false),\n\n    enableAutoSave: types.optional(types.boolean, false),\n\n    showLabels: types.optional(types.boolean, false),\n\n    // showScore: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // sandboxed environment may break even on check of this property\n      try {\n        const { localStorage } = window;\n        if (!localStorage) return;\n      } catch (e) {\n        return;\n      }\n\n      const lsKey = \"labelStudio:settings\";\n\n      // load settings from the browser store\n      const lss = localStorage.getItem(lsKey);\n      if (lss) {\n        const lsp = JSON.parse(lss);\n        typeof lsp === \"object\" &&\n          lsp !== null &&\n          Object.keys(lsp).forEach(k => {\n            if (k in self) self[k] = lsp[k];\n          });\n      }\n\n      // capture changes and save it\n      onSnapshot(self, ss => {\n        localStorage.setItem(lsKey, JSON.stringify(ss));\n      });\n    },\n\n    //   toggleShowScore() {\n    //       self.showScore = !self.showScore;\n    // },\n\n    toggleShowLabels() {\n      self.showLabels = !self.showLabels;\n\n      Utils.HTML.toggleLabelsAndScores(self.showLabels);\n\n      // const c = getRoot(self).completionStore.selected;\n      // c.regionStore.regions.forEach(r => {\n      //   // TODO there is no showLables in the regions right now\n      //   return typeof r.showLabels === \"boolean\" && r.setShowLables(self.showLabels);\n      // });\n    },\n\n    toggleContinuousLabeling() {\n      self.continuousLabeling = !self.continuousLabeling;\n    },\n\n    toggleAutoSave() {\n      self.enableAutoSave = !self.enableAutoSave;\n    },\n\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"__main__\");\n      } else {\n        Hotkey.setScope(\"__none__\");\n      }\n    },\n\n    /**\n     * Function to off/on panel of hotkeys\n     */\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    /**\n     * Function to off/on tooltips\n     */\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n\n    toggleFullscreen() {\n      self.fullscreen = !self.fullscreen;\n    },\n\n    toggleBottomSP() {\n      self.bottomSidePanel = !self.bottomSidePanel;\n    },\n\n    toggleImageFS() {\n      self.imageFullSize = !self.imageFullSize;\n    },\n\n    toggleLabelTooltips() {\n      self.enableLabelTooltips = !self.enableLabelTooltips;\n    },\n  }));\n\nexport default SettingsModel;\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\n/**\n * Model for HTTP Basic Authorization\n */\nconst AuthStore = types.model({\n  enable: types.optional(types.boolean, false),\n  username: types.string,\n  password: types.string,\n  to: types.string,\n});\n\n/**\n * Task Store\n */\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.maybeNull(types.number),\n    load: types.optional(types.boolean, false),\n    auth: types.maybeNull(AuthStore),\n    /**\n     * Data of task, may contain an object but in App Store will be transformed into string\n     * MST doesn't support processing of dynamic objects with unkown keys value\n     */\n    data: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else if (typeof self.data === \"object\") {\n        return self.data;\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types } from \"mobx-state-tree\";\n\n/**\n * User store of Label Studio\n */\nconst UserStore = types\n  .model(\"UserStore\", {\n    /**\n     * Personal key of user\n     */\n    pk: types.maybeNull(types.integer),\n    /**\n     * Name of user\n     */\n    firstName: types.maybeNull(types.string),\n    /**\n     * Last name of user\n     */\n    lastName: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get displayName() {\n      if (self.firstName || self.lastName) return `${self.firstName} ${self.lastName}`;\n\n      return \"\";\n    },\n  }));\n\nexport default UserStore;\n","import { types, getEnv } from \"mobx-state-tree\";\n\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\nimport InfoModal from \"../components/Infomodal/Infomodal\";\nimport Project from \"./ProjectStore\";\nimport Settings from \"./SettingsStore\";\nimport Task from \"./TaskStore\";\nimport User from \"./UserStore\";\nimport Utils from \"../utils\";\n\nexport default types\n  .model(\"AppStore\", {\n    /**\n     * XML config\n     */\n    config: types.string,\n\n    /**\n     * Task with data, id and project\n     */\n    task: types.maybeNull(Task),\n\n    project: types.maybeNull(Project),\n\n    /**\n     * Configure the visual UI shown to the user\n     */\n    interfaces: types.array(types.string),\n\n    /**\n     * Flag for labeling of tasks\n     */\n    explore: types.optional(types.boolean, false),\n\n    /**\n     * Completions Store\n     */\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n      predictions: [],\n    }),\n\n    /**\n     * User of Label Studio\n     */\n    user: types.maybeNull(User),\n\n    /**\n     * Debug for development environment\n     */\n    debug: types.optional(types.boolean, true),\n\n    /**\n     * Settings of Label Studio\n     */\n    settings: types.optional(Settings, {}),\n\n    /**\n     * Data of description flag\n     */\n    description: types.maybeNull(types.string),\n    // apiCalls: types.optional(types.boolean, true),\n\n    /**\n     * Flag for settings\n     */\n    showingSettings: types.optional(types.boolean, false),\n    /**\n     * Flag\n     * Description of task in Label Studio\n     */\n    showingDescription: types.optional(types.boolean, false),\n    /**\n     * Loading of Label Studio\n     */\n    isLoading: types.optional(types.boolean, false),\n    /**\n     * Flag for disable task in Label Studio\n     */\n    noTask: types.optional(types.boolean, false),\n    /**\n     * Flag for no access to specific task\n     */\n    noAccess: types.optional(types.boolean, false),\n    /**\n     * Finish of labeling\n     */\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    /**\n     * Get alert\n     */\n    get alert() {\n      return getEnv(self).alert;\n    },\n  }))\n  .actions(self => {\n    /**\n     * Update settings display state\n     */\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    /**\n     * Update description display state\n     */\n    function toggleDescription() {\n      self.showingDescription = !self.showingDescription;\n    }\n\n    function setFlags(flags) {\n      const names = [\"showingSettings\", \"showingDescription\", \"isLoading\", \"noTask\", \"noAccess\", \"labeledSuccess\"];\n\n      for (let n of names) if (n in flags) self[n] = flags[n];\n    }\n\n    /**\n     * Check for interfaces\n     * @param {string} name\n     * @returns {string | undefined}\n     */\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i) !== undefined;\n    }\n\n    function addInterface(name) {\n      return self.interfaces.push(name);\n    }\n\n    /**\n     * Function\n     */\n    function afterCreate() {\n      /**\n       * Hotkey for submit\n       */\n      Hotkey.addKey(\"ctrl+enter\", self.submitCompletion, \"Submit a task\");\n\n      /**\n       * Hotkey for skip task\n       */\n      if (self.hasInterface(\"skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask, \"Skip a task\");\n\n      /**\n       * Hotkey for update completion\n       */\n      if (self.hasInterface(\"update\")) Hotkey.addKey(\"alt+enter\", self.updateCompletion, \"Update a task\");\n\n      /**\n       * Hotkey for delete\n       */\n      Hotkey.addKey(\n        \"ctrl+backspace\",\n        function() {\n          const { selected } = self.completionStore;\n          selected.deleteAllRegions();\n        },\n        \"Delete all regions\",\n      );\n\n      // create relation\n      Hotkey.addKey(\n        \"r\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.highlightedNode && !c.relationMode) {\n            c.startRelationMode(c.highlightedNode);\n          }\n        },\n        \"Create relation when region is selected\",\n      );\n\n      // unselect region\n      Hotkey.addKey(\"u\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode && !c.relationMode) {\n          c.regionStore.unselectAll();\n        }\n      });\n\n      Hotkey.addKey(\"h\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode && !c.relationMode) {\n          c.highlightedNode.toggleHidden();\n        }\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\n        \"escape\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.relationMode) {\n            c.stopRelationMode();\n          }\n        },\n        \"Exit relation mode\",\n      );\n\n      Hotkey.addKey(\n        \"backspace\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.highlightedNode) {\n            c.highlightedNode.deleteRegion();\n          }\n        },\n        \"Delete selected region\",\n      );\n\n      Hotkey.addKey(\n        \"alt+tab\",\n        function() {\n          const c = self.completionStore.selected;\n          c && c.regionStore.selectNext();\n        },\n        \"Circle through entities\",\n      );\n\n      getEnv(self).onLabelStudioLoad(self);\n    }\n\n    /**\n     *\n     * @param {*} taskObject\n     */\n    function assignTask(taskObject) {\n      if (taskObject && !Utils.Checkers.isString(taskObject.data)) {\n        taskObject = {\n          ...taskObject,\n          [taskObject.data]: JSON.stringify(taskObject.data),\n        };\n      }\n      self.task = Task.create(taskObject);\n    }\n\n    /* eslint-disable no-unused-vars */\n    function showModal(message, type = \"warning\") {\n      InfoModal[type](message);\n\n      // InfoModal.warning(\"You need to label at least something!\");\n    }\n    /* eslint-enable no-unused-vars */\n\n    function submitCompletion() {\n      const c = self.completionStore.selected;\n      c.beforeSend();\n\n      if (!c.validate()) return;\n\n      c.sendUserGenerate();\n      getEnv(self).onSubmitCompletion(self, c);\n    }\n\n    function updateCompletion() {\n      const c = self.completionStore.selected;\n      c.beforeSend();\n\n      getEnv(self).onUpdateCompletion(self, c);\n    }\n\n    function skipTask() {\n      getEnv(self).onSkipTask(self);\n    }\n\n    /**\n     * Reset completion store\n     */\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n\n      // const c = self.completionStore.addInitialCompletion();\n\n      // self.completionStore.selectCompletion(c.id);\n    }\n\n    /**\n     * Function to initilaze completion store\n     * Given completions and predictions\n     */\n    function initializeStore({ completions, predictions }) {\n      const _init = (addFun, selectFun) => {\n        return item => {\n          const obj = self.completionStore[addFun](item);\n\n          self.completionStore[selectFun](obj.id);\n          obj.deserializeCompletion(item.result);\n          obj.reinitHistory();\n\n          return obj;\n        };\n      };\n\n      const addPred = _init(\"addPrediction\", \"selectPrediction\");\n      const addComp = _init(\"addCompletion\", \"selectCompletion\");\n\n      predictions && predictions.forEach(p => addPred(p));\n      completions && completions.forEach(c => addComp(c));\n    }\n\n    return {\n      setFlags,\n      addInterface,\n      hasInterface,\n\n      afterCreate,\n      assignTask,\n      resetState,\n      initializeStore,\n\n      skipTask,\n      submitCompletion,\n      updateCompletion,\n\n      toggleSettings,\n      toggleDescription,\n    };\n  });\n","/**\n * Callback on submit completion\n */\nfunction onSubmitCompletion() {}\n\n/**\n * Callback on update completion\n */\nfunction onUpdateCompletion() {}\n\n/**\n * Callback on delete completion\n */\nfunction onDeleteCompletion() {}\n\n/**\n * Callback on skip task\n */\nfunction onSkipTask() {}\n\n/**\n * Callback on task load\n */\nfunction onTaskLoad() {}\n\n/**\n * Callback on Label Studio load\n */\nfunction onLabelStudioLoad() {}\n\n/**\n * Callback when labeled region gets created\n */\nfunction onEntityCreate() {}\n\n/**\n * Callback when labeled region gets deleted\n */\nfunction onEntityDelete() {}\n\n/**\n * Callback when ground truth button gets pressed\n */\nfunction onGroundTruth() {}\n\n/**\n * Callback when a new completion gets selected\n */\nfunction onSelectCompletion(completion, previousCompletion) {}\n\nexport default {\n  onDeleteCompletion,\n  onEntityCreate,\n  onEntityDelete,\n  onGroundTruth,\n  onLabelStudioLoad,\n  onSkipTask,\n  onSubmitCompletion,\n  onTaskLoad,\n  onUpdateCompletion,\n  onSelectCompletion,\n};\n","export default {\n  DONE: \"Done!\",\n  NO_COMP_LEFT: \"No more completions\",\n  NO_NEXT_TASK: \"No more data available for labeling\",\n  NO_ACCESS: \"You don't have access to this task\",\n};\n","import External from \"../core/External\";\nimport Messages from \"../utils/messages\";\n\nfunction getData(task) {\n  if (task && task.data) {\n    return {\n      ...task,\n      data: JSON.stringify(task.data),\n    };\n  }\n\n  return task;\n}\n\nfunction getState(task) {\n  const completions = task && task.completions ? task.completions : null;\n  const predictions = task && task.predictions ? task.predictions : null;\n\n  return {\n    completions: completions,\n    predictions: predictions,\n  };\n}\n\n/**\n * LS will render in this part\n */\nfunction rootElement(element) {\n  const el = document.createElement(\"div\");\n\n  let root = document.getElementById(element);\n\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\n/**\n * Function to configure application with callbacks\n * @param {object} params\n */\nfunction configureApplication(params) {\n  // callbacks for back compatibility\n  const osCB = params.submitCompletion || params.onSubmitCompletion;\n  const ouCB = params.updateCompletion || params.onUpdateCompletion;\n  const odCB = params.deleteCompletion || params.onDeleteCompletion;\n\n  const options = {\n    // communication with the server\n    // fetch: params.fetch || Requests.fetcher,\n    // patch: params.patch || Requests.patch,\n    // post: params.post || Requests.poster,\n    // remove: params.remove || Requests.remover,\n\n    // communication with the user\n    alert: m => console.log(m), // Noop for demo: window.alert(m)\n    messages: { ...Messages, ...params.messages },\n\n    // callbacks and event handlers\n    onSubmitCompletion: params.onSubmitCompletion ? osCB : External.onSubmitCompletion,\n    onUpdateCompletion: params.onUpdateCompletion ? ouCB : External.onUpdateCompletion,\n    onDeleteCompletion: params.onDeleteCompletion ? odCB : External.onDeleteCompletion,\n    onSkipTask: params.onSkipTask ? params.onSkipTask : External.onSkipTask,\n    onTaskLoad: params.onTaskLoad || External.onTaskLoad,\n    onLabelStudioLoad: params.onLabelStudioLoad || External.onLabelStudioLoad,\n    onEntityCreate: params.onEntityCreate || External.onEntityCreate,\n    onEntityDelete: params.onEntityDelete || External.onEntityDelete,\n    onGroundTruth: params.onGroundTruth || External.onGroundTruth,\n    onSelectCompletion: params.onSelectCompletion || External.onSelectCompletion,\n  };\n\n  return options;\n}\n\nexport default { getData, getState, rootElement, configureApplication };\n","import React from \"react\";\nimport Wrapper from '../../hoc/Wrapper';\nimport MessageSnackbar from \"../../components/UI/Snackbar/MessageSnackbar/MessageSnackbar\";\nimport AnnotateApp from \"../../components/AnnotateApp/AnnotateApp\";\nimport { Provider } from \"mobx-react\";\nimport AppStore from \"../../stores/AppStore\";\nimport ProductionEnvironment from \"../../env/production\";\nimport AppContext from '../../context/AppContext';\nimport axios from '../../axios';\nimport Cookie from \"js-cookie\";\n\nconst environment = ProductionEnvironment;\n\nconst _prepData = function (completions, username) {\n    const data = completions.serializeCompletion();\n    const body = JSON.stringify({\n        lead_time: (new Date() - completions.loadedDate) / 1000, // task execution time\n        result: data,\n        createdBy: username,\n        createdDate: completions.createdDate,\n    });\n    return body;\n};\n\n\nclass AnnotatePage extends React.Component {\n\n    static contextType = AppContext\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            snackbarIsOpen: false,\n            store: null,\n            baseUrl: '',\n            main_dataset_id: -1,\n        }\n    }\n\n    closeSnackbarHandler = () => {\n        this.setState({\n            ...this.state,\n            snackbarIsOpen: false\n        })\n    }\n\n    getAnnotateData = (baseUrl) => {\n        this.context.openLoadingHandler()\n        let params;\n        const templateUrl = baseUrl\n        const dataUrl = `${baseUrl}data/`\n        console.log(dataUrl)\n        axios.defaults.headers.common['Authorization'] = Cookie.get(\"token\")\n        axios.get(templateUrl).then((templateResponse) => {\n            axios.get(dataUrl).then((dataRespose) => {\n                params = {\n                    config: `${templateResponse.data.type.config.replaceAll(\"\\r\\n\", \"\")}`,\n                    description: \"توضیحات\",\n                    interfaces: templateResponse.data.type.interface.replaceAll(\" \", \"\").split(',').concat(['submit', 'controls', 'skip', 'update', 'panel', 'side-column', 'completions:menu', 'completions:add-new', 'completions:delete', 'predictions:menu']),\n                    user: {\n                        \"id\": Cookie.get(\"pk\"),\n                        \"first_name\": Cookie.get(\"firstName\"),\n                        \"last_name\": Cookie.get(\"lastName\"),\n                        \"username\": Cookie.get(\"username\"),\n                        \"email\": Cookie.get(\"email\"),\n                    },\n                    task: {\n                        completions: dataRespose.data.completions,\n                        predictions: dataRespose.data.predictions,\n                        id: 1,\n                        data: dataRespose.data.data,\n                    },\n                    onUpdateCompletion: (ls, completion) => { this.onUpdateCompletion(ls, completion) },\n                    onSubmitCompletion: (ls, completion) => { this.onSubmitCompletion(ls, completion) },\n                    onSkipTask: (ls) => { this.onSkipTask(ls) },\n                }\n                params.task = environment.getData(params.task);\n                const app = AppStore.create(params, environment.configureApplication(params));\n                app.initializeStore(environment.getState(params.task));\n                this.setState({\n                    ...this.state,\n                    store: app,\n                    main_dataset_id: dataRespose.data.main_dataset_id,\n                    snackbarIsOpen: true,\n                })\n            })\n        }).catch((error) => {\n            this.context.openMessageDialogHandler({\n                messageType: \"error\",\n                messageText: error.response?.data.detail\n            })\n        }).finally(() => {\n            this.context.closeLoadingHandler()\n        })\n    }\n\n    onUpdateCompletion = (ls, completion) => {\n        this.context.openLoadingHandler()\n        const completions = _prepData(completion, Cookie.get(\"username\"))\n        if (JSON.parse(completions).result[0] == undefined) {\n            this.context.closeLoadingHandler()\n            this.context.openMessageDialogHandler({\n                messageType: \"error\",\n                messageText: ''\n            })\n        } else {\n            axios.defaults.headers.common['Authorization'] = Cookie.get(\"token\")\n            axios.patch(`${this.state.baseUrl}data/${this.state.main_dataset_id.toString()}/`, { completions: completions }).then((response) => {\n                this.getAnnotateData(this.state.baseUrl)\n            }).catch((error) => {\n                this.context.openMessageDialogHandler({\n                    messageType: \"error\",\n                    messageText: error.response?.data.detail,\n                })\n            }).finally(() => {\n                this.context.closeLoadingHandler()\n            })\n        }\n\n    }\n\n    onSubmitCompletion = (ls, completion) => {\n        this.context.openLoadingHandler()\n        const completions = _prepData(completion, Cookie.get(\"username\"))\n        if (JSON.parse(completions).result[0] == undefined) {\n            this.context.closeLoadingHandler()\n            this.context.openMessageDialogHandler({\n                messageType: \"error\",\n                messageText: ''\n            })\n        } else {\n            axios.defaults.headers.common['Authorization'] = Cookie.get(\"token\")\n            axios.patch(`${this.state.baseUrl}data/${this.state.main_dataset_id.toString()}/`, { completions: completions }).then((response) => {\n                this.getAnnotateData(this.state.baseUrl)\n            }).catch((error) => {\n                this.context.openMessageDialogHandler({\n                    messageType: \"error\",\n                    messageText: error.response?.data.detail,\n                })\n            }).finally(() => {\n                this.context.closeLoadingHandler()\n            })\n        }\n    }\n\n    onSkipTask = (ls) => {\n        this.context.openLoadingHandler()\n        axios.defaults.headers.common['Authorization'] = Cookie.get(\"token\")\n        axios.post(`${this.state.baseUrl}back/`).then((response) => {\n            this.getAnnotateData(this.state.baseUrl)\n        }).catch((error) => {\n            this.context.openMessageDialogHandler({\n                messageType: \"error\",\n                messageText: error.response?.data.detail,\n            })\n        }).finally(() => {\n            this.context.closeLoadingHandler()\n        })\n\n    }\n\n    componentDidMount() {\n        const baseUrl = `/api/project/${this.props.match.params.username}/${this.props.match.params.projectSlug}/task/${this.props.match.params.taskSlug}/`\n        this.getAnnotateData(baseUrl)\n        this.setState({\n            ...this.state,\n            baseUrl: baseUrl\n        })\n    }\n\n\n\n    render() {\n        if (this.state.store) {\n            return (\n                <Wrapper>\n                    <MessageSnackbar isOpen={this.state.snackbarIsOpen} messageType={\"success\"} messageText={\"موفقیت‌آمیز بود\"} closeHnadler={this.closeSnackbarHandler}/>\n                    <Provider store={this.state.store}>\n                        <AnnotateApp />\n                    </Provider>\n                </Wrapper>\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default AnnotatePage","import React from \"react\"\nimport LoginPage from \"./pages/LoginPage/LoginPage\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Wrapper from \"./hoc/Wrapper\"\nimport MessageDialog from \"./components/UI/Dialog/MessageDialog/MessageDialog\"\nimport MessageSnackbar from \"./components/UI/Snackbar/MessageSnackbar/MessageSnackbar\"\nimport Loader from './components/UI/Loader/Loader'\nimport { AppContextProvider } from \"./context/AppContext\";\nimport { UserContextProvider } from \"./context/UserContext\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport AnnotatePage from './pages/AnnotatePage/AnnotatePage'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            drawerIsOpen: false,\n            isLoading: false,\n            messageDialogIsOpen: false,\n            messageDialogType: '',\n            messageDialogText: '',\n            messageSnackbarIsOpen: false,\n            messageSnackbarType: '',\n            messageSnackbarText: '',\n            user: {\n                isAuth: false,\n                token: '',\n                pk: 0,\n                firstName: '',\n                lastName: '',\n                username: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    closeLoadingHandler = () => {\n        this.setState({\n            ...this.state,\n            isLoading: false\n        })\n    }\n\n    openLoadingHandler = () => {\n        this.setState({\n            ...this.state,\n            isLoading: true\n        })\n    }\n\n    openMessageDialogHandler = (props) => {\n        this.setState({\n            ...this.state,\n            messageDialogIsOpen: true,\n            messageDialogText: props.messageText,\n            messageDialogType: props.messageType\n        })\n    }\n\n    closeMessageDialogHandler = () => {\n        this.setState({\n            ...this.state,\n            messageDialogIsOpen: false\n        })\n    }\n\n    openMessageSnackbarHandler = (props) => {\n        this.setState({\n            ...this.state,\n            messageSnackbarIsOpen: true,\n            messageSnackbarText: props.messageText,\n            messageSnackbarType: props.messageType\n        })\n    }\n\n    closeMessageSnackbarHandler = () => {\n        this.setState({\n            ...this.state,\n            messageSnackbarIsOpen: false\n        })\n    }\n\n    setUserInformation = (props) => {\n        this.setState({\n            ...this.state,\n            user: {\n                isAuth: props.isAuth,\n                token: props.token,\n                pk: props.pk,\n                firstName: props.firstName,\n                lastName: props.lastName,\n                username: props.username,\n                email: props.email,\n                password: props.password\n            }\n        })\n    }\n\n    openDrawerHandler = () => {\n        this.setState({\n            ...this.state,\n            drawerIsOpen: true\n        })\n    }\n\n    closeDrawerHandler = () => {\n        this.setState({\n            ...this.state,\n            drawerIsOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <AppContextProvider value={{\n                isLoading: this.state.isLoading,\n                openLoadingHandler: this.openLoadingHandler,\n                closeLoadingHandler: this.closeLoadingHandler,\n                messageDialogIsOpen: this.state.messageDialogIsOpen,\n                messageDialogType: this.state.messageDialogType,\n                messageDialogText: this.state.messageDialogText,\n                openMessageDialogHandler: (props) => { this.openMessageDialogHandler(props) },\n                closeMessageDialogHandler: this.closeMessageDialogHandler,\n                messageSnackbarIsOpen: this.state.messageSnackbarIsOpen,\n                messageSnackbarType: this.state.messageSnackbarType,\n                messageSnackbarText: this.state.messageSnackbarText,\n                openMessageSnackbarHandler: (props) => { this.openMessageSnackbarHandler(props) },\n                closeMessageSnackbarHandler: this.closeMessageSnackbarHandler,\n            }}>\n                <UserContextProvider value={{\n                    isAuth: this.state.user.isAuth,\n                    token: this.state.user.token,\n                    pk: this.state.user.pk,\n                    firstName: this.state.user.firstName,\n                    lastName: this.state.user.lastName,\n                    username: this.state.user.username,\n                    email: this.state.user.email,\n                    password: this.state.user.password,\n                    setUserInformation: (props) => { this.setUserInformation(props) }\n                }}>\n                    <Wrapper>\n                        <MessageDialog isOpen={this.state.messageDialogIsOpen} messageType={this.state.messageDialogType} messageText={this.state.messageDialogText} closeDialog={this.closeMessageDialogHandler} />\n                        <MessageSnackbar isOpen={this.state.messageSnackbarIsOpen} messageType={this.state.messageSnackbarType} messageText={this.state.messageSnackbarText} />\n                        <Loader isLoading={this.state.isLoading}></Loader>\n                        <Router>\n                            <Switch>\n                                <Route path=\"/login\" exact component={LoginPage} />\n                                <Route exact path=\"/project/:username/:projectSlug/task/:taskSlug\" component={AnnotatePage} />\n                                <Route exact path=\"/profile\">\n                                    {null}\n                                </Route>\n                                <Route exact path=\"/info\">\n                                    {null}\n                                </Route>\n                                <Route path=\"/\">\n                                    <HomePage drawerIsOpen={this.state.drawerIsOpen} openDrawerHandler={this.openDrawerHandler} closeDrawerHandler={this.closeDrawerHandler} />\n                                </Route>\n                            </Switch>\n                        </Router>\n                    </Wrapper>\n                </UserContextProvider >\n            </AppContextProvider>\n\n\n        )\n    }\n\n}\n\nexport default App","import React from \"react\"\nimport reactDom from \"react-dom\"\n\nimport './index.css'\nimport App from \"./App\"\nimport './Theme/Theme.css'\n\nimport { Provider } from \"mobx-react\";\n\nimport \"./assets/styles/global.scss\";\nimport AnnotateApp from \"./components/AnnotateApp/AnnotateApp\"\nimport AppStore from \"./stores/AppStore\";\nimport ProductionEnvironment from \"./env/production\";\n\n\n\n// const environment = ProductionEnvironment;\n\n// window.LabelStudio = function (element, options) {\n//     let params = options;\n\n//     if (params && params.task) {\n//         params.task = environment.getData(params.task);\n//     }\n\n//     /**\n//      * Configure Application\n//      */\n//     const app = AppStore.create(params, environment.configureApplication(params));\n\n//     /**\n//      * Initialize store\n//      */\n//     app.initializeStore(environment.getState(params.task));\n//     reactDom.render(<Provider store={app}><AnnotateApp /></Provider>, environment.rootElement(element))\n\n//     window.Htx = app;\n//     return app;\n// };\n\nreactDom.render(<App />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}